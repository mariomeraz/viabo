{"version":3,"file":"useToggleStatusCard-DsdEWGTJ.js","sources":["../../../../../frontend/src/app/business/viabo-card/cards/adapters/cardsCommerceKeys.js","../../../../../frontend/src/app/business/viabo-card/cards/adapters/createFundingOrderAdapter.js","../../../../../frontend/src/app/business/viabo-card/cards/adapters/commerceCardTypesAdapter.js","../../../../../frontend/src/app/business/viabo-card/cards/store/commerceCardDetailsStore.js","../../../../../frontend/src/app/shared/adapters/cardMainAdapter.js","../../../../../frontend/src/app/business/viabo-card/cards/services/CommerceCardsRepository.js","../../../../../frontend/src/app/business/viabo-card/all-commerce-cards/adapters/allCommerceCardsKeys.js","../../../../../frontend/src/app/business/dashboard-master/adapters/dashboardMasterKeys.js","../../../../../frontend/src/app/business/viabo-card/cards/hooks/useToggleStatusCard.js"],"sourcesContent":["export const CARDS_COMMERCES_KEYS = {\r\n  CARDS_COMMERCE_LIST: 'cardsCommerce',\r\n  CARD_INFO: 'cardInfo',\r\n  CARD_MOVEMENTS: 'cardMovements',\r\n  MAIN_CARD: 'mainCard',\r\n  TRANSIT_BALANCE: 'transitBalance',\r\n  PAYMENT_PROCESSORS: 'paymentProcessors'\r\n}\r\n","import { getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const CreateFundingOrderAdapter = (values, card) => {\r\n  const speiInProcessorTypes = values?.processorTypes?.find(type => type === '1')\r\n  const payCashInProcessorTypes = values?.processorTypes?.find(type => type === '2')\r\n\r\n  return {\r\n    cardId: card?.id,\r\n    amount: values?.amount.toString(),\r\n    spei: speiInProcessorTypes ? card?.SPEI : '',\r\n    payCash: payCashInProcessorTypes ? '1' : ''\r\n  }\r\n}\r\n\r\nexport const CreateFundingOrderResponseAdapter = response => {\r\n  const decryptedResponse = getDecryptInfo(response?.ciphertext, response?.iv)\r\n\r\n  if (decryptedResponse) {\r\n    return {\r\n      id: decryptedResponse?.id,\r\n      reference: decryptedResponse?.referenceNumber\r\n    }\r\n  } else {\r\n    throw new Error('Algo fallo al obtener la información')\r\n  }\r\n}\r\n","import { getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const CommerceCardTypesAdapter = cardTypes => {\r\n  const decryptedCardTypes = getDecryptInfo(cardTypes?.ciphertext, cardTypes?.iv)\r\n  const dataAdapted =\r\n    decryptedCardTypes?.map(cardType => ({\r\n      id: cardType?.id,\r\n      name: cardType?.name?.toUpperCase()\r\n    })) || []\r\n\r\n  return dataAdapted\r\n}\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  card: null,\r\n  isMainCardSelected: false,\r\n  cardTypeSelected: null,\r\n  mainCard: null,\r\n  selectedCards: [],\r\n  openFundingOrder: false,\r\n  fundingCard: null\r\n}\r\nconst commerceCardDetailsStore = (set, get) => ({\r\n  ...initialState,\r\n  setCard: cardSelected => {\r\n    const { card } = get()\r\n\r\n    set(\r\n      state => ({\r\n        card: { ...card, ...cardSelected }\r\n      }),\r\n      false,\r\n      'SET_CARD'\r\n    )\r\n  },\r\n  resetCard: () => {\r\n    set(\r\n      state => ({\r\n        card: null\r\n      }),\r\n      false,\r\n      'RESET_CARD'\r\n    )\r\n  },\r\n  setSelectedCards: cardsSelected => {\r\n    const { card } = get()\r\n\r\n    set(\r\n      state => ({\r\n        selectedCards: cardsSelected\r\n      }),\r\n      false,\r\n      'SET_SELECTED_CARDS'\r\n    )\r\n  },\r\n  addInfoCard: info => {\r\n    const { card } = get()\r\n    set(\r\n      state => ({\r\n        card: { ...card, ...info }\r\n      }),\r\n      false,\r\n      'SET_INFO_CARD'\r\n    )\r\n  },\r\n  setMainCard: card => {\r\n    set(\r\n      state => ({\r\n        mainCard: card\r\n      }),\r\n      false,\r\n      'SET_MAIN_CARD'\r\n    )\r\n  },\r\n  setSelectedMainCard: isMainCard => {\r\n    set(\r\n      state => ({\r\n        isMainCardSelected: isMainCard\r\n      }),\r\n      false,\r\n      'SET_IS_MAIN_CARD_SELECTED'\r\n    )\r\n  },\r\n  setOpenFundingOrder: open => {\r\n    set(\r\n      state => ({\r\n        openFundingOrder: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_FUNDING_ORDER'\r\n    )\r\n  },\r\n  setFundingCard: card => {\r\n    set(\r\n      state => ({\r\n        fundingCard: card\r\n      }),\r\n      false,\r\n      'SET_FUNDING_CARD'\r\n    )\r\n  },\r\n  resetFundingOrder: () => {\r\n    set(\r\n      state => ({\r\n        fundingCard: null,\r\n        openFundingOrder: false\r\n      }),\r\n      false,\r\n      'RESET_FUNDING_ORDER'\r\n    )\r\n  },\r\n  setCardTypeSelected: cardTypeId => {\r\n    set(\r\n      state => ({\r\n        cardTypeSelected: cardTypeId\r\n      }),\r\n      false,\r\n      'SET_CARD_TYPE_SELECTED'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useCommerceDetailsCard = createStore(commerceCardDetailsStore)\r\n","import { fCurrency, getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const CardMainAdapter = card => {\r\n  const decryptedCard = getDecryptInfo(card?.ciphertext, card?.iv)\r\n  const balance = parseFloat(decryptedCard?.balance === '' ? '0' : decryptedCard?.balance.replace(/,/g, ''))\r\n\r\n  if (decryptedCard) {\r\n    return {\r\n      id: decryptedCard?.cardId,\r\n      SPEI: decryptedCard?.spei,\r\n      balance,\r\n      balanceFormatted: fCurrency(balance),\r\n      cardNumberHidden: 'GLOBAL'\r\n    }\r\n  } else {\r\n    throw new Error('Algo fallo al obtenerla informacion')\r\n  }\r\n}\r\n","import {\r\n  CommerceCardTypesAdapter,\r\n  CommerceTransitBalanceAdapter,\r\n  CreateFundingOrderResponseAdapter\r\n} from '@/app/business/viabo-card/cards/adapters'\r\nimport { CardAdapter, CardMainAdapter, CardMovementsAdapter, CardsAdapter } from '@/app/shared/adapters'\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getCommerceCardTypes = async () => {\r\n  const { data } = await axios.get('/api/payment-processors/of/commerce')\r\n  return CommerceCardTypesAdapter(data)\r\n}\r\n\r\nexport const getEnabledCommerceCards = async cardTypeId => {\r\n  const { data } = await axios.get(`/api/enabled-cards/commerce?paymentProcessorId=${cardTypeId}`)\r\n  return CardsAdapter(data)\r\n}\r\n\r\nexport const getCardInfo = async (cardId, signal) => {\r\n  const { data } = await axios.get(`/api/card/information/${cardId}`, { signal })\r\n  return CardAdapter(data)\r\n}\r\n\r\nexport const changeStatusCard = async card => {\r\n  const { data } = await axios.put(`/api/card/${card?.id}/block/${card?.cardON ? 'unblocked' : 'blocked'}`)\r\n  return card\r\n}\r\n\r\nexport const transactionsCard = async transactions => {\r\n  const { data } = await axios.post('/api/card/transactions', transactions?.data)\r\n  return transactions\r\n}\r\n\r\nexport const getCardMovements = async (cardId, initialDate, finalDate, signal) => {\r\n  const fetchURL = new URL('/api/card/movements', window.location.origin)\r\n  fetchURL.searchParams.set('cardId', cardId)\r\n  fetchURL.searchParams.set('startDate', initialDate)\r\n  fetchURL.searchParams.set('endDate', finalDate)\r\n  const { data } = await axios.get(fetchURL.href, {\r\n    timeout: 30000,\r\n    signal\r\n  })\r\n  return CardMovementsAdapter(data)\r\n}\r\n\r\nexport const getMainCardCommerce = async (cardTypeId, signal) => {\r\n  const { data } = await axios.get(`/api/main-card/information?paymentProcessorId=${cardTypeId}`, { signal })\r\n  return CardMainAdapter(data)\r\n}\r\n\r\nexport const getTransitBalance = async cardTypeId => {\r\n  const { data } = await axios.get(`/api/card-transactions/commerce?paymentProcessorId=${cardTypeId}`)\r\n  return CommerceTransitBalanceAdapter(data)\r\n}\r\n\r\nexport const sendMessageCards = async message => {\r\n  const { data } = await axios.post('/api/cards/send/message', message)\r\n  return data\r\n}\r\n\r\nexport const sharedChargeKeys = async emails => {\r\n  const { data } = await axios.post('/api/card/send/spei-key', emails)\r\n  return data\r\n}\r\n\r\nexport const createFundingOrder = async order => {\r\n  const { data } = await axios.post('/api/funding-order/new', order)\r\n  return CreateFundingOrderResponseAdapter(data)\r\n}\r\n\r\nexport const sharedFundingOrder = async order => {\r\n  const { data } = await axios.post('/api/funding-order/send', order)\r\n  return data\r\n}\r\n","export const ALL_COMMERCE_CARDS_KEYS = {\r\n  LIST: 'commerce-all-cards'\r\n}\r\n","export const DASHBOARD_MASTER_KEYS = {\r\n  GLOBAL_CARDS: 'global-cards',\r\n  MOVEMENTS: 'master-movements',\r\n  COMMERCE_CARDS: 'commerce-cards'\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { ALL_COMMERCE_CARDS_KEYS } from '../../all-commerce-cards/adapters'\r\n\r\nimport { DASHBOARD_MASTER_KEYS } from '@/app/business/dashboard-master/adapters/dashboardMasterKeys'\r\nimport { CARDS_COMMERCES_KEYS } from '@/app/business/viabo-card/cards/adapters'\r\nimport { changeStatusCard } from '@/app/business/viabo-card/cards/services'\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useToggleStatusCard = (options = {}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [customError, setCustomError] = useState(null)\r\n  const client = useQueryClient()\r\n\r\n  const register = useMutation(changeStatusCard, {\r\n    onSuccess: card => {\r\n      setCustomError(null)\r\n      client.refetchQueries([CARDS_COMMERCES_KEYS.CARD_INFO, card?.id])\r\n      client.invalidateQueries([ALL_COMMERCE_CARDS_KEYS.LIST])\r\n      client.invalidateQueries([DASHBOARD_MASTER_KEYS.GLOBAL_CARDS])\r\n      enqueueSnackbar(card?.cardON ? 'Se encendió la tarjeta con éxito' : 'Se apagó la tarjeta con éxito', {\r\n        variant: 'success',\r\n        autoHideDuration: 5000\r\n      })\r\n    },\r\n    onError: error => {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operacion en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      enqueueSnackbar(errorFormatted, {\r\n        variant: getNotificationTypeByErrorCode(error),\r\n        autoHideDuration: 5000\r\n      })\r\n      setCustomError(errorFormatted)\r\n    },\r\n    ...options\r\n  })\r\n\r\n  return {\r\n    ...register,\r\n    error: customError || null\r\n  }\r\n}\r\n"],"names":["CARDS_COMMERCES_KEYS","CreateFundingOrderAdapter","values","card","speiInProcessorTypes","_a","type","payCashInProcessorTypes","_b","CreateFundingOrderResponseAdapter","response","decryptedResponse","getDecryptInfo","CommerceCardTypesAdapter","cardTypes","decryptedCardTypes","cardType","initialState","commerceCardDetailsStore","set","get","cardSelected","state","cardsSelected","info","isMainCard","open","cardTypeId","useCommerceDetailsCard","createStore","CardMainAdapter","decryptedCard","balance","fCurrency","getCommerceCardTypes","data","axios","getEnabledCommerceCards","CardsAdapter","getCardInfo","cardId","signal","CardAdapter","changeStatusCard","transactionsCard","transactions","getCardMovements","initialDate","finalDate","fetchURL","CardMovementsAdapter","getMainCardCommerce","createFundingOrder","order","sharedFundingOrder","ALL_COMMERCE_CARDS_KEYS","DASHBOARD_MASTER_KEYS","useToggleStatusCard","options","enqueueSnackbar","useSnackbar","customError","setCustomError","useState","client","useQueryClient","useMutation","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode"],"mappings":"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"}
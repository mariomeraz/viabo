{"version":3,"file":"TicketMessageInput-2lIunjBw.js","sources":["../../../../../frontend/src/app/support/ticket-support-list/components/conversation/TicketMessageInput.jsx"],"sourcesContent":["import { memo, useRef } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { AttachFileSharp, SendOutlined } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Box, Divider, IconButton, Input, Stack } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\nimport { Form, FormikProvider } from 'formik'\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  minHeight: 56,\r\n  display: 'flex',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  paddingLeft: theme.spacing(2)\r\n}))\r\n\r\nconst TicketMessageInput = ({ formik, handleAddMessage, handleFileChange, isLoading }) => {\r\n  const fileInputRef = useRef(null)\r\n\r\n  const handleAttach = () => {\r\n    fileInputRef.current?.click()\r\n  }\r\n\r\n  const { handleSubmit, isSubmitting, values, setFieldValue, touched, errors, validateForm } = formik\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleAddMessage} className=\"animate__animated animate__fadeIn\">\r\n        <Box>\r\n          <RootStyle>\r\n            <Input\r\n              name=\"message\"\r\n              disabled={isLoading}\r\n              fullWidth\r\n              value={values.message}\r\n              disableUnderline\r\n              multiline\r\n              rows={4}\r\n              error={Boolean(touched.message && errors.message)}\r\n              sx={{ pt: 2 }}\r\n              onChange={event => setFieldValue('message', event.target.value)}\r\n              placeholder=\"Escribe tu mensaje ...\"\r\n              autoFocus\r\n              // startAdornment={\r\n              //   <InputAdornment position=\"start\">\r\n              //     {/* <EmojiPicker disabled={disabled} value={message} setValue={setMessage} /> */}\r\n              //   </InputAdornment>\r\n              // }\r\n              endAdornment={\r\n                <Stack direction=\"row\" spacing={1} sx={{ flexShrink: 0, mr: 1.5 }}>\r\n                  <IconButton disabled={isLoading} size=\"small\" onClick={handleAttach}>\r\n                    <AttachFileSharp icon=\"eva:attach-2-fill\" width={22} height={22} />\r\n                  </IconButton>\r\n                </Stack>\r\n              }\r\n            />\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <LoadingButton\r\n              type=\"submit\"\r\n              loading={isLoading}\r\n              color=\"primary\"\r\n              disabled={values?.message === ''}\r\n              sx={{ mx: 1 }}\r\n            >\r\n              <SendOutlined width={22} height={22} />\r\n            </LoadingButton>\r\n          </RootStyle>\r\n          <input\r\n            name=\"attachments\"\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n            onChange={handleFileChange}\r\n            multiple\r\n          />\r\n        </Box>\r\n      </Form>\r\n    </FormikProvider>\r\n  )\r\n}\r\n\r\nTicketMessageInput.propTypes = {\r\n  formik: PropTypes.shape({\r\n    errors: PropTypes.any,\r\n    handleSubmit: PropTypes.any,\r\n    isSubmitting: PropTypes.any,\r\n    setFieldValue: PropTypes.func,\r\n    touched: PropTypes.any,\r\n    validateForm: PropTypes.any,\r\n    values: PropTypes.any\r\n  }),\r\n  handleAddMessage: PropTypes.any,\r\n  handleFileChange: PropTypes.any,\r\n  isLoading: PropTypes.any\r\n}\r\n\r\nexport default memo(TicketMessageInput)\r\n"],"names":["RootStyle","styled","theme","minHeight","display","position","alignItems","paddingLeft","spacing","TicketMessageInput","formik","handleAddMessage","handleFileChange","isLoading","fileInputRef","useRef","handleAttach","current","click","handleSubmit","isSubmitting","values","setFieldValue","touched","errors","validateForm","jsx","FormikProvider","Form","Box","jsxs","Input","message","Boolean","pt","event","target","value","Stack","flexShrink","mr","IconButton","AttachFileSharp","Divider","LoadingButton","mx","SendOutlined","propTypes","PropTypes","shape","any","func","memo"],"mappings":"wKAUA,MAAMA,EAAYC,EAAO,KAAK,EAAE,CAAC,CAAEC,MAAAA,CAAM,KAAO,CAC9CC,UAAW,GACXC,QAAS,OACTC,SAAU,WACVC,WAAY,SACZC,YAAaL,EAAMM,QAAQ,CAAC,CAC9B,EAAE,EAEIC,EAAqBA,CAAC,CAAEC,OAAAA,EAAQC,iBAAAA,EAAkBC,iBAAAA,EAAkBC,UAAAA,CAAU,IAAM,CAClFC,MAAAA,EAAeC,SAAO,IAAI,EAE1BC,EAAeA,IAAM,QACzBF,EAAAA,EAAaG,UAAbH,MAAAA,EAAsBI,OAAM,EAGxB,CAAEC,aAAAA,EAAcC,aAAAA,EAAcC,OAAAA,EAAQC,cAAAA,EAAeC,QAAAA,EAASC,OAAAA,EAAQC,aAAAA,CAAiBf,EAAAA,EAE7F,OACGgB,EAAA,IAAAC,EAAA,CAAe,MAAOjB,EACrB,eAACkB,EAAK,CAAA,aAAa,MAAM,WAAU,GAAC,SAAUjB,EAAkB,UAAU,oCACxE,gBAACkB,EACC,CAAA,SAAA,CAAAC,OAAC9B,EACC,CAAA,SAAA,CAAA0B,EAAA,IAACK,EAAA,CACC,KAAK,UACL,SAAUlB,EACV,UAAS,GACT,MAAOQ,EAAOW,QACd,iBAAgB,GAChB,UAAS,GACT,KAAM,EACN,MAAOC,GAAQV,EAAQS,SAAWR,EAAOQ,SACzC,GAAI,CAAEE,GAAI,CAAE,EACZ,SAAmBZ,GAAAA,EAAc,UAAWa,EAAMC,OAAOC,KAAK,EAC9D,YAAY,yBACZ,UAAA,GAMA,aACGX,EAAAA,IAAAY,EAAA,CAAM,UAAU,MAAM,QAAS,EAAG,GAAI,CAAEC,WAAY,EAAGC,GAAI,GAAA,EAC1D,SAACd,MAAAe,EAAA,CAAW,SAAU5B,EAAW,KAAK,QAAQ,QAASG,EACrD,SAACU,EAAA,IAAAgB,EAAA,CAAgB,KAAK,oBAAoB,MAAO,GAAI,OAAQ,EAAA,CAAM,CACrE,CAAA,EACF,CAAA,CAEF,EACDhB,EAAA,IAAAiB,EAAA,CAAQ,YAAY,WAAW,SAAQ,GAAG,EAC1CjB,EAAAA,IAAAkB,EAAA,CACC,KAAK,SACL,QAAS/B,EACT,MAAM,UACN,UAAUQ,GAAAA,YAAAA,EAAQW,WAAY,GAC9B,GAAI,CAAEa,GAAI,CAAA,EAEV,SAACnB,MAAAoB,EAAA,CAAa,MAAO,GAAI,OAAQ,EAAM,CAAA,EACzC,CAAA,EACF,EACApB,MAAC,SACC,KAAK,cACL,KAAK,OACL,IAAKZ,EACL,MAAO,CAAEV,QAAS,MAClB,EAAA,SAAUQ,EACV,SAAQ,EACR,CAAA,CAAA,EACJ,EACF,CACF,CAAA,CAEJ,EAEAH,EAAmBsC,UAAY,CAC7BrC,OAAQsC,EAAUC,MAAM,CACtBzB,OAAQwB,EAAUE,IAClB/B,aAAc6B,EAAUE,IACxB9B,aAAc4B,EAAUE,IACxB5B,cAAe0B,EAAUG,KACzB5B,QAASyB,EAAUE,IACnBzB,aAAcuB,EAAUE,IACxB7B,OAAQ2B,EAAUE,GAAAA,CACnB,EACDvC,iBAAkBqC,EAAUE,IAC5BtC,iBAAkBoC,EAAUE,IAC5BrC,UAAWmC,EAAUE,GACvB,EAEA,MAAeE,EAAAA,EAAAA,KAAK3C,CAAkB"}
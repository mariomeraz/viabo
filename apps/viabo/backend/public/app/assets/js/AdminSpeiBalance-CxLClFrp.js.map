{"version":3,"file":"AdminSpeiBalance-CxLClFrp.js","sources":["../../../../../frontend/src/app/business/viabo-spei/shared/hooks/useFindSpeiBalanceResume.js","../../../../../frontend/src/app/business/viabo-spei/dashboard/components/balance/AdminSpeiBalanceCard.jsx","../../../../../frontend/src/app/business/viabo-spei/dashboard/components/balance/AdminSpeiFilterBalance.jsx","../../../../../frontend/src/app/business/viabo-spei/dashboard/components/balance/AdminsSpeiCardAccount.jsx","../../../../../frontend/src/app/business/viabo-spei/dashboard/components/accounts/AdminSpeiAccounts.jsx","../../../../../frontend/src/app/business/viabo-spei/dashboard/components/balance/AdminSpeiBalance.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { endOfDay, format, startOfDay } from 'date-fns'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { VIABO_SPEI_SHARED_KEYS } from '../adapters'\r\nimport { getBalanceResumeViaboSpei } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindSpeiBalanceResume = (startDate, endDate, account, options = {}) => {\r\n  const initialDate = format(startOfDay(startDate), 'yyyy-MM-dd')\r\n  const finalDate = format(endOfDay(endDate), 'yyyy-MM-dd')\r\n\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [VIABO_SPEI_SHARED_KEYS.BALANCE_RESUME],\r\n    queryFn: ({ signal }) => getBalanceResumeViaboSpei({ initialDate, endDate: finalDate, account }),\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener el resumen del balance de la cuenta stp. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { Box, Stack, Typography } from '@mui/material'\r\n\r\nimport { CardViaboSpeiStyle } from '@/app/business/viabo-spei/shared/components'\r\n\r\nexport const AdminSpeiBalanceCard = ({ title, value, transactions, icon }) => (\r\n  <Box display={'flex'} component={CardViaboSpeiStyle} variant=\"outlined\" flexDirection={'column'} p={3}>\r\n    <Stack justifyContent={'space-between'} flexDirection={'row'}>\r\n      <Typography variant=\"subtitle1\" color={'text.secondary'}>\r\n        {title}\r\n      </Typography>\r\n      {icon}\r\n    </Stack>\r\n    <Typography sx={{ typography: 'h4' }}>{value}</Typography>\r\n    <Typography sx={{ typography: 'subtitle2', fontWeight: 500 }}>{transactions} Transacciones</Typography>\r\n  </Box>\r\n)\r\n\r\nAdminSpeiBalanceCard.propTypes = {\r\n  icon: PropTypes.any,\r\n  title: PropTypes.any,\r\n  transactions: PropTypes.any,\r\n  value: PropTypes.any\r\n}\r\n","import { useEffect, useMemo, useState } from 'react'\n\nimport { sub } from 'date-fns'\n\nimport { useAdminDashboardSpeiStore } from '@/app/business/viabo-spei/dashboard/store'\nimport { useFindSpeiBalanceResume } from '@/app/business/viabo-spei/shared/hooks'\nimport { InputDateRange } from '@/shared/components/form'\n\nexport const AdminSpeiFilterBalance = () => {\n  const setFilter = useAdminDashboardSpeiStore(state => state.setBalanceFilter)\n  const setBalance = useAdminDashboardSpeiStore(state => state.setBalanceResume)\n  const filterDate = useAdminDashboardSpeiStore(state => state.balanceFilter)\n  const selectedAccount = useAdminDashboardSpeiStore(state => state.selectedAccount)\n\n  const currentDate = new Date()\n  const initialStartDate = useMemo(\n    () => (filterDate?.startDate ? new Date(filterDate?.startDate) : sub(currentDate, { days: 30 })),\n    [filterDate?.startDate]\n  )\n  const initialEndDate = useMemo(\n    () => (filterDate?.endDate ? new Date(filterDate?.endDate) : currentDate),\n    [filterDate?.endDate]\n  )\n\n  const [startDate, setStartDate] = useState(initialStartDate)\n  const [endDate, setEndDate] = useState(initialEndDate)\n\n  const { data, refetch, isError } = useFindSpeiBalanceResume(startDate, endDate, selectedAccount?.account?.number, {\n    enabled: !!selectedAccount?.account?.number\n  })\n\n  useEffect(() => {\n    if (startDate && endDate && selectedAccount?.account?.number) {\n      refetch()\n      setFilter({ startDate, endDate })\n    }\n  }, [startDate, endDate, selectedAccount?.account?.number])\n\n  useEffect(() => {\n    if (data) {\n      setBalance(data)\n    }\n  }, [data])\n\n  useEffect(() => {\n    if (isError) {\n      setBalance(null)\n    }\n  }, [isError])\n\n  const handleDateRange = range => {\n    const { startDate, endDate } = range\n    if (endDate !== null && startDate !== null) {\n      setEndDate(endDate)\n      setStartDate(startDate)\n    }\n  }\n\n  return <InputDateRange startDate={startDate} endDate={endDate} onSubmit={handleDateRange} />\n}\n","import { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Person } from '@mui/icons-material'\r\nimport { Avatar, Box, CardContent, CardHeader, IconButton, Stack, Typography, alpha, styled } from '@mui/material'\r\nimport { PiEyeBold, PiEyeClosedBold } from 'react-icons/pi'\r\n\r\nimport { FullLogo } from '@/shared/components/images'\r\n\r\nconst HEIGHT = 250\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  height: HEIGHT,\r\n  borderRadius: Number(theme.shape.borderRadius) * 2\r\n}))\r\n\r\nconst CardItemStyle = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  height: HEIGHT - 16,\r\n  padding: theme.spacing(3),\r\n  // color: theme.palette.common.white,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  // backgroundColor: 'inherit',\r\n  background: `linear-gradient(to right, ${alpha(\r\n    theme.palette.mode === 'dark' ? theme.palette.secondary.dark : theme.palette.primary.lighter,\r\n    0.7\r\n  )}, \r\n  ${theme.palette.mode === 'light' ? alpha(theme.palette.info.light, 0.7) : 'rgba(22, 28, 36, 0.4)'}\r\n  )`,\r\n  // backgroundSize: 'cover',\r\n  backgroundRepeat: 'no-repeat',\r\n  backdropFilter: 'blur(40px)',\r\n  borderRadius: Number(theme.shape.borderRadius) * 2,\r\n  boxShadow: theme.customShadows.card\r\n}))\r\n\r\nconst shadowStyle = {\r\n  mx: 'auto',\r\n  width: 'calc(100% - 16px)',\r\n  borderRadius: 2,\r\n  position: 'absolute',\r\n  height: 200,\r\n  zIndex: 8,\r\n  bottom: 8,\r\n  left: 0,\r\n  right: 0,\r\n  bgcolor: 'grey.500',\r\n  backdropFilter: 'blur(40px)',\r\n  opacity: 0.32\r\n}\r\n\r\nexport const AdminSpeiCardAccount = ({ stpAccount }) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          zIndex: 9\r\n        }}\r\n      >\r\n        <CardItemStyle>\r\n          <CardHeader\r\n            sx={{ p: 0, pb: 3 }}\r\n            avatar={\r\n              <Avatar sx={{ backgroundColor: theme => theme.palette.background.default, width: 35, height: 35 }}>\r\n                <Person color=\"primary\" sx={{ width: 25, height: 25 }} />\r\n              </Avatar>\r\n            }\r\n            title={<Typography sx={{ typography: 'subtitle1' }}>{stpAccount?.name}</Typography>}\r\n            subheader={stpAccount?.type}\r\n          />\r\n          <CardContent sx={{ p: 0, display: 'flex' }}>\r\n            <Stack gap={3} flex={1}>\r\n              <Stack gap={0}>\r\n                <Stack direction={'row'} spacing={1} alignItems={'center'}>\r\n                  <Typography sx={{ typography: 'h6' }}>\r\n                    {show ? stpAccount?.account?.number : stpAccount?.account?.hidden}\r\n                  </Typography>\r\n                  <Box>\r\n                    <IconButton size={'small'} color=\"inherit\" onClick={() => setShow(!show)} sx={{ opacity: 0.7 }}>\r\n                      {show ? <PiEyeBold /> : <PiEyeClosedBold />}\r\n                    </IconButton>\r\n                  </Box>\r\n                </Stack>\r\n                <Typography color={'primary.main'} sx={{ typography: 'subtitle2' }}>\r\n                  Cuenta Origen | STP\r\n                </Typography>\r\n              </Stack>\r\n\r\n              <Stack gap={0} justifyContent={'space-between'} flexDirection={'row'}>\r\n                <Stack flex={1}>\r\n                  <Typography sx={{ typography: 'h6' }}>{stpAccount?.totalBalance?.format}</Typography>\r\n                  <Typography color={'primary.main'} sx={{ typography: 'subtitle2' }}>\r\n                    Balance Total\r\n                  </Typography>\r\n                </Stack>\r\n                <Stack direction={'row'} spacing={1} alignItems={'center'} justifyContent={'center'}>\r\n                  <Stack direction={'row'} spacing={1} alignItems={'center'} justifyContent={'center'}>\r\n                    <FullLogo sx={{ width: 50 }} />\r\n                    <Typography variant=\"h5\" color={'primary.main'}>\r\n                      |\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color={'primary.main'}>\r\n                      spei\r\n                    </Typography>\r\n                  </Stack>\r\n                </Stack>\r\n              </Stack>\r\n            </Stack>\r\n          </CardContent>\r\n        </CardItemStyle>\r\n      </Box>\r\n\r\n      <Box sx={{ ...shadowStyle }} />\r\n      <Box\r\n        sx={{\r\n          ...shadowStyle,\r\n          opacity: 0.16,\r\n          bottom: 0,\r\n          zIndex: 7,\r\n          width: 'calc(100% - 40px)'\r\n        }}\r\n      />\r\n    </RootStyle>\r\n  )\r\n}\r\n\r\nAdminSpeiCardAccount.propTypes = {\r\n  stpAccount: PropTypes.shape({\r\n    account: PropTypes.shape({\r\n      hidden: PropTypes.any,\r\n      number: PropTypes.any\r\n    }),\r\n    balance: PropTypes.shape({\r\n      format: PropTypes.any\r\n    }),\r\n    name: PropTypes.any,\r\n    totalBalance: PropTypes.shape({\r\n      format: PropTypes.any\r\n    }),\r\n    type: PropTypes.any\r\n  })\r\n}\r\n","import { useEffect, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n  Alert,\r\n  Autocomplete,\r\n  Box,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n  alpha,\r\n  useTheme\r\n} from '@mui/material'\r\n\r\nimport { STP_ACCOUNT_TYPES, getTitleAccountsByStpAccountType } from '../../constants'\r\nimport { useAdminDashboardSpeiStore } from '../../store'\r\nimport { AdminSpeiCardAccount } from '../balance/AdminsSpeiCardAccount'\r\n\r\nimport {\r\n  ButtonViaboSpei,\r\n  CardViaboSpeiStyle,\r\n  borderColorViaboSpeiStyle\r\n} from '@/app/business/viabo-spei/shared/components'\r\nimport { CircularLoading } from '@/shared/components/loadings'\r\n\r\nexport const AdminSpeiAccounts = ({ isEmptyAccount, isLoading }) => {\r\n  const theme = useTheme()\r\n  const { setOpenSpeiOut, setOpenTransactions, stpAccounts, selectedAccount, setSelectedAccount } =\r\n    useAdminDashboardSpeiStore()\r\n  const setCompanies = useAdminDashboardSpeiStore(state => state.setCompanies)\r\n\r\n  const title = useMemo(() => getTitleAccountsByStpAccountType(stpAccounts?.type), [stpAccounts])\r\n\r\n  const handleChangeCompany = (e, newValue) => {\r\n    setSelectedAccount(newValue)\r\n  }\r\n\r\n  const options = useMemo(() => {\r\n    if (stpAccounts?.type === STP_ACCOUNT_TYPES.CONCENTRATOR) {\r\n      return stpAccounts?.accounts || []\r\n    }\r\n\r\n    if (stpAccounts?.type === STP_ACCOUNT_TYPES.COST_CENTER) {\r\n      return selectedAccount?.companies || []\r\n    }\r\n    return stpAccounts?.accounts || []\r\n  }, [stpAccounts, selectedAccount])\r\n\r\n  useEffect(() => {\r\n    if (stpAccounts?.type === STP_ACCOUNT_TYPES.CONCENTRATOR) {\r\n      return setCompanies(selectedAccount?.companies || [])\r\n    }\r\n\r\n    if (stpAccounts?.type === STP_ACCOUNT_TYPES.COST_CENTER) {\r\n      return setCompanies(selectedAccount?.companies || [])\r\n    }\r\n\r\n    return setCompanies(stpAccounts?.accounts?.filter(account => account?.id !== selectedAccount?.id) || [])\r\n  }, [stpAccounts, selectedAccount])\r\n\r\n  return (\r\n    <Box display={'flex'} component={CardViaboSpeiStyle} variant=\"outlined\" flexDirection={'column'}>\r\n      <CardHeader\r\n        sx={{ p: 2 }}\r\n        title={\r\n          <Stack flexDirection={'row'} justifyContent={'space-between'} alignItems={'center'}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <Typography variant={'h6'}>{title}</Typography>\r\n            </Box>\r\n            {stpAccounts?.accounts?.length > 1 && (\r\n              <Stack flexGrow={1}>\r\n                <Autocomplete\r\n                  disableClearable\r\n                  options={options || []}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  value={selectedAccount}\r\n                  onChange={handleChangeCompany}\r\n                  getOptionLabel={option => option?.label || ''}\r\n                  getOptionDisabled={option => option?.isDisabled}\r\n                  isOptionEqualToValue={(option, current) => option?.value === current?.value}\r\n                  renderInput={params => (\r\n                    <TextField\r\n                      {...params}\r\n                      label={title}\r\n                      placeholder=\"Seleccionar\"\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        sx: {\r\n                          borderRadius: theme => Number(1),\r\n                          borderColor: borderColorViaboSpeiStyle\r\n                        }\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Stack>\r\n            )}\r\n          </Stack>\r\n        }\r\n      />\r\n      <Divider sx={{ borderColor: alpha('#CFDBD5', 0.7) }} />\r\n      <CardContent sx={{ p: 4, display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n        {isLoading && (\r\n          <Stack justifyContent={'center'} alignItems={'center'}>\r\n            <CircularLoading />\r\n          </Stack>\r\n        )}\r\n        {isEmptyAccount && !isLoading && <Alert severity=\"info\">No tienes {title} asignados</Alert>}\r\n        {!isEmptyAccount && !isLoading && (\r\n          <>\r\n            <Box mb={2}>\r\n              <AdminSpeiCardAccount stpAccount={selectedAccount} />\r\n            </Box>\r\n            <ButtonViaboSpei\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              sx={{ color: 'text.primary' }}\r\n              onClick={() => setOpenSpeiOut(true)}\r\n              startIcon={\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"18\"\r\n                  height=\"18\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke={theme.palette.text.primary}\r\n                  strokeWidth={2}\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  fill=\"none\"\r\n                >\r\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                  <path d=\"M12 19h-6a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5\" />\r\n                  <path d=\"M3 10h18\" />\r\n                  <path d=\"M16 19h6\" />\r\n                  <path d=\"M19 16l3 3l-3 3\" />\r\n                  <path d=\"M7.005 15h.005\" />\r\n                  <path d=\"M11 15h2\" />\r\n                </svg>\r\n              }\r\n            >\r\n              SPEI OUT\r\n            </ButtonViaboSpei>\r\n            <ButtonViaboSpei\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              sx={{ color: 'text.primary' }}\r\n              onClick={() => setOpenTransactions(true)}\r\n              startIcon={\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"18\"\r\n                  height=\"18\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  strokeWidth=\"1.5\"\r\n                  stroke={theme.palette.text.primary}\r\n                  fill=\"none\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                  <path d=\"M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2\" />\r\n                  <path d=\"M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z\" />\r\n                  <path d=\"M9 17v-5\" />\r\n                  <path d=\"M12 17v-1\" />\r\n                  <path d=\"M15 17v-3\" />\r\n                </svg>\r\n              }\r\n            >\r\n              Detalles Movimientos\r\n            </ButtonViaboSpei>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Box>\r\n  )\r\n}\r\n\r\nAdminSpeiAccounts.propTypes = {\r\n  isEmptyAccount: PropTypes.any,\r\n  isLoading: PropTypes.any\r\n}\r\n","import PropTypes from 'prop-types'\n\nimport { NorthEast, SouthWest } from '@mui/icons-material'\nimport { Grid, Stack } from '@mui/material'\n\nimport { AdminSpeiBalanceCard } from './AdminSpeiBalanceCard'\nimport { AdminSpeiFilterBalance } from './AdminSpeiFilterBalance'\n\nimport { AdminSpeiAccounts } from '../accounts/AdminSpeiAccounts'\n\nimport { useAdminDashboardSpeiStore } from '@/app/business/viabo-spei/dashboard/store'\n\nconst AdminSpeiBalance = ({ isEmptyAccount, isLoading }) => {\n  const balance = useAdminDashboardSpeiStore(state => state.balanceResume)\n\n  return (\n    <Stack gap={3}>\n      <AdminSpeiFilterBalance />\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <AdminSpeiBalanceCard\n            title={'Depósitos'}\n            value={balance?.deposits?.currency || '$0.00'}\n            transactions={balance?.deposits?.count || 0}\n            icon={<SouthWest color=\"success\" />}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <AdminSpeiBalanceCard\n            title={'Transferencias'}\n            value={balance?.transfers?.currency || '$0.00'}\n            transactions={balance?.transfers?.count || 0}\n            icon={<NorthEast color=\"error\" />}\n          />\n        </Grid>\n      </Grid>\n\n      <AdminSpeiAccounts isEmptyAccount={isEmptyAccount} isLoading={isLoading} />\n    </Stack>\n  )\n}\n\nAdminSpeiBalance.propTypes = {\n  isEmptyAccount: PropTypes.any,\n  isLoading: PropTypes.any\n}\nexport default AdminSpeiBalance\n"],"names":["useFindSpeiBalanceResume","startDate","endDate","account","options","initialDate","format","startOfDay","finalDate","endOfDay","customError","setCustomError","useState","query","useQuery","VIABO_SPEI_SHARED_KEYS","signal","getBalanceResumeViaboSpei","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode","AdminSpeiBalanceCard","title","value","transactions","icon","jsxs","Box","CardViaboSpeiStyle","Stack","jsx","Typography","typography","fontWeight","propTypes","PropTypes","any","AdminSpeiFilterBalance","setFilter","useAdminDashboardSpeiStore","state","setBalanceFilter","setBalance","setBalanceResume","filterDate","balanceFilter","selectedAccount","currentDate","Date","initialStartDate","useMemo","sub","days","initialEndDate","setStartDate","setEndDate","data","refetch","isError","number","enabled","handleDateRange","range","InputDateRange","HEIGHT","RootStyle","styled","theme","position","height","borderRadius","Number","shape","CardItemStyle","padding","spacing","display","flexDirection","justifyContent","background","alpha","palette","mode","secondary","dark","primary","lighter","info","light","backgroundRepeat","backdropFilter","boxShadow","customShadows","card","shadowStyle","mx","width","zIndex","bottom","left","right","bgcolor","opacity","AdminSpeiCardAccount","stpAccount","show","setShow","CardHeader","p","pb","Avatar","backgroundColor","default","Person","name","type","CardContent","hidden","IconButton","PiEyeBold","PiEyeClosedBold","totalBalance","FullLogo","balance","AdminSpeiAccounts","isEmptyAccount","isLoading","useTheme","setOpenSpeiOut","setOpenTransactions","stpAccounts","setSelectedAccount","setCompanies","getTitleAccountsByStpAccountType","handleChangeCompany","e","newValue","STP_ACCOUNT_TYPES","CONCENTRATOR","accounts","COST_CENTER","companies","filter","id","flexGrow","length","Autocomplete","option","label","isDisabled","current","params","TextField","InputProps","sx","borderColor","borderColorViaboSpeiStyle","Divider","gap","CircularLoading","Alert","Fragment","ButtonViaboSpei","color","text","AdminSpeiBalance","balanceResume","Grid","deposits","currency","count","SouthWest","transfers","NorthEast"],"mappings":"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"}
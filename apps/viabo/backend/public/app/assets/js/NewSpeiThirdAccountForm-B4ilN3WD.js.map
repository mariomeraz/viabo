{"version":3,"file":"NewSpeiThirdAccountForm-B4ilN3WD.js","sources":["../../../../../frontend/src/app/business/viabo-spei/third-accounts/adapters/spei-new-third-account-adapter.js","../../../../../frontend/src/app/business/viabo-spei/third-accounts/hooks/useCreateNewSpeiThirdAccount.js","../../../../../frontend/src/app/business/viabo-spei/third-accounts/components/new-third-account/NewSpeiThirdAccountForm.jsx"],"sourcesContent":["export const SpeiNewThirdAccountAdapter = account => ({\r\n  interbankCLABE: account?.clabe,\r\n  beneficiary: account?.name?.trim(),\r\n  rfc: account?.rfc?.trim() || '',\r\n  alias: account?.alias?.trim() || '',\r\n  bankId: account?.bank?.value,\r\n  email: account?.email?.trim() || '',\r\n  phone: account?.phone?.trim() || '',\r\n  googleAuthenticatorCode: account?.googleCode.toString() || ''\r\n})\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { SPEI_THIRD_ACCOUNTS_KEYS } from '../adapters'\r\nimport { newSpeiThirdAccount } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useCreateNewSpeiThirdAccount = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const speiThirdAccount = useMutation(newSpeiThirdAccount, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(speiThirdAccount.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Agregando Cuenta ...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([SPEI_THIRD_ACCOUNTS_KEYS.THIRD_ACCOUNTS_LIST])\r\n            isFunction(onSuccess) && onSuccess(data)\r\n\r\n            return 'Se agrego la cuenta con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...speiThirdAccount,\r\n    mutate\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { EmailOutlined, Lock, Phone } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Box, InputAdornment, Stack, Typography } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport { SpeiNewThirdAccountAdapter } from '../../adapters'\r\nimport { useCreateNewSpeiThirdAccount } from '../../hooks'\r\n\r\nimport { FormProvider, RFSelect, RFTextField } from '@/shared/components/form'\r\n\r\nconst NewSpeiThirdAccountForm = ({ account, catalogBanks, onSuccess }) => {\r\n  const { mutate, isLoading } = useCreateNewSpeiThirdAccount()\r\n\r\n  const ValidationSchema = Yup.object().shape({\r\n    clabe: Yup.string()\r\n      .trim()\r\n      .max(18, 'Máximo 18 caracteres')\r\n      .matches(/^\\S{18}$/, 'La clabe debe contener 18 caracteres y no puede contener espacios en blanco')\r\n      .required('Es necesario la clabe'),\r\n    name: Yup.string().trim().max(100, 'Máximo 100 caracteres').required('Es necesario el beneficiario'),\r\n    rfc: Yup.string(),\r\n    alias: Yup.string().trim().max(100, 'Máximo 100 caracteres'),\r\n    bank: Yup.object().nullable().required('Es necesario el banco'),\r\n    email: Yup.string().trim().email('Ingrese un correo valido'),\r\n    phone: Yup.string().trim(),\r\n    googleCode: Yup.string()\r\n      .trim()\r\n      .min(6, 'Es necesario el código de 6 dígitos')\r\n      .required('Es necesario el código de 6 dígitos')\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      clabe: account?.clabe || '',\r\n      name: account?.beneficiary || '',\r\n      alias: account?.alias || '',\r\n      rfc: account?.rfc || '',\r\n      bank: catalogBanks?.find(bank => bank?.id === account?.bank?.id) || null,\r\n      email: account?.email || '',\r\n      phone: account?.phone || '',\r\n      googleCode: ''\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: ValidationSchema,\r\n    onSubmit: (values, { setSubmitting, setFieldValue }) => {\r\n      const account = SpeiNewThirdAccountAdapter(values)\r\n      mutate(account, {\r\n        onSuccess: () => {\r\n          setSubmitting(false)\r\n          onSuccess()\r\n        },\r\n        onError: () => {\r\n          setSubmitting(false)\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const { isSubmitting, setFieldValue, values } = formik\r\n\r\n  const loading = isSubmitting || isLoading\r\n  return (\r\n    <FormProvider formik={formik}>\r\n      <Stack spacing={2}>\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Cuenta CLABE\r\n            <Box component={'span'} color={'error.main'} ml={0.5}>\r\n              *\r\n            </Box>\r\n          </Typography>\r\n\r\n          <RFTextField\r\n            inputProps={{ maxLength: '18' }}\r\n            required\r\n            name={'clabe'}\r\n            size={'small'}\r\n            disabled={loading}\r\n            placeholder={'Clabe...'}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Beneficiario\r\n            <Box component={'span'} color={'error.main'} ml={0.5}>\r\n              *\r\n            </Box>\r\n          </Typography>\r\n\r\n          <RFTextField\r\n            required\r\n            name={'name'}\r\n            size={'small'}\r\n            placeholder={'Nombre del titular de la cuenta...'}\r\n            disabled={loading}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            RFC\r\n          </Typography>\r\n\r\n          <RFTextField name={'rfc'} size={'small'} placeholder={'RFC del beneficiario...'} disabled={loading} />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Alias\r\n          </Typography>\r\n\r\n          <RFTextField name={'alias'} size={'small'} placeholder={'Alias de la cuenta...'} disabled={loading} />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Banco\r\n            <Box component={'span'} color={'error.main'} ml={0.5}>\r\n              *\r\n            </Box>\r\n          </Typography>\r\n          <RFSelect\r\n            name={'bank'}\r\n            textFieldParams={{ placeholder: 'Seleccionar ...', required: true, size: 'small' }}\r\n            options={catalogBanks || []}\r\n            disabled={loading}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack flexDirection={{ md: 'row' }} gap={2}>\r\n          <Stack spacing={1} flex={1}>\r\n            <Typography type={'email'} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Correo\r\n            </Typography>\r\n\r\n            <RFTextField\r\n              name={'email'}\r\n              size={'small'}\r\n              placeholder={'beneficiario@domino.com...'}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <EmailOutlined />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              disabled={loading}\r\n            />\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Teléfono\r\n            </Typography>\r\n            <RFTextField\r\n              name={'phone'}\r\n              type={'tel'}\r\n              size={'small'}\r\n              placeholder={'55 5555 5555'}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Phone />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              disabled={loading}\r\n            />\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Token de Google{' '}\r\n            <Box component={'span'} color={'error.main'}>\r\n              *\r\n            </Box>\r\n          </Typography>\r\n          <RFTextField\r\n            name={'googleCode'}\r\n            type={'number'}\r\n            size={'small'}\r\n            placeholder={'000000'}\r\n            inputProps={{ maxLength: '6', inputMode: 'numeric', min: '1' }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Lock />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            disabled={loading}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack sx={{ pt: 1 }}>\r\n          <LoadingButton size={'large'} loading={loading} variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\r\n            Crear\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Stack>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nNewSpeiThirdAccountForm.propTypes = {\r\n  account: PropTypes.shape({\r\n    alias: PropTypes.string,\r\n    bank: PropTypes.shape({\r\n      id: PropTypes.any\r\n    }),\r\n    beneficiary: PropTypes.string,\r\n    clabe: PropTypes.string,\r\n    email: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    rfc: PropTypes.string\r\n  }),\r\n  catalogBanks: PropTypes.array,\r\n  onSuccess: PropTypes.func\r\n}\r\n\r\nexport default NewSpeiThirdAccountForm\r\n"],"names":["SpeiNewThirdAccountAdapter","account","_a","_b","_c","_d","_e","_f","useCreateNewSpeiThirdAccount","options","client","useQueryClient","speiThirdAccount","useMutation","newSpeiThirdAccount","formData","onSuccess","onError","mutationOptions","toast","data","SPEI_THIRD_ACCOUNTS_KEYS","isFunction","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode","NewSpeiThirdAccountForm","catalogBanks","mutate","isLoading","ValidationSchema","Yup","shape","clabe","trim","max","matches","required","name","rfc","alias","bank","nullable","email","phone","googleCode","min","formik","useFormik","initialValues","beneficiary","find","id","enableReinitialize","validationSchema","onSubmit","values","setSubmitting","setFieldValue","isSubmitting","loading","FormProvider","jsxs","Stack","Typography","color","jsx","Box","RFTextField","maxLength","RFSelect","placeholder","size","md","startAdornment","InputAdornment","EmailOutlined","Phone","inputMode","Lock","pt","LoadingButton","propTypes","PropTypes","string","any","array","func"],"mappings":"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"}
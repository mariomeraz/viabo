{"version":3,"mappings":"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","names":["initialState","commerceDetailsStore","set","get","commerce","state","open","useCommerce","createStore","getCommerceActions","table","row","closeMenu","original","rowData","setCommerce","setOpenCommerceDetails","setOpenCommerceCommissions","setOpenCommerceServices","menuItems","jsxs","MenuItem","m","jsx","ListItemIcon","Visibility","PriceChange","LibraryAdd","AccountPopOverDetails","anchorEl","handlePopoverClose","data","Popover","pointerEvents","vertical","horizontal","paper","sx","mt","ml","overflow","boxShadow","theme","customShadows","z20","border","palette","grey","width","Stack","Typography","color","name","phone","register","lastLogged","Box","Label","status","toLowerCase","textTransform","propTypes","PropTypes","any","shape","string","memo","AccountColumn","setAnchorEl","useState","handlePopoverOpen","event","currentTarget","Boolean","Fragment","account","display","alignItems","textOverflow","whiteSpace","Link","cursor","undefined","MANAGEMENT_COMMERCES_KEYS","getCommerceList","axios","ManagementCommercesAdapter","getCommerceDetails","commerceId","CommerceAdapter","updateCommerceCommissions","commissions","updateCommerceInformation","updateCommerceService","service","CATALOG_STATUS_COMMERCE","getColorStatusCommerceById","id","_a","useCommercesColumns","useMemo","accessorKey","header","enableHiding","size","Cell","cell","column","renderedCellValue","accessorFn","originalRow","services","names","toString","logos","forEach","serviceLogo","getOperationTypeByName","push","component","height","Divider","borderStyle","length","map","Logo","index","Tooltip","step","minSize","useFindCommerceList","options","enqueueSnackbar","useSnackbar","customError","setCustomError","useQuery","error","errorMessage","getErrorAPI","CommerceList","commerces","isLoading","isError","isFetching","columns","useMaterialTable","enableColumnPinning","enableColumnFilterModes","enableStickyHeader","enableRowVirtualization","enableFacetedValues","enableRowActions","enableRowSelection","enableDensityToggle","positionActionsColumn","selectAllMode","density","sorting","desc","showAlertBanner","showProgressBars","displayColumnDefOptions","maxSize","muiTableContainerProps","maxHeight","md","lg","xl","enableColumnResizing","layoutMode","renderTopToolbarCustomActions","renderRowActionMenuItems","responsizeColumnHiding","minColumns","containerWidth","refs","tableContainerRef","current","offsetWidth","cellPadding","getState","extraMargin","totalColumnWidth","getAllColumns","i","getSize","toggleVisibility","useEffect","handleResize","addEventListener","Card","MaterialDataTable","CommerceDetails","Lodable","lazy","__vitePreload","CommerceCommissions","CommerceServices","ManagementCommerces","Page","ContainerPage","HeaderPage","href","PATH_DASHBOARD","root","MANAGEMENT_PATHS","MANAGEMENT_ROUTES_NAMES"],"sources":["../../../../../frontend/src/app/management/commerces/store/commerceDetailsStore.js","../../../../../frontend/src/app/management/commerces/components/list/CommerceActions.jsx","../../../../../frontend/src/app/management/commerces/components/list/columns/AccountPopOverDetails.jsx","../../../../../frontend/src/app/management/commerces/components/list/columns/AccountColumn.jsx","../../../../../frontend/src/app/management/commerces/adapters/managementCommercesKeys.js","../../../../../frontend/src/app/management/commerces/services/ManagementCommercesRepository.js","../../../../../frontend/src/app/management/commerces/services/getCommerceStatus.js","../../../../../frontend/src/app/management/commerces/hooks/useCommercesColumns.jsx","../../../../../frontend/src/app/management/commerces/hooks/useFindCommerceList.js","../../../../../frontend/src/app/management/commerces/components/list/CommerceList.jsx","../../../../../frontend/src/app/management/commerces/pages/ManagementCommerces.jsx"],"sourcesContent":["import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  commerce: null,\r\n  openCommerceDetails: false,\r\n  openCommerceCommissions: false,\r\n  openCommerceServices: false\r\n}\r\nconst commerceDetailsStore = (set, get) => ({\r\n  ...initialState,\r\n  setCommerce: commerce => {\r\n    set(state => ({\r\n      commerce\r\n    }))\r\n  },\r\n  setOpenCommerceDetails: open => {\r\n    set(\r\n      state => ({\r\n        openCommerceDetails: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_COMMERCE_DETAILS'\r\n    )\r\n  },\r\n  setOpenCommerceCommissions: open => {\r\n    set(\r\n      state => ({\r\n        openCommerceCommissions: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_COMMERCE_COMMISSIONS'\r\n    )\r\n  },\r\n  setOpenCommerceServices: open => {\r\n    set(\r\n      state => ({\r\n        openCommerceServices: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_COMMERCE_SERVICES'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useCommerce = createStore(commerceDetailsStore)\r\n","import { LibraryAdd, PriceChange, Visibility } from '@mui/icons-material'\r\nimport { ListItemIcon, MenuItem } from '@mui/material'\r\n\r\nimport { useCommerce } from '../../store'\r\n\r\nexport function getCommerceActions(table) {\r\n  const { row, closeMenu } = table\r\n  const { original: rowData } = row\r\n  const { status } = rowData\r\n  const { setCommerce, setOpenCommerceDetails, setOpenCommerceCommissions, setOpenCommerceServices } = useCommerce(\r\n    state => state\r\n  )\r\n\r\n  const menuItems = [\r\n    <MenuItem\r\n      key={'details'}\r\n      onClick={() => {\r\n        setCommerce(rowData)\r\n        setOpenCommerceDetails(true)\r\n        closeMenu()\r\n      }}\r\n      sx={{ m: 0 }}\r\n    >\r\n      <ListItemIcon>\r\n        <Visibility color=\"info\" />\r\n      </ListItemIcon>\r\n      Ver Detalles\r\n    </MenuItem>,\r\n    <MenuItem\r\n      key=\"commissions\"\r\n      onClick={() => {\r\n        setCommerce(rowData)\r\n        setOpenCommerceCommissions(true)\r\n        closeMenu()\r\n      }}\r\n      sx={{ m: 0 }}\r\n    >\r\n      <ListItemIcon>\r\n        <PriceChange color=\"primary\" />\r\n      </ListItemIcon>\r\n      Comisiones\r\n    </MenuItem>,\r\n    <MenuItem\r\n      key=\"services\"\r\n      onClick={() => {\r\n        setCommerce(rowData)\r\n        setOpenCommerceServices(true)\r\n        closeMenu()\r\n      }}\r\n      sx={{ m: 0 }}\r\n    >\r\n      <ListItemIcon>\r\n        <LibraryAdd />\r\n      </ListItemIcon>\r\n      Servicios\r\n    </MenuItem>\r\n  ]\r\n\r\n  return menuItems\r\n}\r\n","import { memo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Box, Popover, Stack, Typography } from '@mui/material'\r\n\r\nimport { Label } from '@/shared/components/form'\r\n\r\nconst AccountPopOverDetails = ({ open, anchorEl, handlePopoverClose, data }) => {\r\n  if (!data) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      id=\"mouse-over-popover\"\r\n      sx={{\r\n        pointerEvents: 'none'\r\n      }}\r\n      open={open}\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'center',\r\n        horizontal: 'right'\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'center',\r\n        horizontal: 'left'\r\n      }}\r\n      onClose={handlePopoverClose}\r\n      disableRestoreFocus\r\n      slotProps={{\r\n        paper: {\r\n          sx: {\r\n            mt: 1.5,\r\n            ml: 0.5,\r\n            overflow: 'inherit',\r\n            boxShadow: theme => theme.customShadows.z20,\r\n            border: theme => `solid 1px ${theme.palette.grey[500_8]}`,\r\n            width: 200\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      <Stack spacing={2} p={2}>\r\n        <Stack spacing={0.5} flex={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Nombre:\r\n          </Typography>\r\n          <Typography variant=\"body2\">{data?.name ?? '-'}</Typography>\r\n        </Stack>\r\n\r\n        <Stack spacing={0.5} flex={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Teléfono:\r\n          </Typography>\r\n          <Typography variant=\"body2\">{data?.phone ?? '-'}</Typography>\r\n        </Stack>\r\n\r\n        <Stack spacing={0.5} flex={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Fecha Registro:\r\n          </Typography>\r\n          <Typography variant=\"body2\">{data?.register ?? '-'}</Typography>\r\n        </Stack>\r\n\r\n        <Stack spacing={0.5} flex={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Último Inicio de Sesión:\r\n          </Typography>\r\n          <Typography variant=\"body2\">{data?.lastLogged ?? '-'}</Typography>\r\n        </Stack>\r\n\r\n        <Stack spacing={0.5} flex={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Estado:\r\n          </Typography>\r\n          <Box>\r\n            <Label\r\n              variant={'ghost'}\r\n              color={data?.status?.toLowerCase() === 'activo' ? 'success' : 'error'}\r\n              sx={{\r\n                textTransform: 'uppercase'\r\n              }}\r\n            >\r\n              {data?.status ?? '-'}\r\n            </Label>\r\n          </Box>\r\n        </Stack>\r\n      </Stack>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nAccountPopOverDetails.propTypes = {\r\n  anchorEl: PropTypes.any,\r\n  data: PropTypes.shape({\r\n    lastLogged: PropTypes.string,\r\n    name: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    register: PropTypes.string,\r\n    status: PropTypes.string\r\n  }),\r\n  handlePopoverClose: PropTypes.any,\r\n  open: PropTypes.any\r\n}\r\n\r\nexport default memo(AccountPopOverDetails)\r\n","import { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Box, Link, Typography } from '@mui/material'\r\n\r\nimport AccountPopOverDetails from './AccountPopOverDetails'\r\n\r\nconst AccountColumn = ({ row }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const open = Boolean(anchorEl)\r\n\r\n  return (\r\n    <>\r\n      <AccountPopOverDetails\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        handlePopoverClose={handlePopoverClose}\r\n        data={row?.account}\r\n      />\r\n\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n          whiteSpace: 'nowrap',\r\n          width: 1\r\n        }}\r\n      >\r\n        <Link\r\n          color={'info.main'}\r\n          sx={{ cursor: 'auto', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}\r\n          underline=\"none\"\r\n          variant={'subtitle2'}\r\n          component={Typography}\r\n          aria-owns={open ? 'mouse-over-popover' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onMouseEnter={event => {\r\n            handlePopoverOpen(event)\r\n          }}\r\n          onMouseLeave={handlePopoverClose}\r\n        >\r\n          {row?.account?.name}\r\n        </Link>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nAccountColumn.propTypes = {\r\n  row: PropTypes.shape({\r\n    account: PropTypes.shape({\r\n      name: PropTypes.any\r\n    })\r\n  })\r\n}\r\n\r\nexport default AccountColumn\r\n","export const MANAGEMENT_COMMERCES_KEYS = {\r\n  COMMERCE_LIST: 'commerceList',\r\n  COMMERCE_DETAILS: 'commerce-details'\r\n}\r\n","import { CommerceAdapter, ManagementCommercesAdapter } from '@/app/management/commerces/adapters'\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getCommerceList = async () => {\r\n  const { data } = await axios.get('/api/commerces')\r\n  return ManagementCommercesAdapter(data)\r\n}\r\n\r\nexport const getCommerceDetails = async commerceId => {\r\n  const { data } = await axios.get(`/api/commerce/${commerceId}`)\r\n  return CommerceAdapter(data)\r\n}\r\n\r\nexport const updateCommerceCommissions = async commissions => {\r\n  const { data } = await axios.post('/api/commerce/commissions/register', commissions)\r\n  return data\r\n}\r\n\r\nexport const updateCommerceInformation = async commerce => {\r\n  const { data } = await axios.post('/api/backoffice/commerce/update', commerce)\r\n  return data\r\n}\r\n\r\nexport const updateCommerceService = async service => {\r\n  const { data } = await axios.put('/api/backoffice/commerce/service/update', service)\r\n  return data\r\n}\r\n","export const getColorStatusCommerce = name => {\r\n  let colorText\r\n  switch (name.toUpperCase()) {\r\n    case 'REGISTRO':\r\n      colorText = 'info'\r\n      break\r\n    case 'VALIDACION':\r\n      colorText = 'warning'\r\n      break\r\n    case 'AFILIACION':\r\n      colorText = 'primary'\r\n      break\r\n    case 'CONCLUIDO':\r\n      colorText = 'success'\r\n      break\r\n    case 'CANCELADO':\r\n      colorText = 'error'\r\n      break\r\n    default:\r\n      colorText = 'secondary'\r\n      break\r\n  }\r\n  return colorText\r\n}\r\n\r\nconst CATALOG_STATUS_COMMERCE = [\r\n  {\r\n    id: 1,\r\n    name: 'Registro',\r\n    color: 'info'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Validacion',\r\n    color: 'warning'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Afiliacion',\r\n    color: 'primary'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Cancelado',\r\n    color: 'error'\r\n  }\r\n]\r\n\r\nexport const getColorStatusCommerceById = id =>\r\n  CATALOG_STATUS_COMMERCE.find(status => status.id.toString() === id.toString())?.color || 'info'\r\n","import { useMemo } from 'react'\r\n\r\nimport { Box, Divider, Stack, Tooltip, Typography } from '@mui/material'\r\n\r\nimport { AccountColumn } from '../components/list/columns'\r\nimport { getColorStatusCommerceById } from '../services'\r\n\r\nimport { getOperationTypeByName } from '@/app/shared/services'\r\nimport { Label } from '@/shared/components/form'\r\n\r\nexport const useCommercesColumns = () =>\r\n  useMemo(\r\n    () => [\r\n      {\r\n        id: 'name',\r\n        accessorKey: 'name',\r\n        header: 'Nombre',\r\n        enableHiding: false,\r\n        size: 150,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => (\r\n          <Typography fontWeight={'bold'} variant=\"subtitle2\">\r\n            {renderedCellValue}\r\n          </Typography>\r\n        )\r\n      },\r\n      {\r\n        id: 'legalRepresentative',\r\n        accessorFn: originalRow => originalRow?.account?.name,\r\n        header: 'Representante Legal',\r\n        size: 100,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return <AccountColumn row={rowData} />\r\n        }\r\n      },\r\n      {\r\n        id: 'services',\r\n        accessorFn: originalRow => originalRow?.services?.names?.toString(),\r\n        header: 'Servicios',\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          const logos = []\r\n\r\n          rowData?.services?.names?.forEach(service => {\r\n            const serviceLogo = getOperationTypeByName(service)\r\n            if (serviceLogo) {\r\n              logos.push({\r\n                component: serviceLogo?.component,\r\n                name: service,\r\n                width: service === 'NUBE' ? 20 : 25,\r\n                height: service === 'NUBE' ? 20 : 25,\r\n                color: service === 'NUBE' ? 'primary.main' : 'inherit'\r\n              })\r\n            }\r\n          })\r\n\r\n          return (\r\n            <Stack\r\n              flexDirection={'row'}\r\n              alignItems={'center'}\r\n              gap={1}\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'double' }} />}\r\n            >\r\n              {logos?.length === 0 && (\r\n                <Typography variant=\"subtitle2\" fontWeight={'bold'} color={'warning.main'}>\r\n                  {'Sin Servicios'}\r\n                </Typography>\r\n              )}\r\n              {logos?.map(({ component: Logo, width, height, name, color }, index) => (\r\n                <Tooltip title={name} key={index}>\r\n                  <Box display={'flex'}>\r\n                    <Logo sx={{ width, height, color }} />\r\n                  </Box>\r\n                </Tooltip>\r\n              ))}\r\n            </Stack>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        id: 'register-status',\r\n        accessorFn: originalRow => originalRow?.status?.step,\r\n        header: 'Estado Registro',\r\n        minSize: 100,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return (\r\n            <Stack sx={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>\r\n              <Typography\r\n                sx={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}\r\n                variant=\"subtitle2\"\r\n                title={renderedCellValue}\r\n              >\r\n                {renderedCellValue}\r\n              </Typography>\r\n            </Stack>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        id: 'status',\r\n        accessorFn: originalRow => originalRow?.status?.name,\r\n        header: 'Estado',\r\n        size: 70,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return (\r\n            <Stack>\r\n              <Label\r\n                size={'sm'}\r\n                variant={'filled'}\r\n                color={getColorStatusCommerceById(rowData?.status?.id)}\r\n                sx={{\r\n                  textTransform: 'uppercase'\r\n                }}\r\n              >\r\n                {rowData?.status?.name}\r\n              </Label>\r\n            </Stack>\r\n          )\r\n        }\r\n      }\r\n    ],\r\n    []\r\n  )\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { MANAGEMENT_COMMERCES_KEYS } from '@/app/management/commerces/adapters'\r\nimport { getCommerceList } from '@/app/management/commerces/services'\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindCommerceList = (options = {}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [customError, setCustomError] = useState(null)\r\n  const commerces = useQuery([MANAGEMENT_COMMERCES_KEYS.COMMERCE_LIST], getCommerceList, {\r\n    staleTime: 60 * 5000,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'No se puede obtener la lista de comercios')\r\n      setCustomError(errorMessage)\r\n      enqueueSnackbar(errorMessage, {\r\n        variant: 'error',\r\n        autoHideDuration: 5000\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...commerces,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { useEffect } from 'react'\r\n\r\nimport { Box, Card } from '@mui/material'\r\n\r\nimport { getCommerceActions } from './CommerceActions'\r\n\r\nimport { useCommercesColumns, useFindCommerceList } from '@/app/management/commerces/hooks'\r\nimport { MaterialDataTable } from '@/shared/components/dataTables'\r\nimport { useMaterialTable } from '@/shared/hooks'\r\n\r\nexport function CommerceList() {\r\n  const { data: commerces, isLoading, isError, error, isFetching } = useFindCommerceList()\r\n\r\n  const columns = useCommercesColumns()\r\n\r\n  const table = useMaterialTable(isError, error, {\r\n    columns,\r\n    data: commerces || [],\r\n    enableColumnPinning: true,\r\n    enableColumnFilterModes: true,\r\n    enableStickyHeader: true,\r\n    enableRowVirtualization: true,\r\n    enableFacetedValues: true,\r\n    enableRowActions: true,\r\n    enableRowSelection: true,\r\n    enableDensityToggle: false,\r\n    positionActionsColumn: 'last',\r\n    selectAllMode: 'all',\r\n    initialState: {\r\n      density: 'compact',\r\n      sorting: [\r\n        {\r\n          id: 'name',\r\n          desc: false\r\n        }\r\n      ]\r\n    },\r\n    state: {\r\n      isLoading,\r\n      showAlertBanner: isError,\r\n      showProgressBars: isFetching\r\n    },\r\n    displayColumnDefOptions: {\r\n      'mrt-row-select': {\r\n        maxSize: 10\r\n      },\r\n      'mrt-row-actions': {\r\n        header: 'Acciones',\r\n        maxSize: 80\r\n      }\r\n    },\r\n    muiTableContainerProps: { sx: { maxHeight: { md: '350px', lg: '450px', xl: '700px' } } },\r\n    enableColumnResizing: true,\r\n    layoutMode: 'grid',\r\n    renderTopToolbarCustomActions: () => <Box></Box>,\r\n    renderRowActionMenuItems: getCommerceActions\r\n  })\r\n\r\n  const responsizeColumnHiding = (minColumns = 1) => {\r\n    const containerWidth = table.refs.tableContainerRef.current.offsetWidth\r\n    const cellPadding =\r\n      table.getState().density === 'spacious' ? 40 : table.getState().density === 'comfortable' ? 32 : 16\r\n    const extraMargin = 20\r\n    let totalColumnWidth = 0\r\n\r\n    const columns = table.getAllColumns()\r\n    for (let i = 0; i < columns.length; i++) {\r\n      totalColumnWidth += columns[i].getSize() + cellPadding\r\n      if (totalColumnWidth + extraMargin > containerWidth) {\r\n        if (i > minColumns) {\r\n          columns[i].toggleVisibility(false)\r\n        }\r\n      } else {\r\n        columns[i].toggleVisibility(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    responsizeColumnHiding(3)\r\n\r\n    function handleResize() {\r\n      responsizeColumnHiding(3)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [table, table.getState().density])\r\n\r\n  return (\r\n    <Card>\r\n      <MaterialDataTable table={table} />\r\n    </Card>\r\n  )\r\n}\r\n","import { lazy } from 'react'\r\n\r\nimport { CommerceList } from '@/app/management/commerces/components'\r\nimport { MANAGEMENT_PATHS, MANAGEMENT_ROUTES_NAMES } from '@/app/management/shared/routes'\r\nimport { PATH_DASHBOARD } from '@/routes'\r\nimport { Page } from '@/shared/components/containers'\r\nimport { ContainerPage } from '@/shared/components/containers/ContainerPage'\r\nimport { HeaderPage } from '@/shared/components/layout'\r\nimport { Lodable } from '@/shared/components/lodables'\r\n\r\nconst CommerceDetails = Lodable(lazy(() => import('../components/CommerceDetails')))\r\nconst CommerceCommissions = Lodable(lazy(() => import('../components/CommerceCommissions')))\r\nconst CommerceServices = Lodable(lazy(() => import('../components/CommerceServices')))\r\n\r\nexport default function ManagementCommerces() {\r\n  return (\r\n    <Page title=\"Administración Comercios\">\r\n      <ContainerPage>\r\n        <HeaderPage\r\n          name={'Comercios'}\r\n          links={[\r\n            { name: 'Inicio', href: PATH_DASHBOARD.root },\r\n            { name: 'Administración', href: MANAGEMENT_PATHS.commerces },\r\n            { name: MANAGEMENT_ROUTES_NAMES.commerces.name }\r\n          ]}\r\n        />\r\n        <CommerceList />\r\n        <CommerceDetails />\r\n        <CommerceCommissions />\r\n        <CommerceServices />\r\n      </ContainerPage>\r\n    </Page>\r\n  )\r\n}\r\n"],"file":"assets/js/ManagementCommerces-COmNZMvP.js"}
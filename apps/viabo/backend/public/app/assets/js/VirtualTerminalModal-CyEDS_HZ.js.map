{"version":3,"file":"VirtualTerminalModal-CyEDS_HZ.js","sources":["../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/paymentByVirtualTerminalAdapter.js","../../../../../frontend/src/app/business/viabo-pay/terminals/hooks/useGeneratePaymentByVirtualTerminal.js","../../../../../frontend/src/app/business/viabo-pay/terminals/components/virtual-terminal/VirtualTerminalForm.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/virtual-terminal/VirtualTerminalModal.jsx"],"sourcesContent":["import { getCryptInfo } from '@/shared/utils'\r\n\r\nfunction convertToDoubleDigit(number) {\r\n  return /^([1-9])$/.test(number) ? '0' + number : number\r\n}\r\n\r\nexport const PaymentByVirtualTerminalAdapter = (terminal, payment) => {\r\n  const paymentData = {\r\n    commerceId: terminal?.commerceId,\r\n    terminalId: terminal?.terminalId,\r\n    amount: parseFloat(\r\n      payment?.amount?.toString() === '' ? '0' : payment?.amount?.toString().replace(/,/g, '')\r\n    ).toString(),\r\n    description: payment?.concept,\r\n    clientName: payment?.name,\r\n    phone: `+52 ${payment?.phone}`,\r\n    cardNumber: payment?.cardNumber.replace(/\\s+/g, ''),\r\n    expMonth: convertToDoubleDigit(payment?.month + 1)?.toString() || '',\r\n    expYear: payment?.year?.toString()?.slice(-2) || '',\r\n    security: payment?.cvv,\r\n    email: payment?.email\r\n  }\r\n\r\n  return getCryptInfo(paymentData)\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { TERMINALS_KEYS } from '../adapters'\r\nimport { generatePaymentByVirtualTerminal } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useGeneratePaymentByVirtualTerminal = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const payment = useMutation(generatePaymentByVirtualTerminal, options)\r\n  const transaction = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(payment.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Realizando Pago ...',\r\n        success: {\r\n          render({ data }) {\r\n            onSuccess(data)\r\n            client.invalidateQueries([TERMINALS_KEYS.MOVEMENTS])\r\n            return 'Se completó la transacción y se envió el comprobante con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operacion en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n      client.invalidateQueries([TERMINALS_KEYS.MOVEMENTS])\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...payment,\r\n    mutate: transaction\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { CreditCard, EmailOutlined, Lock, Person, Phone, VpnKey } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { InputAdornment, Link, MenuItem, Paper, Stack, Typography } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\n\r\nimport { PaymentByVirtualTerminalAdapter } from '../../adapters'\r\nimport { useGeneratePaymentByVirtualTerminal } from '../../hooks'\r\nimport { useTerminalDetails } from '../../store'\r\n\r\nimport { PUBLIC_PATHS } from '@/routes'\r\nimport { FormProvider, MaskedInput, RFSimpleSelect, RFTextField } from '@/shared/components/form'\r\nimport { MasterCardLogo, VisaLogo } from '@/shared/components/images'\r\nimport { monthOptions } from '@/shared/utils'\r\n\r\nconst MIN_AMOUNT = 1\r\nconst MAX_AMOUNT = 100000\r\n\r\nconst currentYear = new Date().getFullYear()\r\nconst currentMonth = new Date().getMonth()\r\nconst yearsToAdd = 10\r\n\r\nconst yearOptions = Array.from({ length: yearsToAdd }, (_, index) => currentYear + index)\r\n\r\nexport const VirtualTerminalForm = ({ onSuccessTransaction }) => {\r\n  const terminal = useTerminalDetails(state => state.terminal)\r\n\r\n  const { mutate } = useGeneratePaymentByVirtualTerminal()\r\n\r\n  const TerminalSchema = Yup.object().shape({\r\n    amount: Yup.string().required('El monto es requerido'),\r\n    concept: Yup.string().required('El concepto es requerido'),\r\n    cardNumber: Yup.string()\r\n      .transform((value, originalValue) => originalValue.replace(/\\s/g, '')) // Elimina los espacios en blanco\r\n      .min(16, 'Debe contener 16 dígitos')\r\n      .required('El número de la tarjeta es requerido'),\r\n    cvv: Yup.string().min(3, 'Debe contener 3 dígitos').required('El CVV es requerido'),\r\n    name: Yup.string().required('El nombre es requerido'),\r\n    email: Yup.string().email('Ingresa un correo valido').required('El correo es requerido'),\r\n    phone: Yup.string()\r\n      .test('longitud', 'El teléfono es muy corto', value => !(value && value.replace(/\\s/g, '').length < 10))\r\n      .required('El teléfono es requerido')\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      amount: '',\r\n      cardNumber: '',\r\n      month: currentMonth,\r\n      year: currentYear,\r\n      cvv: '',\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      concept: ''\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: TerminalSchema,\r\n    onSubmit: (values, { setSubmitting, setFieldTouched }) => {\r\n      const data = PaymentByVirtualTerminalAdapter(terminal, values)\r\n\r\n      mutate(data, {\r\n        onSuccess: () => {\r\n          setSubmitting(false)\r\n          onSuccessTransaction()\r\n        },\r\n        onError: () => {\r\n          setSubmitting(false)\r\n          setFieldValue('cvv', '').then(() => {\r\n            setFieldTouched('cvv', false, false)\r\n          })\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const { isSubmitting, setFieldValue, values } = formik\r\n\r\n  const loading = isSubmitting\r\n\r\n  return (\r\n    <FormProvider formik={formik}>\r\n      <Stack spacing={2} p={3}>\r\n        <Stack direction={'row'} alignItems={'center'} spacing={1}>\r\n          <Typography variant=\"subtitle1\">Forma de Pago</Typography>\r\n          <Paper sx={{ px: 1, backgroundColor: 'background.neutral' }}>\r\n            <MasterCardLogo sx={{ width: 30, height: 30 }} />\r\n          </Paper>\r\n          <Paper sx={{ px: 1, backgroundColor: 'background.neutral' }}>\r\n            <VisaLogo sx={{ width: 30, height: 30 }} />\r\n          </Paper>\r\n        </Stack>\r\n        <Stack spacing={1}>\r\n          <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Monto *\r\n          </Typography>\r\n\r\n          <RFTextField\r\n            autoFocus\r\n            fullWidth\r\n            name={'amount'}\r\n            required={true}\r\n            placeholder={'0.00'}\r\n            disabled={loading}\r\n            size={'small'}\r\n            autoComplete={'off'}\r\n            InputProps={{\r\n              startAdornment: <span style={{ marginRight: '5px' }}>$</span>,\r\n              endAdornment: <InputAdornment position=\"end\">MXN</InputAdornment>,\r\n              inputComponent: MaskedInput,\r\n              inputProps: {\r\n                mask: Number,\r\n                radix: '.',\r\n                thousandsSeparator: ',',\r\n                padFractionalZeros: true,\r\n                min: MIN_AMOUNT,\r\n                max: MAX_AMOUNT,\r\n                scale: 2,\r\n                value: values.amount,\r\n                onAccept: value => {\r\n                  setFieldValue('amount', value)\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Concepto *\r\n          </Typography>\r\n\r\n          <RFTextField\r\n            size={'small'}\r\n            name={'concept'}\r\n            multiline\r\n            disabled={loading}\r\n            rows={2}\r\n            placeholder={'Pago por ..'}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Número de Tarjeta *\r\n          </Typography>\r\n          <RFTextField\r\n            name={'cardNumber'}\r\n            required={true}\r\n            size={'small'}\r\n            placeholder={'5254 2700 9717 8968'}\r\n            fullWidth\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <CreditCard />\r\n                </InputAdornment>\r\n              ),\r\n              inputComponent: MaskedInput,\r\n              inputProps: {\r\n                mask: '0000 0000 0000 0000',\r\n                value: values.cardNumber,\r\n                onAccept: value => {\r\n                  setFieldValue('cardNumber', value)\r\n                }\r\n              }\r\n            }}\r\n            disabled={loading}\r\n          />\r\n        </Stack>\r\n        <Stack direction={{ xs: 'column', lg: 'row' }} spacing={3} display={'flex'} flexWrap={'wrap'}>\r\n          <Stack flex={1} spacing={1}>\r\n            <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Mes *\r\n            </Typography>\r\n            <RFSimpleSelect size={'small'} name={'month'} disabled={loading}>\r\n              {monthOptions.map((month, index) => (\r\n                <MenuItem key={index} value={index}>\r\n                  {month}\r\n                </MenuItem>\r\n              ))}\r\n            </RFSimpleSelect>\r\n          </Stack>\r\n          <Stack flex={1} spacing={1}>\r\n            <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Año *\r\n            </Typography>\r\n            <RFSimpleSelect size={'small'} name={'year'} disabled={loading}>\r\n              {yearOptions.map(year => (\r\n                <MenuItem key={year} value={year}>\r\n                  {year}\r\n                </MenuItem>\r\n              ))}\r\n            </RFSimpleSelect>\r\n          </Stack>\r\n          <Stack flex={1} spacing={1}>\r\n            <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              CVV *\r\n            </Typography>\r\n            <RFTextField\r\n              name={'cvv'}\r\n              required={true}\r\n              placeholder={'123'}\r\n              size={'small'}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <VpnKey />\r\n                  </InputAdornment>\r\n                ),\r\n                inputComponent: MaskedInput,\r\n                inputProps: {\r\n                  mask: '000',\r\n                  onAccept: value => {\r\n                    setFieldValue('cvv', value)\r\n                  },\r\n                  value: values.cvv\r\n                }\r\n              }}\r\n              disabled={loading}\r\n            />\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Tarjetahabiente *\r\n          </Typography>\r\n\r\n          <RFTextField\r\n            name={'name'}\r\n            required={true}\r\n            size={'small'}\r\n            placeholder={'Nombre del Titular de la Tarjeta'}\r\n            disabled={loading}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Person />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Correo Electrónico *\r\n          </Typography>\r\n\r\n          <RFTextField\r\n            name={'email'}\r\n            required={true}\r\n            size={'small'}\r\n            placeholder={'usuario@dominio.com'}\r\n            disabled={loading}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <EmailOutlined />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Teléfono *\r\n          </Typography>\r\n\r\n          <RFTextField\r\n            name={'phone'}\r\n            required={true}\r\n            type={'phone'}\r\n            size={'small'}\r\n            placeholder={'55 5555 5555'}\r\n            fullWidth\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Phone />\r\n                </InputAdornment>\r\n              ),\r\n              inputComponent: MaskedInput,\r\n              inputProps: {\r\n                mask: '00 0000 0000',\r\n                value: values.phone,\r\n                onAccept: value => {\r\n                  setFieldValue('phone', value)\r\n                }\r\n              }\r\n            }}\r\n            disabled={loading}\r\n          />\r\n        </Stack>\r\n\r\n        <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary' }}>\r\n          Al hacer clic en el botón de Pagar, accedo a los &nbsp;\r\n          <Link component={RouterLink} underline=\"always\" color=\"info.main\" to={PUBLIC_PATHS.policies} target=\"_blank\">\r\n            Términos y condiciones\r\n          </Link>\r\n          &nbsp; & &nbsp;\r\n          <Link component={RouterLink} underline=\"always\" color=\"info.main\" to={PUBLIC_PATHS.privacy} target=\"_blank\">\r\n            Acuerdos de privacidad\r\n          </Link>\r\n          .\r\n        </Typography>\r\n\r\n        <Stack>\r\n          <LoadingButton\r\n            loading={isSubmitting}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            startIcon={<Lock />}\r\n          >\r\n            Pagar\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Stack>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nVirtualTerminalForm.propTypes = {\r\n  onSuccessTransaction: PropTypes.func\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { Stack, Typography } from '@mui/material'\r\n\r\nimport { VirtualTerminalForm } from './VirtualTerminalForm'\r\n\r\nimport { useTerminalDetails } from '../../store'\r\n\r\nimport { RightPanel } from '@/app/shared/components'\r\nimport { Scrollbar } from '@/shared/components/scroll'\r\n\r\nconst VirtualTerminalModal = ({ open, setOpen }) => {\r\n  const terminal = useTerminalDetails(state => state.terminal)\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <RightPanel\r\n      open={open}\r\n      handleClose={handleClose}\r\n      titleElement={\r\n        <Stack>\r\n          <Typography variant={'h6'}>Terminal Virtual</Typography>\r\n          <Typography variant={'subtitle2'}>{terminal?.name}</Typography>\r\n        </Stack>\r\n      }\r\n    >\r\n      <Scrollbar>\r\n        <VirtualTerminalForm onSuccessTransaction={handleClose} />\r\n      </Scrollbar>\r\n    </RightPanel>\r\n  )\r\n}\r\n\r\nVirtualTerminalModal.propTypes = {\r\n  open: PropTypes.bool,\r\n  setOpen: PropTypes.func\r\n}\r\n\r\nexport default VirtualTerminalModal\r\n"],"names":["convertToDoubleDigit","number","PaymentByVirtualTerminalAdapter","terminal","payment","paymentData","_a","_b","_c","_e","_d","getCryptInfo","useGeneratePaymentByVirtualTerminal","options","client","useQueryClient","useMutation","generatePaymentByVirtualTerminal","formData","onSuccess","onError","mutationOptions","toast","data","TERMINALS_KEYS","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode","MIN_AMOUNT","MAX_AMOUNT","currentYear","Date","getFullYear","currentMonth","getMonth","yearsToAdd","yearOptions","Array","from","length","_","index","VirtualTerminalForm","onSuccessTransaction","useTerminalDetails","state","mutate","TerminalSchema","Yup","shape","amount","required","concept","cardNumber","string","transform","value","originalValue","replace","min","cvv","name","email","phone","test","formik","useFormik","initialValues","month","year","enableReinitialize","validationSchema","onSubmit","values","setSubmitting","setFieldTouched","setFieldValue","then","isSubmitting","loading","jsx","FormProvider","jsxs","Stack","Typography","Paper","px","backgroundColor","MasterCardLogo","width","height","VisaLogo","color","RFTextField","startAdornment","marginRight","endAdornment","InputAdornment","inputComponent","MaskedInput","inputProps","mask","Number","radix","thousandsSeparator","padFractionalZeros","max","scale","onAccept","CreditCard","xs","lg","RFSimpleSelect","monthOptions","map","MenuItem","VpnKey","Person","EmailOutlined","Phone","Link","RouterLink","PUBLIC_PATHS","policies","privacy","LoadingButton","Lock","propTypes","PropTypes","func","VirtualTerminalModal","open","setOpen","handleClose","RightPanel","Scrollbar","bool"],"mappings":"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"}
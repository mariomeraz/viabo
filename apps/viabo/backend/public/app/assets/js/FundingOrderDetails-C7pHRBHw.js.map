{"version":3,"file":"FundingOrderDetails-C7pHRBHw.js","sources":["../../../../../frontend/src/app/business/funding-orders/components/details/ConciliateFundingOrderInfo.jsx","../../../../../frontend/src/app/business/funding-orders/components/details/GeneralInfoFundingOrder.jsx","../../../../../frontend/src/app/business/funding-orders/components/details/PaymentFundingOrderInfo.jsx","../../../../../frontend/src/app/business/funding-orders/hooks/useFindFundingOrderDetails.js","../../../../../frontend/src/app/business/funding-orders/components/FundingOrderDetails.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nimport { Box, Stack, Typography } from '@mui/material'\r\nimport { BiBlock } from 'react-icons/bi'\r\nimport { BsPatchCheck } from 'react-icons/bs'\r\n\r\nexport const ConciliateFundingOrderInfo = ({ fundingOrder }) => (\r\n  <Stack spacing={2}>\r\n    <Typography variant={'subtitle1'} fontWeight={'bold'}>\r\n      Conciliación\r\n    </Typography>\r\n    <Stack spacing={2}>\r\n      <Stack flexDirection={'row'} gap={1}>\r\n        <Stack spacing={0.5}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            ¿Conciliada?\r\n          </Typography>\r\n          <Box textAlign={'center'}>\r\n            {fundingOrder?.conciliated ? (\r\n              <BsPatchCheck color=\"green\" fontWeight={'bold'} fontSize={'20px'} />\r\n            ) : (\r\n              <BiBlock fontSize={'20px'} color=\"red\" />\r\n            )}\r\n          </Box>\r\n        </Stack>\r\n        <Box display={'flex'} flex={1} />\r\n        <Stack flexGrow={1} spacing={0.5}>\r\n          {fundingOrder?.conciliationInfo?.number && fundingOrder?.conciliationInfo?.number !== '' && (\r\n            <>\r\n              <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                Movimiento\r\n              </Typography>\r\n              <Stack>\r\n                <Typography variant=\"body2\">{`${fundingOrder?.conciliationInfo?.number || '-'}`}</Typography>\r\n                <Typography variant=\"body2\">{` ${fundingOrder?.conciliationInfo?.date || '-'}`}</Typography>\r\n                <Typography variant=\"body2\">{` ${fundingOrder?.conciliationInfo?.userName || '-'}`}</Typography>\r\n              </Stack>\r\n            </>\r\n          )}\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  </Stack>\r\n)\r\n\r\nConciliateFundingOrderInfo.propTypes = {\r\n  fundingOrder: PropTypes.shape({\r\n    conciliated: PropTypes.any,\r\n    conciliationInfo: PropTypes.shape({\r\n      date: PropTypes.any,\r\n      number: PropTypes.string,\r\n      userName: PropTypes.any\r\n    })\r\n  })\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Check, CopyAll } from '@mui/icons-material'\r\nimport { Box, Chip, IconButton, Link, Stack, Typography } from '@mui/material'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nimport { getColorFundingOrderStatusByName, getOperationTypeByName } from '@/app/shared/services'\r\nimport { Label } from '@/shared/components/form'\r\nimport { copyToClipboard } from '@/shared/utils'\r\n\r\nexport const GeneralInfoFundingOrder = ({ fundingOrder }) => {\r\n  const [copied, setCopied] = useState(false)\r\n\r\n  const logos = []\r\n\r\n  const paymentMethods = fundingOrder?.paymentMethods?.split(',') || []\r\n\r\n  const colorStatus = getColorFundingOrderStatusByName(fundingOrder?.status)\r\n\r\n  paymentMethods?.forEach(method => {\r\n    const methodLogo = getOperationTypeByName(method)\r\n    if (methodLogo) {\r\n      logos.push({\r\n        component: methodLogo?.component,\r\n        width: method === 'PAYCASH' ? 50 : 30,\r\n        height: method === 'PAYCASH' ? 50 : 30\r\n      })\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Stack spacing={2}>\r\n      <Typography variant={'subtitle1'} fontWeight={'bold'}>\r\n        Datos de la orden\r\n      </Typography>\r\n      <Stack spacing={2}>\r\n        <Stack flexDirection={'row'} gap={1}>\r\n          <Stack spacing={0.5} flex={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Monto:\r\n            </Typography>\r\n            <Typography variant=\"body2\">{fundingOrder?.amount ?? '-'}</Typography>\r\n          </Stack>\r\n\r\n          <Stack spacing={0.5} flex={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Referencia Interna:\r\n            </Typography>\r\n            <Typography variant=\"body2\">{fundingOrder?.referenceNumber ?? '-'}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack flexDirection={'row'} gap={1}>\r\n          <Stack spacing={0.5} flex={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Cuenta Maestra:\r\n            </Typography>\r\n            <Typography variant=\"body2\">{fundingOrder?.cardNumber ?? '-'}</Typography>\r\n          </Stack>\r\n\r\n          <Stack spacing={1.5} flex={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Métodos de Fondeo:\r\n            </Typography>\r\n            <Stack flexDirection={'row'} alignItems={'center'} gap={1} position={'relative'}>\r\n              {logos?.map(({ component: Logo, width, height }, index) => (\r\n                <Logo key={index} sx={{ width, height, position: 'absolute', left: index === 0 ? 0 : 40 }} />\r\n              ))}\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack flexDirection={'row'} gap={1}>\r\n          <Stack spacing={0.5} flex={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Fecha de Creación:\r\n            </Typography>\r\n            <Typography variant=\"body2\">{fundingOrder?.registerDate?.fullDate ?? '-'}</Typography>\r\n          </Stack>\r\n\r\n          <Stack spacing={0.5} flex={1}>\r\n            <Typography paragraph variant=\"overline\" gutterBottom={false} sx={{ color: 'text.disabled' }}>\r\n              Liga Orden de Fondeo\r\n            </Typography>\r\n            {fundingOrder?.referenceNumber && (\r\n              <Stack alignItems={'flex-start'} direction=\"row\" spacing={1}>\r\n                <Link\r\n                  variant=\"body2\"\r\n                  component={RouterLink}\r\n                  underline=\"always\"\r\n                  to={`/orden-fondeo/${fundingOrder?.referenceNumber}`}\r\n                  target=\"_blank\"\r\n                  color=\"info.main\"\r\n                >\r\n                  {`orden-fondeo/${fundingOrder?.referenceNumber}`}\r\n                </Link>\r\n                <Box position={'relative'}>\r\n                  <IconButton\r\n                    variant=\"outlined\"\r\n                    sx={{ position: 'absolute', p: 0 }}\r\n                    size=\"small\"\r\n                    color={copied ? 'success' : 'inherit'}\r\n                    onClick={() => {\r\n                      setCopied(true)\r\n                      copyToClipboard(`${window.location.host}/orden-fondeo/${fundingOrder?.referenceNumber}`)\r\n                      setTimeout(() => {\r\n                        setCopied(false)\r\n                      }, 1000)\r\n                    }}\r\n                  >\r\n                    {copied ? (\r\n                      <Check fontSize=\"small\" sx={{ color: 'success' }} />\r\n                    ) : (\r\n                      <CopyAll fontSize=\"small\" sx={{ color: 'text.disabled' }} />\r\n                    )}\r\n                  </IconButton>\r\n                </Box>\r\n              </Stack>\r\n            )}\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack flexDirection={'row'} gap={1}>\r\n          <Stack spacing={0.5} flex={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Destinatarios:\r\n            </Typography>\r\n            {fundingOrder?.emails?.length > 0 ? (\r\n              fundingOrder?.emails?.map(email => (\r\n                <Box key={email} display={'flex'} flexDirection={'column'}>\r\n                  <Box>\r\n                    <Chip label={<Typography variant=\"body2\">{email}</Typography>} size=\"small\" />\r\n                  </Box>\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <Typography variant=\"body2\">{'-'}</Typography>\r\n            )}\r\n          </Stack>\r\n          <Stack spacing={0.5} flex={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Estado:\r\n            </Typography>\r\n            <Box>\r\n              <Label\r\n                variant={'ghost'}\r\n                color={colorStatus}\r\n                sx={{\r\n                  textTransform: 'capitalize'\r\n                }}\r\n              >\r\n                {fundingOrder?.status || '-'}\r\n              </Label>\r\n            </Box>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack flexDirection={'row'} gap={1}>\r\n          <Stack spacing={0.5} flex={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Fecha Último Estado:\r\n            </Typography>\r\n            <Typography variant=\"body2\">{fundingOrder?.lastStatusDate || '-'}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nGeneralInfoFundingOrder.propTypes = {\r\n  fundingOrder: PropTypes.shape({\r\n    amount: PropTypes.string,\r\n    cardNumber: PropTypes.string,\r\n    emails: PropTypes.array,\r\n    lastStatusDate: PropTypes.string,\r\n    paymentMethods: PropTypes.string,\r\n    referenceNumber: PropTypes.string,\r\n    registerDate: PropTypes.shape({\r\n      fullDate: PropTypes.string\r\n    }),\r\n    status: PropTypes.string\r\n  })\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { Stack, Typography } from '@mui/material'\r\n\r\nexport const PaymentFundingOrderInfo = ({ fundingOrder }) => (\r\n  <Stack spacing={2}>\r\n    <Typography variant={'subtitle1'} fontWeight={'bold'}>\r\n      Datos del Pago\r\n    </Typography>\r\n    <Stack spacing={2}>\r\n      <Stack flexDirection={'row'} gap={1}>\r\n        <Stack flex={1} spacing={0.5}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Referencia\r\n          </Typography>\r\n          <Typography variant=\"body2\">{fundingOrder?.payCash}</Typography>\r\n        </Stack>\r\n        <Stack flex={1} spacing={0.5}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Folio\r\n          </Typography>\r\n          <Typography variant=\"body2\">{fundingOrder?.paymentInfo?.folio || '-'}</Typography>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <Stack flexDirection={'row'} gap={1}>\r\n        <Stack flex={1} spacing={0.5}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Fecha\r\n          </Typography>\r\n          <Typography variant=\"body2\">{fundingOrder?.paymentInfo?.date || '-'}</Typography>\r\n        </Stack>\r\n        <Stack flex={1} spacing={0.5}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Código Autorización\r\n          </Typography>\r\n          <Typography variant=\"body2\">{fundingOrder?.paymentInfo?.authorizationCode || '-'}</Typography>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  </Stack>\r\n)\r\n\r\nPaymentFundingOrderInfo.propTypes = {\r\n  fundingOrder: PropTypes.shape({\r\n    payCash: PropTypes.any,\r\n    paymentInfo: PropTypes.shape({\r\n      authorizationCode: PropTypes.string,\r\n      date: PropTypes.string,\r\n      folio: PropTypes.string\r\n    })\r\n  })\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { FUNDING_ORDERS_KEYS } from '../adapters'\r\nimport { getFundingOrderDetails } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindFundingOrderDetails = (fundingOrder, options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const fundingOrderDetails = useQuery(\r\n    [FUNDING_ORDERS_KEYS.DETAILS, fundingOrder?.id],\r\n    () => getFundingOrderDetails(fundingOrder),\r\n    {\r\n      staleTime: 60000,\r\n      refetchOnWindowFocus: false,\r\n      onError: error => {\r\n        const errorMessage = getErrorAPI(error, 'No se puede obtener la información de la orden de fondeo')\r\n        setCustomError(errorMessage)\r\n        toast.error(errorMessage, {\r\n          type: getNotificationTypeByErrorCode(error)\r\n        })\r\n      },\r\n      ...options\r\n    }\r\n  )\r\n  return {\r\n    ...fundingOrderDetails,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { useEffect } from 'react'\r\n\r\nimport { Stack, Typography } from '@mui/material'\r\n\r\nimport { ConciliateFundingOrderInfo, GeneralInfoFundingOrder, PaymentFundingOrderInfo } from './details'\r\n\r\nimport { useFindFundingOrderDetails } from '../hooks/useFindFundingOrderDetails'\r\nimport { useFundingOrderStore } from '../store'\r\n\r\nimport { RightPanel } from '@/app/shared/components'\r\nimport { RequestLoadingComponent } from '@/shared/components/loadings'\r\nimport { ErrorRequestPage } from '@/shared/components/notifications'\r\nimport { Scrollbar } from '@/shared/components/scroll'\r\n\r\nconst FundingOrderDetails = () => {\r\n  const fundingOrder = useFundingOrderStore(state => state.fundingOrder)\r\n  const setFundingOrder = useFundingOrderStore(state => state.setFundingOrder)\r\n  const setOpenDetailsFundingOrder = useFundingOrderStore(state => state.setOpenDetailsFundingOrder)\r\n  const openDetailsFundingOrder = useFundingOrderStore(state => state.openDetailsFundingOrder)\r\n\r\n  const {\r\n    data: fundingOrderDetails,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n    refetch\r\n  } = useFindFundingOrderDetails(fundingOrder, { enabled: !!fundingOrder })\r\n\r\n  useEffect(() => {\r\n    if (fundingOrder) {\r\n      refetch()\r\n    }\r\n  }, [fundingOrder])\r\n\r\n  const handleClose = () => {\r\n    setOpenDetailsFundingOrder(false)\r\n    setFundingOrder(null)\r\n  }\r\n  return (\r\n    <RightPanel\r\n      open={openDetailsFundingOrder}\r\n      handleClose={handleClose}\r\n      titleElement={\r\n        <Stack>\r\n          <Typography variant={'h6'}>Orden de Fondeo</Typography>\r\n          <Typography variant={'subtitle1'}>#{fundingOrder?.referenceNumber}</Typography>\r\n        </Stack>\r\n      }\r\n    >\r\n      <Scrollbar containerProps={{ sx: { flexGrow: 0, height: 'auto' } }}>\r\n        <Stack spacing={3} p={3}>\r\n          {isLoading && <RequestLoadingComponent />}\r\n          {isError && !isLoading && (\r\n            <ErrorRequestPage\r\n              errorMessage={error}\r\n              titleMessage={'Detalles Orden de Fondeo'}\r\n              handleButton={() => refetch()}\r\n            />\r\n          )}\r\n          {!isError && !isLoading && (\r\n            <>\r\n              <GeneralInfoFundingOrder fundingOrder={fundingOrderDetails} />\r\n              {['Pagada', 'Liquidada'].includes(fundingOrder?.status) && fundingOrder?.payCash !== '' && (\r\n                <PaymentFundingOrderInfo fundingOrder={fundingOrderDetails} />\r\n              )}\r\n              <ConciliateFundingOrderInfo fundingOrder={fundingOrderDetails} />\r\n            </>\r\n          )}\r\n        </Stack>\r\n      </Scrollbar>\r\n    </RightPanel>\r\n  )\r\n}\r\n\r\nexport default FundingOrderDetails\r\n"],"names":["ConciliateFundingOrderInfo","fundingOrder","jsxs","Stack","jsx","Typography","color","Box","conciliated","BsPatchCheck","BiBlock","conciliationInfo","number","Fragment","date","userName","propTypes","PropTypes","shape","any","string","GeneralInfoFundingOrder","copied","setCopied","useState","logos","paymentMethods","split","colorStatus","getColorFundingOrderStatusByName","status","forEach","method","methodLogo","getOperationTypeByName","push","component","width","height","amount","referenceNumber","cardNumber","map","Logo","index","position","left","registerDate","fullDate","Link","RouterLink","IconButton","p","copyToClipboard","window","location","host","setTimeout","Check","CopyAll","emails","length","email","Chip","Label","textTransform","lastStatusDate","array","PaymentFundingOrderInfo","payCash","paymentInfo","folio","authorizationCode","useFindFundingOrderDetails","options","customError","setCustomError","useQuery","FUNDING_ORDERS_KEYS","getFundingOrderDetails","error","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode","FundingOrderDetails","useFundingOrderStore","state","setFundingOrder","setOpenDetailsFundingOrder","openDetailsFundingOrder","data","fundingOrderDetails","isLoading","isError","refetch","enabled","useEffect","handleClose","RightPanel","Scrollbar","sx","flexGrow","RequestLoadingComponent","ErrorRequestPage","includes"],"mappings":"qlCAMO,MAAMA,EAA6BA,CAAC,CAAEC,aAAAA,CAAa,IACxD,eAAAC,OAAAA,EAAA,KAACC,EAAM,CAAA,QAAS,EACd,SAAA,CAAAC,MAACC,EAAW,CAAA,QAAS,YAAa,WAAY,OAAQ,SAEtD,eAAA,EACAD,EAAAA,IAACD,GAAM,QAAS,EACd,gBAACA,EAAM,CAAA,cAAe,MAAO,IAAK,EAChC,SAAA,CAACD,EAAAA,KAAAC,EAAA,CAAM,QAAS,GACd,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,eAAA,EACAF,EAAAA,IAACG,GAAI,UAAW,SACbN,oBAAcO,YACbJ,EAAA,IAACK,GAAa,MAAM,QAAQ,WAAY,OAAQ,SAAU,MAAO,CAAA,EAEjEL,EAAAA,IAACM,GAAQ,SAAU,OAAQ,MAAM,KAAA,EAErC,CAAA,CAAA,EACF,EACCN,EAAA,IAAAG,EAAA,CAAI,QAAS,OAAQ,KAAM,EAAK,EAChCH,EAAA,IAAAD,EAAA,CAAM,SAAU,EAAG,QAAS,GAC1BF,WAAcU,EAAAA,GAAAA,YAAAA,EAAAA,mBAAAA,YAAAA,EAAkBC,WAAUX,EAAAA,GAAAA,YAAAA,EAAcU,mBAAdV,YAAAA,EAAgCW,UAAW,IAElFV,OAAAW,EAAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,aAAA,SACCH,EACC,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAW,QAAQ,QAAU,SAAA,KAAEJ,EAAAA,GAAAA,YAAAA,EAAcU,mBAAdV,YAAAA,EAAgCW,SAAU,GAAI,EAAE,CAAA,EAChFR,EAAAA,IAACC,GAAW,QAAQ,QAAU,eAAGJ,EAAAA,GAAAA,YAAAA,EAAcU,mBAAdV,YAAAA,EAAgCa,OAAQ,GAAI,EAAE,CAAA,EAC/EV,EAAAA,IAACC,GAAW,QAAQ,QAAU,eAAGJ,EAAAA,GAAAA,YAAAA,EAAcU,mBAAdV,YAAAA,EAAgCc,WAAY,GAAI,EAAE,CAAA,CAAA,EACrF,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,GAGFf,EAA2BgB,UAAY,CACrCf,aAAcgB,EAAUC,MAAM,CAC5BV,YAAaS,EAAUE,IACvBR,iBAAkBM,EAAUC,MAAM,CAChCJ,KAAMG,EAAUE,IAChBP,OAAQK,EAAUG,OAClBL,SAAUE,EAAUE,GAAAA,CACrB,CAAA,CACF,CACH,EC1CO,MAAME,EAA0BA,CAAC,CAAEpB,aAAAA,CAAa,IAAM,aAC3D,KAAM,CAACqB,EAAQC,CAAS,EAAIC,WAAS,EAAK,EAEpCC,EAAQ,CAAA,EAERC,IAAiBzB,EAAAA,GAAAA,YAAAA,EAAcyB,iBAAdzB,YAAAA,EAA8B0B,MAAM,OAAQ,GAE7DC,EAAcC,EAAiC5B,GAAAA,YAAAA,EAAc6B,MAAM,EAEzEJ,OAAAA,GAAAA,MAAAA,EAAgBK,QAAkBC,GAAA,CAC1BC,MAAAA,EAAaC,EAAuBF,CAAM,EAC5CC,GACFR,EAAMU,KAAK,CACTC,UAAWH,GAAAA,YAAAA,EAAYG,UACvBC,MAAOL,IAAW,UAAY,GAAK,GACnCM,OAAQN,IAAW,UAAY,GAAK,EAAA,CACrC,CACH,GAIA9B,EAAA,KAACC,EAAM,CAAA,QAAS,EACd,SAAA,CAAAC,MAACC,EAAW,CAAA,QAAS,YAAa,WAAY,OAAQ,SAEtD,oBAAA,EACAH,EAAAA,KAACC,EAAM,CAAA,QAAS,EACd,SAAA,CAAAD,EAAA,KAACC,EAAM,CAAA,cAAe,MAAO,IAAK,EAChC,SAAA,CAAAD,EAAA,KAACC,EAAM,CAAA,QAAS,GAAK,KAAM,EACzB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,SAAA,QACCD,EAAW,CAAA,QAAQ,QAASJ,UAAAA,GAAAA,YAAAA,EAAcsC,SAAU,IAAI,CAAA,EAC3D,EAECrC,EAAA,KAAAC,EAAA,CAAM,QAAS,GAAK,KAAM,EACzB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,sBAAA,QACCD,EAAW,CAAA,QAAQ,QAASJ,UAAAA,GAAAA,YAAAA,EAAcuC,kBAAmB,IAAI,CAAA,EACpE,CAAA,EACF,EAECtC,EAAA,KAAAC,EAAA,CAAM,cAAe,MAAO,IAAK,EAChC,SAAA,CAAAD,EAAA,KAACC,EAAM,CAAA,QAAS,GAAK,KAAM,EACzB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,kBAAA,QACCD,EAAW,CAAA,QAAQ,QAASJ,UAAAA,GAAAA,YAAAA,EAAcwC,aAAc,IAAI,CAAA,EAC/D,EAECvC,EAAA,KAAAC,EAAA,CAAM,QAAS,IAAK,KAAM,EACzB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,qBAAA,EACCF,EAAAA,IAAAD,EAAA,CAAM,cAAe,MAAO,WAAY,SAAU,IAAK,EAAG,SAAU,WAClEsB,SAAOiB,GAAAA,YAAAA,EAAAA,IAAI,CAAC,CAAEN,UAAWO,EAAMN,MAAAA,EAAOC,OAAAA,CAAUM,EAAAA,IAC9CxC,EAAAA,IAAAuC,EAAA,CAAiB,GAAI,CAAEN,MAAAA,EAAOC,OAAAA,EAAQO,SAAU,WAAYC,KAAMF,IAAU,EAAI,EAAI,EAAA,GAA1EA,CACZ,GACH,CAAA,EACF,CAAA,EACF,EAEC1C,EAAA,KAAAC,EAAA,CAAM,cAAe,MAAO,IAAK,EAChC,SAAA,CAAAD,EAAA,KAACC,EAAM,CAAA,QAAS,GAAK,KAAM,EACzB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,qBAAA,QACCD,EAAW,CAAA,QAAQ,QAASJ,WAAc8C,EAAAA,GAAAA,YAAAA,EAAAA,eAAAA,YAAAA,EAAcC,WAAY,IAAI,CAAA,EAC3E,EAEC9C,EAAA,KAAAC,EAAA,CAAM,QAAS,GAAK,KAAM,EACzB,SAAA,CAAAC,MAACC,GAAW,UAAS,GAAC,QAAQ,WAAW,aAAc,GAAO,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAE9F,uBAAA,GACCL,GAAAA,YAAAA,EAAcuC,kBACZtC,OAAAC,EAAA,CAAM,WAAY,aAAc,UAAU,MAAM,QAAS,EACxD,SAAA,CAAAC,EAAAA,IAAC6C,GACC,QAAQ,QACR,UAAWC,EACX,UAAU,SACV,GAAK,iBAAgBjD,GAAAA,YAAAA,EAAcuC,eAAgB,GACnD,OAAO,SACP,MAAM,YAEJ,SAAevC,gBAAAA,GAAAA,YAAAA,EAAcuC,eAAgB,EACjD,CAAA,EACApC,EAAAA,IAACG,GAAI,SAAU,WACb,eAAC4C,EACC,CAAA,QAAQ,WACR,GAAI,CAAEN,SAAU,WAAYO,EAAG,CAAA,EAC/B,KAAK,QACL,MAAO9B,EAAS,UAAY,UAC5B,QAAS,IAAM,CACbC,EAAU,EAAI,EACd8B,EAAiB,GAAEC,OAAOC,SAASC,IAAK,iBAAgBvD,GAAAA,YAAAA,EAAcuC,eAAgB,EAAC,EACvFiB,WAAW,IAAM,CACflC,EAAU,EAAK,GACd,GAAI,CAAA,EAGRD,SACCA,EAAAlB,EAAA,IAACsD,EAAM,CAAA,SAAS,QAAQ,GAAI,CAAEpD,MAAO,SAAA,CAAY,CAAA,EAEjDF,EAAAA,IAACuD,EAAQ,CAAA,SAAS,QAAQ,GAAI,CAAErD,MAAO,eAAA,GAE3C,CAAA,EACF,CAAA,EACF,CAAA,EAEJ,CAAA,EACF,EAECJ,EAAA,KAAAC,EAAA,CAAM,cAAe,MAAO,IAAK,EAChC,SAAA,CAAAD,EAAA,KAACC,EAAM,CAAA,QAAS,GAAK,KAAM,EACzB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,iBAAA,IACCL,EAAAA,GAAAA,YAAAA,EAAc2D,SAAd3D,YAAAA,EAAsB4D,QAAS,GAC9B5D,EAAAA,GAAAA,YAAAA,EAAc2D,SAAd3D,YAAAA,EAAsByC,IAAIoB,GACvB1D,MAAAG,EAAA,CAAgB,QAAS,OAAQ,cAAe,SAC/C,SAAAH,EAAA,IAACG,GACC,SAACH,EAAAA,IAAA2D,EAAA,CAAK,MAAO3D,EAAA,IAACC,GAAW,QAAQ,QAASyD,SAAMA,CAAA,CAAA,EAAe,KAAK,OAAU,CAAA,CAChF,CAAA,GAHQA,CAIV,GAGF1D,MAACC,EAAW,CAAA,QAAQ,QAAS,SAAI,IAAA,CAAA,EAErC,EACCH,EAAA,KAAAC,EAAA,CAAM,QAAS,GAAK,KAAM,EACzB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,UAAA,EACAF,EAAAA,IAACG,GACC,SAACH,MAAA4D,EAAA,CACC,QAAS,QACT,MAAOpC,EACP,GAAI,CACFqC,cAAe,YAGhBhE,EAAAA,UAAAA,GAAAA,YAAAA,EAAc6B,SAAU,GAAA,CAC3B,CACF,CAAA,CAAA,EACF,CAAA,EACF,EAEA1B,EAAA,IAACD,EAAM,CAAA,cAAe,MAAO,IAAK,EAChC,SAAAD,EAAAA,KAACC,EAAM,CAAA,QAAS,GAAK,KAAM,EACzB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,uBAAA,QACCD,EAAW,CAAA,QAAQ,QAASJ,UAAAA,GAAAA,YAAAA,EAAciE,iBAAkB,IAAI,CAAA,CAAA,CACnE,CACF,CAAA,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,EAEA7C,EAAwBL,UAAY,CAClCf,aAAcgB,EAAUC,MAAM,CAC5BqB,OAAQtB,EAAUG,OAClBqB,WAAYxB,EAAUG,OACtBwC,OAAQ3C,EAAUkD,MAClBD,eAAgBjD,EAAUG,OAC1BM,eAAgBT,EAAUG,OAC1BoB,gBAAiBvB,EAAUG,OAC3B2B,aAAc9B,EAAUC,MAAM,CAC5B8B,SAAU/B,EAAUG,MAAAA,CACrB,EACDU,OAAQb,EAAUG,MAAAA,CACnB,CACH,ECrLO,MAAMgD,EAA0BA,CAAC,CAAEnE,aAAAA,CAAa,IACrD,WAAAC,OAAAA,EAAA,KAACC,EAAM,CAAA,QAAS,EACd,SAAA,CAAAC,MAACC,EAAW,CAAA,QAAS,YAAa,WAAY,OAAQ,SAEtD,iBAAA,EACAH,EAAAA,KAACC,EAAM,CAAA,QAAS,EACd,SAAA,CAAAD,EAAA,KAACC,EAAM,CAAA,cAAe,MAAO,IAAK,EAChC,SAAA,CAAAD,EAAA,KAACC,EAAM,CAAA,KAAM,EAAG,QAAS,GACvB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,aAAA,EACCF,EAAA,IAAAC,EAAA,CAAW,QAAQ,QAASJ,0BAAcoE,QAAQ,CAAA,EACrD,EACCnE,EAAA,KAAAC,EAAA,CAAM,KAAM,EAAG,QAAS,GACvB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,QAAA,QACCD,EAAW,CAAA,QAAQ,QAASJ,WAAcqE,EAAAA,GAAAA,YAAAA,EAAAA,cAAAA,YAAAA,EAAaC,QAAS,IAAI,CAAA,EACvE,CAAA,EACF,EAECrE,EAAA,KAAAC,EAAA,CAAM,cAAe,MAAO,IAAK,EAChC,SAAA,CAAAD,EAAA,KAACC,EAAM,CAAA,KAAM,EAAG,QAAS,GACvB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,QAAA,QACCD,EAAW,CAAA,QAAQ,QAASJ,WAAcqE,EAAAA,GAAAA,YAAAA,EAAAA,cAAAA,YAAAA,EAAaxD,OAAQ,IAAI,CAAA,EACtE,EACCZ,EAAA,KAAAC,EAAA,CAAM,KAAM,EAAG,QAAS,GACvB,SAAA,CAAAC,EAAA,IAACC,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAEC,MAAO,eAAA,EAAmB,SAEzE,sBAAA,QACCD,EAAW,CAAA,QAAQ,QAASJ,WAAcqE,EAAAA,GAAAA,YAAAA,EAAAA,cAAAA,YAAAA,EAAaE,oBAAqB,IAAI,CAAA,EACnF,CAAA,EACF,CAAA,EACF,CAAA,CACF,CAAA,GAGFJ,EAAwBpD,UAAY,CAClCf,aAAcgB,EAAUC,MAAM,CAC5BmD,QAASpD,EAAUE,IACnBmD,YAAarD,EAAUC,MAAM,CAC3BsD,kBAAmBvD,EAAUG,OAC7BN,KAAMG,EAAUG,OAChBmD,MAAOtD,EAAUG,MAAAA,CAClB,CAAA,CACF,CACH,EC1CO,MAAMqD,EAA6B,CAACxE,EAAcyE,EAAU,KAAO,CACxE,KAAM,CAACC,EAAaC,CAAc,EAAIpD,EAAAA,SAAS,IAAI,EAkBnD,MAAO,CACL,GAjB0BqD,EAC1B,CAACC,EAAoB,QAAS7E,GAAA,YAAAA,EAAc,EAAE,EAC9C,IAAM8E,EAAuB9E,CAAY,EACzC,CACE,UAAW,IACX,qBAAsB,GACtB,QAAS+E,GAAS,CAChB,MAAMC,EAAeC,EAAYF,EAAO,0DAA0D,EAClGJ,EAAeK,CAAY,EAC3BE,EAAM,MAAMF,EAAc,CACxB,KAAMG,EAA+BJ,CAAK,CACpD,CAAS,CACF,EACD,GAAGN,CACJ,CACF,EAGC,MAAOC,GAAe,IACvB,CACH,ECnBMU,GAAsBA,IAAM,CAChC,MAAMpF,EAAeqF,EAA8BC,GAAAA,EAAMtF,YAAY,EAC/DuF,EAAkBF,EAA8BC,GAAAA,EAAMC,eAAe,EACrEC,EAA6BH,EAA8BC,GAAAA,EAAME,0BAA0B,EAC3FC,EAA0BJ,EAA8BC,GAAAA,EAAMG,uBAAuB,EAErF,CACJC,KAAMC,EACNC,UAAAA,EACAC,QAAAA,EACAd,MAAAA,EACAe,QAAAA,CAAAA,EACEtB,EAA2BxE,EAAc,CAAE+F,QAAS,CAAC,CAAC/F,CAAAA,CAAc,EAExEgG,EAAAA,UAAU,IAAM,CACVhG,GACM8F,GACV,EACC,CAAC9F,CAAY,CAAC,EAEjB,MAAMiG,EAAcA,IAAM,CACxBT,EAA2B,EAAK,EAChCD,EAAgB,IAAI,CAAA,EAEtB,aACGW,EACC,CAAA,KAAMT,EACN,YAAAQ,EACA,oBACG/F,EACC,CAAA,SAAA,CAACC,EAAA,IAAAC,EAAA,CAAW,QAAS,KAAM,SAAe,kBAAA,EAC1CH,EAAAA,KAACG,EAAW,CAAA,QAAS,YAAa,SAAA,CAAA,IAAEJ,GAAAA,YAAAA,EAAcuC,eAAAA,EAAgB,CACpE,CAAA,CAAA,EAGF,SAACpC,EAAA,IAAAgG,EAAA,CAAU,eAAgB,CAAEC,GAAI,CAAEC,SAAU,EAAGhE,OAAQ,MAAO,CAAA,EAC7D,SAACpC,EAAA,KAAAC,EAAA,CAAM,QAAS,EAAG,EAAG,EACnB0F,SAAAA,CAAAA,SAAcU,MACdT,GAAW,CAACD,GACXzF,MAACoG,EACC,CAAA,aAAcxB,EACd,aAAc,2BACd,aAAc,IAAMe,MAGvB,CAACD,GAAW,CAACD,GAEV3F,EAAA,KAAAW,EAAA,SAAA,CAAA,SAAA,CAACT,EAAAA,IAAAiB,EAAA,CAAwB,aAAcuE,CAAuB,CAAA,EAC7D,CAAC,SAAU,WAAW,EAAEa,SAASxG,GAAAA,YAAAA,EAAc6B,MAAM,IAAK7B,GAAAA,YAAAA,EAAcoE,WAAY,IAClFjE,EAAAA,IAAAgE,EAAA,CAAwB,aAAcwB,IAEzCxF,EAAAA,IAACJ,EAA2B,CAAA,aAAc4F,CAAuB,CAAA,CAAA,EACnE,CAAA,EAEJ,EACF,CACF,CAAA,CAEJ"}
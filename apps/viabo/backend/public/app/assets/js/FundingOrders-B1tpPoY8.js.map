{"version":3,"mappings":"2rBAaA,MAAMA,EAAuB,CAC3B,CACE,GAAI,EACJ,KAAM,YACN,MAAO,SACR,EACD,CACE,GAAI,EACJ,KAAM,SACN,MAAO,SACR,EACD,CACE,GAAI,EACJ,KAAM,YACN,MAAO,OACR,EACD,CACE,GAAI,EACJ,KAAM,YACN,MAAO,SACR,CACH,EAKMC,EAAmCC,GAAI,OAC3C,QAAAC,EAAAH,EAAqB,KAAKI,GAAU,cAAAA,EAAO,SAASD,EAAAD,GAAA,YAAAA,EAAM,gBAAN,YAAAC,EAAqB,eAAa,IAAtF,YAAAA,EAAyF,QAAS,QCtCvFE,EAAoCC,GAAaC,EAAqBD,CAAS,ECGtFE,EAAkCC,GAAgB,OACtD,OAAIA,GAAA,YAAAA,EAAc,cAAe,UACxBN,EAAAM,GAAA,YAAAA,EAAc,cAAd,YAAAN,EAA2B,MAGhCM,GAAA,YAAAA,EAAc,cAAe,YACxBA,GAAA,YAAAA,EAAc,kBAGnBA,GAAA,YAAAA,EAAc,cAAe,YACxBA,GAAA,YAAAA,EAAc,iBAGhBA,GAAA,YAAAA,EAAc,YACvB,EAEaC,EAAyBC,GAAS,eAC7C,IAAIC,EAAiB,GACjBD,GAAA,MAAAA,EAAO,OAAQA,GAAA,MAAAA,EAAO,mBAAoBA,EAAM,OAAS,IAAMA,EAAM,mBAAqB,GAC5FC,EAAiB,eACRD,GAAA,MAAAA,EAAO,MAAQA,EAAM,OAAS,GACvCC,EAAiB,OACRD,GAAA,MAAAA,EAAO,kBAAoBA,EAAM,mBAAqB,KAC/DC,EAAiB,WAGnB,MAAMC,EAAOF,GAAA,MAAAA,EAAO,aAAeG,EAAO,IAAI,KAAKH,GAAA,YAAAA,EAAO,YAAY,EAAG,cAAe,CAAE,OAAQI,CAAE,CAAE,EAAI,GACpGC,EAAOL,GAAA,MAAAA,EAAO,aAAeG,EAAO,IAAI,KAAKH,GAAA,YAAAA,EAAO,YAAY,EAAG,GAAG,EAAI,GAE1EM,EAAiBT,EAAgCG,CAAK,EAC5D,MAAO,CACL,GAAIA,GAAA,YAAAA,EAAO,GACX,OAAQA,GAAA,YAAAA,EAAO,OACf,WAAYA,GAAA,YAAAA,EAAO,WACnB,qBAAsBA,GAAA,YAAAA,EAAO,qBAC7B,eAAAC,EACA,gBAAiBD,GAAA,YAAAA,EAAO,gBACxB,OAAQO,EAAUP,GAAA,YAAAA,EAAO,MAAM,EAC/B,OAAQA,GAAA,YAAAA,EAAO,WACf,KAAMA,GAAA,YAAAA,EAAO,aACb,aAAc,CACZ,SAAUQ,EAAUR,GAAA,YAAAA,EAAO,YAAY,EACvC,KAAAK,EACA,KAAAH,CACD,EACD,KAAMF,GAAA,YAAAA,EAAO,KACb,QAAQR,EAAAQ,GAAA,YAAAA,EAAO,SAAP,YAAAR,EAAe,MAAM,KAC7B,iBAAiBQ,GAAA,YAAAA,EAAO,eAAgB,KAAO,aAAe,gBAC9D,aAAaA,GAAA,YAAAA,EAAO,eAAgB,KACpC,iBAAkB,CAChB,OAAQA,GAAA,YAAAA,EAAO,mBACf,OAAQA,GAAA,YAAAA,EAAO,mBACf,SAAUA,GAAA,YAAAA,EAAO,qBACjB,KAAMA,GAAA,MAAAA,EAAO,iBAAmBQ,EAAUR,GAAA,YAAAA,EAAO,gBAAgB,EAAI,EACtE,EACD,gBAAiB,CACf,OAAQA,GAAA,YAAAA,EAAO,iBACf,SAAUA,GAAA,YAAAA,EAAO,mBACjB,KAAMA,GAAA,YAAAA,EAAO,gBACd,EACD,QAASA,GAAA,YAAAA,EAAO,iBAChB,YAAaA,GAAA,YAAAA,EAAO,iBACpB,YAAa,CACX,OAAOS,EAAAT,GAAA,YAAAA,EAAO,cAAP,YAAAS,EAAoB,MAC3B,mBAAmBC,EAAAV,GAAA,YAAAA,EAAO,cAAP,YAAAU,EAAoB,kBACvC,MAAMC,EAAAX,GAAA,YAAAA,EAAO,cAAP,MAAAW,EAAoB,KAAOH,GAAUI,EAAAZ,GAAA,YAAAA,EAAO,cAAP,YAAAY,EAAoB,IAAI,EAAI,EACxE,EACD,eAAgBN,EAAiBE,EAAUF,CAAc,EAAI,EAC9D,CACH,EAEaO,EAAsBb,GAAS,CAC1C,MAAMc,EAAiBC,EAAef,GAAA,YAAAA,EAAO,WAAYA,GAAA,YAAAA,EAAO,EAAE,EAClE,OAAOD,EAAuBe,CAAc,CAC9C,EC3EaE,EAAuBC,GAAU,CAC5C,MAAMC,EAAkBH,EAAeE,GAAA,YAAAA,EAAQ,WAAYA,GAAA,YAAAA,EAAQ,EAAE,EACrE,OAAOC,GAAA,YAAAA,EAAiB,IAAIlB,GAASD,EAAuBC,CAAK,EACnE,ECPamB,GAAsB,CACjC,KAAM,sBACN,UAAW,uBACX,QAAS,uBACX,ECAaC,GAAmB,SAAY,CAC1C,KAAM,CAAE,KAAAC,CAAM,EAAG,MAAMC,EAAM,IAAI,qBAAqB,EACtD,OAAON,EAAqBK,CAAI,CAClC,EAEaE,GAAyB,MAAMzB,GAAgB,CAC1D,KAAM,CAAE,KAAAuB,GAAS,MAAMC,EAAM,IAAI,sBAAsBxB,GAAA,YAAAA,EAAc,EAAE,EAAE,EACzE,OAAOe,EAAoBQ,CAAI,CACjC,EAEaG,GAA6B,MAAMxB,GAAS,CACvD,KAAM,CAAE,KAAAqB,GAAS,MAAMC,EAAM,IAAI,0DAA0DtB,GAAA,YAAAA,EAAO,EAAE,EAAE,EACtG,OAAON,EAAkC2B,CAAI,CAC/C,EAEaI,GAAyB,MAAMC,GAAmB,CAC7D,KAAM,CAAE,KAAAL,CAAI,EAAK,MAAMC,EAAM,IAAI,kCAAmCI,CAAe,EACnF,OAAOL,CACT,EAEaM,GAAqB,MAAM7B,GAAgB,CACtD,KAAM,CAAE,KAAAuB,GAAS,MAAMC,EAAM,IAAI,6BAA6BxB,GAAA,YAAAA,EAAc,EAAE,EAAE,EAChF,OAAOuB,CACT,ECjBaO,GAAuB,CAACC,EAAU,KAAO,CACpD,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAAS,IAAI,EAcnD,MAAO,CACL,GAboBC,EAAS,CAACd,GAAoB,IAAI,EAAGC,GAAkB,CAC3E,UAAW,IACX,qBAAsB,GACtB,QAASc,GAAS,CAChB,MAAMC,EAAeC,EAAYF,EAAO,2CAA2C,EACnFH,EAAeI,CAAY,EAC3BE,EAAM,MAAMF,EAAc,CACxB,KAAMG,EAA+BJ,CAAK,CAClD,CAAO,CACF,EACD,GAAGL,CACP,CAAG,EAGC,MAAOC,GAAe,IACvB,CACH,EC3BMS,GAAe,CACnB,oBAAqB,GACrB,uBAAwB,GACxB,wBAAyB,GACzB,aAAc,IAChB,EAEMC,GAAoB,CAACC,EAAKC,KAAS,CACvC,GAAGH,GACH,uBAAwBI,GAAQ,CAC9BF,EACEG,IAAU,CACR,oBAAqBD,CAC7B,GACM,GACA,2BACD,CACF,EACD,gBAAiB3C,GAAS,CACxByC,EACEG,IAAU,CACR,aAAc5C,CACtB,GACM,GACA,mBACD,CACF,EACD,0BAA2B2C,GAAQ,CACjCF,EACEG,IAAU,CACR,uBAAwBD,CAChC,GACM,GACA,+BACD,CACF,EACD,2BAA4BA,GAAQ,CAClCF,EACEG,IAAU,CACR,wBAAyBD,CACjC,GACM,GACA,gCACD,CACF,CACH,GAEaE,EAAuBC,EAAYN,EAAiB,EC5CjDO,YAAuBC,EAAKC,EAAW,CAC/C,MAAEC,SAAUC,CAAYH,IACxB,CAAEvD,QAAW0D,IACbC,EAAa3D,IAAW,YACxB4D,EAAW5D,IAAW,SACtB6D,EAAkBT,EAA8BD,KAAMU,eAAe,EACrEC,EAAyBV,EAA8BD,KAAMW,sBAAsB,EACnFC,EAA4BX,EAA8BD,KAAMY,yBAAyB,EACzFC,EAA6BZ,EAA8BD,KAAMa,0BAA0B,EAE3FC,EAAY,CACfC,OAAAC,EAAA,CAEC,QAAS,IAAM,CACbN,EAAgBH,CAAO,EACvBM,EAA2B,EAAI,EACrBR,KAEZ,GAAI,CAAEY,EAAG,CAET,YAAAC,MAACC,EACC,UAAAD,EAAA,IAACE,EAAW,OAAM,MAAS,GAC7B,EAAe,iBAVV,CAYP,CAAW,EAGb,OAAIX,GAAYD,IACdM,EAAUO,KACRN,OAACC,EAEC,SAAS,IAAM,CACbN,EAAgBH,CAAO,EACvBI,EAAuB,EAAI,EACjBN,KAEZ,GAAI,CAAEY,EAAG,CAET,YAAAC,MAACC,EACC,UAAAD,EAAA,IAACI,EAAQ,OAAM,SAAY,GAC7B,EAAe,cAVV,CAYP,CACF,EAGEd,GACFM,EAAUO,KACRN,OAACC,EAEC,SAAS,IAAM,CACbN,EAAgBH,CAAO,EACvBK,EAA0B,EAAI,EACpBP,KAEZ,GAAI,CAAEY,EAAG,CAET,YAAAC,MAACC,EACC,UAAAD,EAAA,IAACK,EAAO,OAAM,OAAU,GAC1B,EAAe,aAVV,CAYP,CACF,EAGKT,CACT,CChEO,MAAMU,GAAsB,CACjC,CACEC,YAAa,kBACbC,OAAQ,aACRC,aAAc,GACdC,KAAM,GACR,EACA,CACEH,YAAa,uBACbC,OAAQ,SACRE,KAAM,IACNC,cAAe,eACfC,KAAMA,CAAC,CAAEC,OAAMC,SAAQ5B,SAAU,CACzB,MAAEE,SAAUC,CAAYH,IAExB6B,EAAWC,EAAkB3B,iBAAS4B,oBAAoB,EAC1DC,EAAoBH,iBAAUI,UAElC,OAAAnB,MAACoB,EAAM,eAAe,MAAO,WAAY,SAAU,IAAK,EACrDL,YAAaf,EAAA,IAAAkB,EAAA,CAAkB,GAAI,CAAEG,MAAO,GAAIC,OAAQ,KAC3D,EAEJ,CACF,EACA,CACEf,YAAa,SACbC,OAAQ,QACRE,KAAM,IACNE,KAAMA,CAAC,CAAEC,OAAMC,SAAQ5B,MAAKqC,uBACzBvB,EAAA,IAAAwB,EAAA,CAAW,QAAQ,YAAY,WAAW,OACxCD,SACHA,EAAA,CAEJ,EACA,CACEhB,YAAa,OACbC,OAAQ,QACRE,KAAM,IACNE,KAAMA,CAAC,CAAEC,OAAMC,SAAQ5B,SAAU,SACzB,MAAEE,SAAUC,CAAYH,IAC9B,cACGkC,EACC,WAAApB,MAACwB,EAAW,SAAQ,YAAanC,6BAASoC,eAATpC,cAAuBjD,KAAK,EAC5D4D,MAAAwB,EAAA,CAAW,QAAQ,QAAQ,GAAI,CAAEE,MAAO,gBAAiB,EACvDrC,UAASoC,gDAAclF,IAC1B,EACF,GAEJ,CACF,EACA,CACEgE,YAAa,iBACbC,OAAQ,YACRE,KAAM,IACNC,cAAe,eACfC,KAAMA,CAAC,CAAEC,OAAMC,SAAQ5B,SAAU,OACzB,MAAEE,SAAUC,CAAYH,IACxByC,EAAQ,GAERxF,IAAiBkD,mBAASlD,iBAATkD,cAAyBuC,MAAM,OAAQ,GAE9DzF,kBAAgB0F,QAAkBC,GAAA,CAC1BC,QAAaC,EAAuBF,CAAM,EAC5CC,GACFJ,EAAMxB,KAAK,CACTgB,UAAWY,iBAAYZ,UACvBE,MAAOS,IAAW,UAAY,GAAK,GACnCR,OAAQQ,IAAW,UAAY,GAAK,GACrC,CACH,GAIA9B,EAAA,IAACoB,EAAM,eAAe,MAAO,WAAY,SAAU,IAAK,EACrDO,SAAOM,qBAAI,CAAC,CAAEd,UAAWe,EAAMb,QAAOC,QAAUa,MAC9CnC,MAAAkC,EAAA,CAAiB,GAAI,CAAEb,QAAOC,WAApBa,CACZ,EACH,EAEJ,CACF,EACA,CACE5B,YAAa,SACbC,OAAQ,SACRG,cAAe,eACfD,KAAM,IACNE,KAAMA,CAAC,CAAEC,OAAMC,SAAQ5B,SAAU,CACzB,MAAEE,SAAUC,CAAYH,IAExBwC,EAAQlG,EAAiC6D,iBAAS1D,MAAM,EAE9D,OACGqE,MAAAoB,EAAA,CAAM,cAAe,MAAO,WAAY,SAAU,IAAK,EACtD,SAACpB,EAAA,IAAAoC,EAAA,CACC,QAAS,QACT,MAAAV,EACA,GAAI,CACFW,cAAe,YACjB,EAEChD,SAAS1D,uBACZ,EACF,EAEJ,CACF,EACA,CACE4E,YAAa,kBACbC,OAAQ,eACRG,cAAe,eACfD,KAAM,GACNE,KAAMA,CAAC,CAAEC,OAAMC,SAAQ5B,SAAU,CACzB,MAAEE,SAAUC,CAAYH,IAE9B,OACGc,MAAAoB,EAAA,CACC,cAAe,MACf,MAAO,EACP,eAAgB,SAChB,WAAY,SACZ,GAAI,EACJ,IAAK,EACL,MAAO,UAEN/B,SAASiD,uBACPtC,EAAA,IAAAuC,EAAA,CAAa,MAAM,QAAQ,WAAY,OAAQ,SAAU,MAAO,SAEhEC,EAAQ,UAAU,OAAQ,MAAM,OAErC,EAEJ,CACF,CAAC,EClIGC,GAAqBA,IAAM,CACzB,MAAElF,OAAMmF,UAASC,YAAWC,aAAYxE,SAAUN,GAAqB,EAEvE+E,EAAUvC,GAEhB,OACGN,MAAA8C,EAAA,CACC,SAAC9C,MAAA+C,EAAA,CACC,oBAAmB,GACnB,wBAAuB,GACvB,mBAAkB,GAClB,wBAAuB,GACvB,oBAAmB,GACnB,iBAAgB,GAChB,mBAAkB,GAClB,sBAAsB,OACtB,oBAAqB,GACrB,QAAAF,EACA,KAAMtF,GAAQ,GACd,QAAAmF,EACA,UAAWtE,EACX,cAAe,MACf,aAAc,CACZ4E,QAAS,UACTC,QAAS,CACP,CACEC,GAAI,OACJC,KAAM,GACP,GAGL,MAAO,CACLR,YACAS,gBAAiBV,EACjBW,iBAAkBT,GAEpB,wBAAyB,CACvB,kBAAmB,CACjBpC,OAAQ,WACR8C,QAAS,EACX,EACA,iBAAkB,CAChBA,QAAS,EACX,GAEF,uBAAwB,CAAEC,GAAI,CAAEC,UAAW,CAAEC,GAAI,QAASC,GAAI,QAASC,GAAI,OAAQ,CAAE,CAAE,EACvF,yBAA0B,CAAC,CAAExE,YAAWD,KAAUD,OAAuBC,EAAKC,CAAS,CACvF,EACJ,EAEJ,EChDMyE,GAAkBC,EAAQC,OAAK,IAAMC,EAAA,WAAO,+BAA+B,4FAAC,CAAC,EAC7EC,GAAqBH,EAAQC,OAAK,IAAMC,EAAA,WAAO,kCAAkC,0FAAC,CAAC,EACnFE,GAAsBJ,EAAQC,OAAK,IAAMC,EAAA,WAAO,mCAAmC,6FAAC,CAAC,EAErFG,GAAgBA,IAAM,CAC1B,MAAMC,EAAsBpF,EAA8BD,KAAMqF,mBAAmB,EAC7EC,EAAyBrF,EAA8BD,KAAMsF,sBAAsB,EACnFC,EAA0BtF,EAA8BD,KAAMuF,uBAAuB,EAE3F,OACGrE,EAAA,IAAAsE,EAAA,CAAK,MAAM,oBACV,gBAACC,EACC,WAAAvE,MAACwE,EACC,MAAM,oBACN,MAAO,CAAC,CAAE/I,KAAM,SAAUgJ,KAAMC,EAAeC,MAAQ,CAAElJ,KAAM,mBAAqB,GACpF,QACDgH,GAAqB,IACrB0B,SAAwBP,OACxBQ,SAA2BJ,OAC3BK,SAA4BJ,OAC/B,EACF,EAEJ","names":["FUNDING_ORDER_STATUS","getColorFundingOrderStatusByName","name","_a","status","ConciliateMovementsByOrderAdapter","movements","CardMovementsAdapter","getLastStatusDateByFundingOrder","fundingOrder","getFundingOrderAdapter","order","paymentMethods","date","format","es","time","lastStatusDate","fCurrency","fDateTime","_b","_c","_d","_e","FundingOrderAdapter","decryptedOrder","getDecryptInfo","FundingOrdersAdapter","orders","decryptedOrders","FUNDING_ORDERS_KEYS","getFundingOrders","data","axios","getFundingOrderDetails","getMovementsByFundingOrder","conciliateFundingOrder","conciliateOrder","cancelFundingOrder","useFindFundingOrders","options","customError","setCustomError","useState","useQuery","error","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode","initialState","fundingOrderStore","set","get","open","state","useFundingOrderStore","createStore","getFundingOrderActions","row","closeMenu","original","rowData","hasPending","hasPayed","setFundingOrder","setOpenConciliateModal","setOpenCancelFundingOrder","setOpenDetailsFundingOrder","menuItems","jsxs","MenuItem","m","jsx","ListItemIcon","Visibility","push","AddTask","Cancel","FundingOrderColumns","accessorKey","header","enableHiding","size","filterVariant","Cell","cell","column","cardLogo","getCardTypeByName","paymentProcessorName","CardLogoComponent","component","Stack","width","height","renderedCellValue","Typography","registerDate","color","logos","split","forEach","method","methodLogo","getOperationTypeByName","map","Logo","index","Label","textTransform","conciliated","BsPatchCheck","BiBlock","FundingOrdersTable","isError","isLoading","isFetching","columns","Card","MaterialDataTable","density","sorting","id","desc","showAlertBanner","showProgressBars","maxSize","sx","maxHeight","md","lg","xl","ConciliateModal","Lodable","lazy","__vitePreload","CancelFundingOrder","FundingOrderDetails","FundingOrders","openConciliateModal","openCancelFundingOrder","openDetailsFundingOrder","Page","ContainerPage","HeaderPage","href","PATH_DASHBOARD","root"],"sources":["../../../../../frontend/src/app/shared/services/colorStatus.js","../../../../../frontend/src/app/business/funding-orders/adapters/conciliate-movements-by-order-adapter.js","../../../../../frontend/src/app/business/funding-orders/adapters/funding-order-details-adapter.js","../../../../../frontend/src/app/business/funding-orders/adapters/funding-orders-adapter.js","../../../../../frontend/src/app/business/funding-orders/adapters/funding-orders-keys.js","../../../../../frontend/src/app/business/funding-orders/services/FundingOrdersRepository.js","../../../../../frontend/src/app/business/funding-orders/hooks/useFindFundingOrders.js","../../../../../frontend/src/app/business/funding-orders/store/funding-order-store.js","../../../../../frontend/src/app/business/funding-orders/components/list/FundingOrderActions.jsx","../../../../../frontend/src/app/business/funding-orders/components/list/FundingOrderColumns.jsx","../../../../../frontend/src/app/business/funding-orders/components/FundingOrdersTable.jsx","../../../../../frontend/src/app/business/funding-orders/pages/FundingOrders.jsx"],"sourcesContent":["const CATALOG_CARD_STATUS = [\r\n  {\r\n    id: 4,\r\n    name: 'Sin Asignar',\r\n    color: 'info'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Asignado',\r\n    color: 'primary'\r\n  }\r\n]\r\n\r\nconst FUNDING_ORDER_STATUS = [\r\n  {\r\n    id: 6,\r\n    name: 'PENDIENTE',\r\n    color: 'warning'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'PAGADA',\r\n    color: 'primary'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'CANCELADA',\r\n    color: 'error'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'LIQUIDADA',\r\n    color: 'success'\r\n  }\r\n]\r\n\r\nconst getColorCardStatusById = id =>\r\n  CATALOG_CARD_STATUS.find(status => status.id.toString() === id.toString())?.color || 'info'\r\n\r\nconst getColorFundingOrderStatusByName = name =>\r\n  FUNDING_ORDER_STATUS.find(status => status.name === name?.toLowerCase()?.toUpperCase())?.color || 'info'\r\n\r\nexport { getColorCardStatusById, getColorFundingOrderStatusByName }\r\n","import { CardMovementsAdapter } from '@/app/shared/adapters'\r\n\r\nexport const ConciliateMovementsByOrderAdapter = movements => CardMovementsAdapter(movements)\r\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\n\r\nimport { fCurrency, fDateTime, getDecryptInfo } from '@/shared/utils'\r\n\r\nconst getLastStatusDateByFundingOrder = fundingOrder => {\r\n  if (fundingOrder?.statusName === 'Pagada') {\r\n    return fundingOrder?.payCashData?.date\r\n  }\r\n\r\n  if (fundingOrder?.statusName === 'Liquidada') {\r\n    return fundingOrder?.conciliationDate\r\n  }\r\n\r\n  if (fundingOrder?.statusName === 'Cancelada') {\r\n    return fundingOrder?.cancellationDate\r\n  }\r\n\r\n  return fundingOrder?.registerDate\r\n}\r\n\r\nexport const getFundingOrderAdapter = order => {\r\n  let paymentMethods = ''\r\n  if (order?.spei && order?.referencePayCash && order.spei !== '' && order.referencePayCash !== '') {\r\n    paymentMethods = 'SPEI,PAYCASH'\r\n  } else if (order?.spei && order.spei !== '') {\r\n    paymentMethods = 'SPEI'\r\n  } else if (order?.referencePayCash && order.referencePayCash !== '') {\r\n    paymentMethods = 'PAYCASH'\r\n  }\r\n\r\n  const date = order?.registerDate ? format(new Date(order?.registerDate), 'dd MMM yyyy', { locale: es }) : ''\r\n  const time = order?.registerDate ? format(new Date(order?.registerDate), 'p') : ''\r\n\r\n  const lastStatusDate = getLastStatusDateByFundingOrder(order)\r\n  return {\r\n    id: order?.id,\r\n    cardId: order?.cardId,\r\n    cardNumber: order?.cardNumber,\r\n    paymentProcessorName: order?.paymentProcessorName,\r\n    paymentMethods,\r\n    referenceNumber: order?.referenceNumber,\r\n    amount: fCurrency(order?.amount),\r\n    status: order?.statusName,\r\n    date: order?.registerDate,\r\n    registerDate: {\r\n      fullDate: fDateTime(order?.registerDate),\r\n      time,\r\n      date\r\n    },\r\n    spei: order?.spei,\r\n    emails: order?.emails?.split(','),\r\n    conciliatedName: order?.conciliated !== 'No' ? 'Conciliada' : 'Sin Conciliar',\r\n    conciliated: order?.conciliated !== 'No',\r\n    conciliationInfo: {\r\n      number: order?.conciliationNumber,\r\n      userId: order?.conciliationUserId,\r\n      userName: order?.conciliationUserName,\r\n      date: order?.conciliationDate ? fDateTime(order?.conciliationDate) : ''\r\n    },\r\n    cancelationInfo: {\r\n      userId: order?.canceledByUserId,\r\n      userName: order?.canceledByUserName,\r\n      date: order?.cancellationDate\r\n    },\r\n    payCash: order?.referencePayCash,\r\n    payCashURLS: order?.instructionsUrls,\r\n    paymentInfo: {\r\n      folio: order?.payCashData?.folio,\r\n      authorizationCode: order?.payCashData?.authorizationCode,\r\n      date: order?.payCashData?.date ? fDateTime(order?.payCashData?.date) : ''\r\n    },\r\n    lastStatusDate: lastStatusDate ? fDateTime(lastStatusDate) : ''\r\n  }\r\n}\r\n\r\nexport const FundingOrderAdapter = order => {\r\n  const decryptedOrder = getDecryptInfo(order?.ciphertext, order?.iv)\r\n  return getFundingOrderAdapter(decryptedOrder)\r\n}\r\n","import { getFundingOrderAdapter } from './funding-order-details-adapter'\r\n\r\nimport { getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const FundingOrdersAdapter = orders => {\r\n  const decryptedOrders = getDecryptInfo(orders?.ciphertext, orders?.iv)\r\n  return decryptedOrders?.map(order => getFundingOrderAdapter(order))\r\n}\r\n","export const FUNDING_ORDERS_KEYS = {\r\n  LIST: 'funding-orders-list',\r\n  MOVEMENTS: 'conciliate-movements',\r\n  DETAILS: 'funding-order-details'\r\n}\r\n","import { ConciliateMovementsByOrderAdapter, FundingOrderAdapter, FundingOrdersAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getFundingOrders = async () => {\r\n  const { data } = await axios.get('/api/funding-orders')\r\n  return FundingOrdersAdapter(data)\r\n}\r\n\r\nexport const getFundingOrderDetails = async fundingOrder => {\r\n  const { data } = await axios.get(`/api/funding-order/${fundingOrder?.id}`)\r\n  return FundingOrderAdapter(data)\r\n}\r\n\r\nexport const getMovementsByFundingOrder = async order => {\r\n  const { data } = await axios.get(`/api/master-card/movements/unreconciled?fundingOrderId=${order?.id}`)\r\n  return ConciliateMovementsByOrderAdapter(data)\r\n}\r\n\r\nexport const conciliateFundingOrder = async conciliateOrder => {\r\n  const { data } = await axios.put(`/api/funding-order/conciliation`, conciliateOrder)\r\n  return data\r\n}\r\n\r\nexport const cancelFundingOrder = async fundingOrder => {\r\n  const { data } = await axios.put(`/api/funding-order/cancel/${fundingOrder?.id}`)\r\n  return data\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { FUNDING_ORDERS_KEYS } from '../adapters'\r\nimport { getFundingOrders } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindFundingOrders = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const fundingOrders = useQuery([FUNDING_ORDERS_KEYS.LIST], getFundingOrders, {\r\n    staleTime: 60000,\r\n    refetchOnWindowFocus: false,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'No se puede obtener las ordenes de fondeo')\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...fundingOrders,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  openConciliateModal: false,\r\n  openCancelFundingOrder: false,\r\n  openDetailsFundingOrder: false,\r\n  fundingOrder: null\r\n}\r\n\r\nconst fundingOrderStore = (set, get) => ({\r\n  ...initialState,\r\n  setOpenConciliateModal: open => {\r\n    set(\r\n      state => ({\r\n        openConciliateModal: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_CONCILIATE_MODAL'\r\n    )\r\n  },\r\n  setFundingOrder: order => {\r\n    set(\r\n      state => ({\r\n        fundingOrder: order\r\n      }),\r\n      false,\r\n      'SET_FUNDING_ORDER'\r\n    )\r\n  },\r\n  setOpenCancelFundingOrder: open => {\r\n    set(\r\n      state => ({\r\n        openCancelFundingOrder: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_CANCEL_FUNDING_ORDER'\r\n    )\r\n  },\r\n  setOpenDetailsFundingOrder: open => {\r\n    set(\r\n      state => ({\r\n        openDetailsFundingOrder: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_DETAILS_FUNDING_ORDER'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useFundingOrderStore = createStore(fundingOrderStore)\r\n","import { AddTask, Cancel, Visibility } from '@mui/icons-material'\r\nimport { ListItemIcon, MenuItem } from '@mui/material'\r\n\r\nimport { useFundingOrderStore } from '../../store'\r\n\r\nexport function getFundingOrderActions(row, closeMenu) {\r\n  const { original: rowData } = row\r\n  const { status } = rowData\r\n  const hasPending = status === 'Pendiente'\r\n  const hasPayed = status === 'Pagada'\r\n  const setFundingOrder = useFundingOrderStore(state => state.setFundingOrder)\r\n  const setOpenConciliateModal = useFundingOrderStore(state => state.setOpenConciliateModal)\r\n  const setOpenCancelFundingOrder = useFundingOrderStore(state => state.setOpenCancelFundingOrder)\r\n  const setOpenDetailsFundingOrder = useFundingOrderStore(state => state.setOpenDetailsFundingOrder)\r\n\r\n  const menuItems = [\r\n    <MenuItem\r\n      key={0}\r\n      onClick={() => {\r\n        setFundingOrder(rowData)\r\n        setOpenDetailsFundingOrder(true)\r\n        closeMenu()\r\n      }}\r\n      sx={{ m: 0 }}\r\n    >\r\n      <ListItemIcon>\r\n        <Visibility color=\"info\" />\r\n      </ListItemIcon>\r\n      Ver Detalles\r\n    </MenuItem>\r\n  ]\r\n\r\n  if (hasPayed || hasPending) {\r\n    menuItems.push(\r\n      <MenuItem\r\n        key={1}\r\n        onClick={() => {\r\n          setFundingOrder(rowData)\r\n          setOpenConciliateModal(true)\r\n          closeMenu()\r\n        }}\r\n        sx={{ m: 0 }}\r\n      >\r\n        <ListItemIcon>\r\n          <AddTask color=\"success\" />\r\n        </ListItemIcon>\r\n        Conciliar\r\n      </MenuItem>\r\n    )\r\n  }\r\n\r\n  if (hasPending) {\r\n    menuItems.push(\r\n      <MenuItem\r\n        key={2}\r\n        onClick={() => {\r\n          setFundingOrder(rowData)\r\n          setOpenCancelFundingOrder(true)\r\n          closeMenu()\r\n        }}\r\n        sx={{ m: 0 }}\r\n      >\r\n        <ListItemIcon>\r\n          <Cancel color=\"error\" />\r\n        </ListItemIcon>\r\n        Cancelar\r\n      </MenuItem>\r\n    )\r\n  }\r\n\r\n  return menuItems\r\n}\r\n","import { Stack, Typography } from '@mui/material'\r\nimport { BiBlock } from 'react-icons/bi'\r\nimport { BsPatchCheck } from 'react-icons/bs'\r\n\r\nimport { getCardTypeByName, getColorFundingOrderStatusByName, getOperationTypeByName } from '@/app/shared/services'\r\nimport { Label } from '@/shared/components/form'\r\n\r\nexport const FundingOrderColumns = [\r\n  {\r\n    accessorKey: 'referenceNumber', // access nested data with dot notation\r\n    header: 'Referencia',\r\n    enableHiding: false,\r\n    size: 100\r\n  },\r\n  {\r\n    accessorKey: 'paymentProcessorName', // access nested data with dot notation\r\n    header: 'Cuenta',\r\n    size: 100,\r\n    filterVariant: 'multi-select',\r\n    Cell: ({ cell, column, row }) => {\r\n      const { original: rowData } = row\r\n\r\n      const cardLogo = getCardTypeByName(rowData?.paymentProcessorName)\r\n      const CardLogoComponent = cardLogo?.component\r\n      return (\r\n        <Stack flexDirection={'row'} alignItems={'center'} gap={1}>\r\n          {cardLogo && <CardLogoComponent sx={{ width: 30, height: 30 }} />}\r\n        </Stack>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    accessorKey: 'amount', // access nested data with dot notation\r\n    header: 'Monto',\r\n    size: 100,\r\n    Cell: ({ cell, column, row, renderedCellValue }) => (\r\n      <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n        {renderedCellValue}\r\n      </Typography>\r\n    )\r\n  },\r\n  {\r\n    accessorKey: 'date', // normal accessorKey\r\n    header: 'Fecha',\r\n    size: 100,\r\n    Cell: ({ cell, column, row }) => {\r\n      const { original: rowData } = row\r\n      return (\r\n        <Stack>\r\n          <Typography variant=\"subtitle2\">{rowData?.registerDate?.date}</Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {rowData?.registerDate?.time}\r\n          </Typography>\r\n        </Stack>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    accessorKey: 'paymentMethods', // access nested data with dot notation\r\n    header: 'Método(s)',\r\n    size: 120,\r\n    filterVariant: 'multi-select',\r\n    Cell: ({ cell, column, row }) => {\r\n      const { original: rowData } = row\r\n      const logos = []\r\n\r\n      const paymentMethods = rowData?.paymentMethods?.split(',') || []\r\n\r\n      paymentMethods?.forEach(method => {\r\n        const methodLogo = getOperationTypeByName(method)\r\n        if (methodLogo) {\r\n          logos.push({\r\n            component: methodLogo?.component,\r\n            width: method === 'PAYCASH' ? 50 : 30,\r\n            height: method === 'PAYCASH' ? 50 : 30\r\n          })\r\n        }\r\n      })\r\n\r\n      return (\r\n        <Stack flexDirection={'row'} alignItems={'center'} gap={1}>\r\n          {logos?.map(({ component: Logo, width, height }, index) => (\r\n            <Logo key={index} sx={{ width, height }} />\r\n          ))}\r\n        </Stack>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    accessorKey: 'status', // access nested data with dot notation\r\n    header: 'Estado',\r\n    filterVariant: 'multi-select',\r\n    size: 100,\r\n    Cell: ({ cell, column, row }) => {\r\n      const { original: rowData } = row\r\n\r\n      const color = getColorFundingOrderStatusByName(rowData?.status)\r\n\r\n      return (\r\n        <Stack flexDirection={'row'} alignItems={'center'} gap={1}>\r\n          <Label\r\n            variant={'ghost'}\r\n            color={color}\r\n            sx={{\r\n              textTransform: 'capitalize'\r\n            }}\r\n          >\r\n            {rowData?.status}\r\n          </Label>\r\n        </Stack>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    accessorKey: 'conciliatedName', // access nested data with dot notation\r\n    header: '¿Conciliada?',\r\n    filterVariant: 'multi-select',\r\n    size: 80,\r\n    Cell: ({ cell, column, row }) => {\r\n      const { original: rowData } = row\r\n\r\n      return (\r\n        <Stack\r\n          flexDirection={'row'}\r\n          width={1}\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          mr={2}\r\n          gap={1}\r\n          color={'primary'}\r\n        >\r\n          {rowData?.conciliated ? (\r\n            <BsPatchCheck color=\"green\" fontWeight={'bold'} fontSize={'18px'} />\r\n          ) : (\r\n            <BiBlock fontSize={'18px'} color=\"red\" />\r\n          )}\r\n        </Stack>\r\n      )\r\n    }\r\n  }\r\n]\r\n","import { Card } from '@mui/material'\r\n\r\nimport { getFundingOrderActions } from './list/FundingOrderActions'\r\nimport { FundingOrderColumns } from './list/FundingOrderColumns'\r\n\r\nimport { useFindFundingOrders } from '../hooks'\r\n\r\nimport { MaterialDataTable } from '@/shared/components/dataTables'\r\n\r\nconst FundingOrdersTable = () => {\r\n  const { data, isError, isLoading, isFetching, error } = useFindFundingOrders()\r\n\r\n  const columns = FundingOrderColumns\r\n\r\n  return (\r\n    <Card>\r\n      <MaterialDataTable\r\n        enableColumnPinning\r\n        enableColumnFilterModes\r\n        enableStickyHeader\r\n        enableRowVirtualization\r\n        enableFacetedValues\r\n        enableRowActions\r\n        enableRowSelection\r\n        positionActionsColumn=\"last\"\r\n        enableDensityToggle={false}\r\n        columns={columns}\r\n        data={data || []}\r\n        isError={isError}\r\n        textError={error}\r\n        selectAllMode={'all'}\r\n        initialState={{\r\n          density: 'compact',\r\n          sorting: [\r\n            {\r\n              id: 'date',\r\n              desc: true\r\n            }\r\n          ]\r\n        }}\r\n        state={{\r\n          isLoading,\r\n          showAlertBanner: isError,\r\n          showProgressBars: isFetching\r\n        }}\r\n        displayColumnDefOptions={{\r\n          'mrt-row-actions': {\r\n            header: 'Acciones', // change header text\r\n            maxSize: 80 // make actions column wider\r\n          },\r\n          'mrt-row-select': {\r\n            maxSize: 10\r\n          }\r\n        }}\r\n        muiTableContainerProps={{ sx: { maxHeight: { md: '350px', lg: '450px', xl: '700px' } } }}\r\n        renderRowActionMenuItems={({ closeMenu, row }) => getFundingOrderActions(row, closeMenu)}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FundingOrdersTable\r\n","import { lazy } from 'react'\r\n\r\nimport { FundingOrdersTable } from '../components'\r\nimport { useFundingOrderStore } from '../store'\r\n\r\nimport { PATH_DASHBOARD } from '@/routes'\r\nimport { Page } from '@/shared/components/containers'\r\nimport { ContainerPage } from '@/shared/components/containers/ContainerPage'\r\nimport { HeaderPage } from '@/shared/components/layout'\r\nimport { Lodable } from '@/shared/components/lodables'\r\n\r\nconst ConciliateModal = Lodable(lazy(() => import('../components/ConciliateModal')))\r\nconst CancelFundingOrder = Lodable(lazy(() => import('../components/CancelFundingOrder')))\r\nconst FundingOrderDetails = Lodable(lazy(() => import('../components/FundingOrderDetails')))\r\n\r\nconst FundingOrders = () => {\r\n  const openConciliateModal = useFundingOrderStore(state => state.openConciliateModal)\r\n  const openCancelFundingOrder = useFundingOrderStore(state => state.openCancelFundingOrder)\r\n  const openDetailsFundingOrder = useFundingOrderStore(state => state.openDetailsFundingOrder)\r\n\r\n  return (\r\n    <Page title=\"Órdenes de Fondeo\">\r\n      <ContainerPage>\r\n        <HeaderPage\r\n          name={'Órdenes de Fondeo'}\r\n          links={[{ name: 'Inicio', href: PATH_DASHBOARD.root }, { name: 'Órdenes de Fondeo' }]}\r\n        />\r\n        <FundingOrdersTable />\r\n        {openConciliateModal && <ConciliateModal />}\r\n        {openCancelFundingOrder && <CancelFundingOrder />}\r\n        {openDetailsFundingOrder && <FundingOrderDetails />}\r\n      </ContainerPage>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default FundingOrders\r\n"],"file":"assets/js/FundingOrders-B1tpPoY8.js"}
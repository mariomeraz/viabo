{"version":3,"file":"cardMovementsAdapter-DwJrnLuP.js","sources":["../../../../../frontend/src/app/shared/adapters/cardMovementsAdapter.js"],"sourcesContent":["import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\n\r\nimport { fCurrency, fDateTime, getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const CardMovementsAdapter = movements => {\r\n  const decryptedMovements = getDecryptInfo(movements?.ciphertext, movements?.iv)\r\n  let expenses = 0\r\n  let income = 0\r\n  let expensesWithoutInvoice = 0\r\n  let expensesWithInvoice = 0\r\n  let expensesWithoutChecked = 0\r\n\r\n  return {\r\n    movements:\r\n      decryptedMovements?.map(movement => {\r\n        const amount = parseFloat(movement?.amount || '0')\r\n        movement?.type.toLowerCase() === 'gasto' ? (expenses += amount) : (income += amount)\r\n        const date = movement?.date ? format(new Date(movement?.date), 'dd MMM yyyy', { locale: es }) : ''\r\n        const time = movement?.date ? format(new Date(movement?.date), 'p') : ''\r\n\r\n        const expensesControlFiles = movement?.receiptFiles ? movement?.receiptFiles?.split(',') : []\r\n        const invoiceFiles = expensesControlFiles?.reduce(\r\n          (result, file) => {\r\n            if (file.endsWith('.xml')) {\r\n              result.xml = file\r\n            } else if (file.endsWith('.pdf')) {\r\n              result.pdf = file\r\n            }\r\n            return result\r\n          },\r\n          {\r\n            xml: null,\r\n            pdf: null\r\n          }\r\n        )\r\n\r\n        const isInvoice = Boolean(invoiceFiles?.xml !== null && invoiceFiles?.pdf !== null)\r\n        const IS_OTHERS_CHARGES_TYPE = Boolean(movement?.operationType?.toLowerCase() === 'otros cargos')\r\n\r\n        if (IS_OTHERS_CHARGES_TYPE && Boolean(movement?.checked) && isInvoice) {\r\n          expensesWithInvoice += amount\r\n        }\r\n\r\n        if (IS_OTHERS_CHARGES_TYPE && Boolean(movement?.checked) && !isInvoice) {\r\n          expensesWithoutInvoice += amount\r\n        }\r\n\r\n        if (IS_OTHERS_CHARGES_TYPE && !movement?.checked) {\r\n          expensesWithoutChecked += amount\r\n        }\r\n\r\n        return {\r\n          id: movement?.transactionId,\r\n          serverDate: movement?.date,\r\n          fullDate: fDateTime(movement?.date),\r\n          date,\r\n          time,\r\n          description: movement?.description,\r\n          amount,\r\n          amountFormat: fCurrency(amount),\r\n          type: movement?.type.toLowerCase(),\r\n          concept: movement?.concept ?? '',\r\n          operationType: movement?.operationType?.toUpperCase(),\r\n          cardId: movement?.cardId,\r\n          commerceId: movement?.cardCommerceId,\r\n          ownerCard: movement?.cardMain\r\n            ? movement?.cardCommerceName\r\n            : movement?.cardOwnerName === ''\r\n            ? 'Sin Asignar'\r\n            : movement?.cardOwnerName,\r\n          cardNumber: movement?.cardMain ? 'Cuenta Maestra' : movement?.cardNumber,\r\n          cardCommerceName: movement?.cardCommerceName,\r\n          paymentProcessor: movement?.cardPaymentProcessor,\r\n          verified: Boolean(movement?.checked),\r\n          isMainCard: Boolean(movement?.cardMain),\r\n          expensesControl: {\r\n            id: movement?.receiptId,\r\n            isInvoice,\r\n            invoiceFiles,\r\n            otherFiles: !isInvoice ? expensesControlFiles : []\r\n          },\r\n          original: movement\r\n        }\r\n      }) ?? [],\r\n    income: fCurrency(income),\r\n    expenses: fCurrency(expenses),\r\n    balanceMovements: fCurrency(income - expenses),\r\n    expensesWithInvoice: fCurrency(expensesWithInvoice),\r\n    expensesWithoutInvoice: fCurrency(expensesWithoutInvoice),\r\n    expensesWithoutChecked: fCurrency(expensesWithoutChecked),\r\n    totalExpensesOtherCharges: fCurrency(expensesWithInvoice + expensesWithoutInvoice + expensesWithoutChecked)\r\n  }\r\n}\r\n"],"names":["CardMovementsAdapter","movements","decryptedMovements","getDecryptInfo","expenses","income","expensesWithoutInvoice","expensesWithInvoice","expensesWithoutChecked","movement","amount","date","format","es","time","expensesControlFiles","_a","invoiceFiles","result","file","isInvoice","IS_OTHERS_CHARGES_TYPE","_b","fDateTime","fCurrency","_c"],"mappings":"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"}
{"version":3,"file":"TicketAddAttachmentFiles-s-HOYPQW.js","sources":["../../../../../frontend/src/app/support/ticket-support-list/components/conversation/TicketAttachmentFile.jsx","../../../../../frontend/src/app/support/ticket-support-list/components/conversation/TicketAddAttachmentFiles.jsx"],"sourcesContent":["import { memo, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { DeleteOutline, FilePresentRounded } from '@mui/icons-material'\r\nimport { Box, IconButton, Stack, Tooltip } from '@mui/material'\r\n\r\nimport { Image } from '@/shared/components/images'\r\nimport { getFileURL } from '@/shared/utils'\r\n\r\nconst TicketAttachmentFile = ({ isLoading, file, handleRemoveFile }) => {\r\n  const url = useMemo(() => getFileURL(file, false), [file])\r\n\r\n  return (\r\n    <Stack direction=\"column\" alignItems=\"center\" spacing={1}>\r\n      {!isLoading && (\r\n        <IconButton title=\"Borrar\" color=\"error\" size=\"small\" onClick={() => handleRemoveFile(file)}>\r\n          <DeleteOutline />\r\n        </IconButton>\r\n      )}\r\n      <Tooltip title={file?.name}>\r\n        <Box\r\n          sx={{\r\n            width: 80,\r\n            height: 80,\r\n            flexShrink: 1,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          {url === 'image' && (\r\n            <Image\r\n              src={URL.createObjectURL(file)}\r\n              alt={file?.name}\r\n              sx={{ width: 80, height: 80, borderRadius: 2 }}\r\n              ratio=\"1/1\"\r\n            />\r\n          )}\r\n          {url && url !== 'image' && (\r\n            <Image src={url} alt={file.name} sx={{ width: 80, height: 80, borderRadius: 2 }} />\r\n          )}\r\n          {!url && <FilePresentRounded sx={{ width: 80, height: 80 }} />}\r\n        </Box>\r\n      </Tooltip>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nTicketAttachmentFile.propTypes = {\r\n  file: PropTypes.shape({\r\n    name: PropTypes.any\r\n  }),\r\n  handleRemoveFile: PropTypes.func,\r\n  isLoading: PropTypes.any\r\n}\r\n\r\nexport default memo(TicketAttachmentFile)\r\n","import { memo, useMemo, useRef } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Divider, Stack } from '@mui/material'\r\n\r\nimport TicketAttachmentFile from './TicketAttachmentFile'\r\n\r\nconst TicketAddAttachmentFiles = ({ files, isLoading, handleRemoveFile }) => {\r\n  const scrollRef = useRef()\r\n\r\n  const filesTotal = useMemo(() => files, [files])\r\n\r\n  if (filesTotal?.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        direction=\"row\"\r\n        divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n        ref={scrollRef}\r\n        sx={{\r\n          p: 3,\r\n          overflowX: 'scroll',\r\n          scrollBehavior: 'smooth',\r\n          backgroundColor: theme => theme.palette.grey[500_12],\r\n          backdropFilter: `blur(10px)`,\r\n          WebkitBackdropFilter: `blur(10px)`\r\n        }}\r\n        spacing={2}\r\n      >\r\n        {filesTotal?.map((file, index) => (\r\n          <TicketAttachmentFile\r\n            key={`${file?.name}`}\r\n            file={file}\r\n            isLoading={isLoading}\r\n            handleRemoveFile={handleRemoveFile}\r\n          />\r\n        ))}\r\n      </Stack>\r\n      <Divider />\r\n    </>\r\n  )\r\n}\r\n\r\nTicketAddAttachmentFiles.propTypes = {\r\n  files: PropTypes.array,\r\n  handleRemoveFile: PropTypes.func,\r\n  isLoading: PropTypes.any\r\n}\r\n\r\nexport default memo(TicketAddAttachmentFiles)\r\n"],"names":["TicketAttachmentFile","isLoading","file","handleRemoveFile","url","useMemo","getFileURL","Stack","jsx","IconButton","DeleteOutline","Tooltip","name","jsxs","Box","width","height","flexShrink","display","justifyContent","alignItems","Image","URL","createObjectURL","borderRadius","FilePresentRounded","propTypes","PropTypes","shape","any","func","memo","TicketAddAttachmentFiles","files","scrollRef","useRef","filesTotal","length","Fragment","Divider","borderStyle","p","overflowX","scrollBehavior","backgroundColor","theme","palette","grey","backdropFilter","WebkitBackdropFilter","map","index","array"],"mappings":"kMAUA,MAAMA,EAAuBA,CAAC,CAAEC,UAAAA,EAAWC,KAAAA,EAAMC,iBAAAA,CAAiB,IAAM,CAChEC,MAAAA,EAAMC,UAAQ,IAAMC,EAAWJ,EAAM,EAAK,EAAG,CAACA,CAAI,CAAC,EAEzD,cACGK,EAAM,CAAA,UAAU,SAAS,WAAW,SAAS,QAAS,EACpD,SAAA,CAAA,CAACN,GACCO,EAAA,IAAAC,EAAA,CAAW,MAAM,SAAS,MAAM,QAAQ,KAAK,QAAQ,QAAS,IAAMN,EAAiBD,CAAI,EACxF,SAAAM,MAACE,GAAgB,CAAA,EACnB,QAEDC,EAAQ,CAAA,MAAOT,GAAAA,YAAAA,EAAMU,KACpB,SAAAC,EAAA,KAACC,GACC,GAAI,CACFC,MAAO,GACPC,OAAQ,GACRC,WAAY,EACZC,QAAS,OACTC,eAAgB,SAChBC,WAAY,QAGbhB,EAAAA,SAAAA,CAAQA,IAAA,SACNI,EAAAA,IAAAa,EAAA,CACC,IAAKC,IAAIC,gBAAgBrB,CAAI,EAC7B,IAAKA,GAAAA,YAAAA,EAAMU,KACX,GAAI,CAAEG,MAAO,GAAIC,OAAQ,GAAIQ,aAAc,CAAA,EAC3C,MAAM,QAGTpB,GAAOA,IAAQ,SACbI,EAAAA,IAAAa,EAAA,CAAM,IAAKjB,EAAK,IAAKF,EAAKU,KAAM,GAAI,CAAEG,MAAO,GAAIC,OAAQ,GAAIQ,aAAc,CAAA,IAE7E,CAACpB,GAAQI,EAAAA,IAAAiB,EAAA,CAAmB,GAAI,CAAEV,MAAO,GAAIC,OAAQ,EAAA,KACxD,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,EAEAhB,EAAqB0B,UAAY,CAC/BxB,KAAMyB,EAAUC,MAAM,CACpBhB,KAAMe,EAAUE,GAAAA,CACjB,EACD1B,iBAAkBwB,EAAUG,KAC5B7B,UAAW0B,EAAUE,GACvB,EAEA,MAAeE,EAAAA,EAAAA,KAAK/B,CAAoB,ECjDlCgC,EAA2BA,CAAC,CAAEC,MAAAA,EAAOhC,UAAAA,EAAWE,iBAAAA,CAAiB,IAAM,CAC3E,MAAM+B,EAAYC,EAAAA,SAEZC,EAAa/B,EAAAA,QAAQ,IAAM4B,EAAO,CAACA,CAAK,CAAC,EAE3CG,OAAAA,GAAAA,YAAAA,EAAYC,UAAW,EAClB,KAKLxB,EAAA,KAAAyB,WAAA,CAAA,SAAA,CAAC9B,EAAAA,IAAAD,EAAA,CACC,UAAU,MACV,QAASC,EAAAA,IAAC+B,GAAQ,YAAY,WAAW,SAAQ,GAAC,GAAI,CAAEC,YAAa,QAAW,CAAA,CAAA,EAChF,IAAKN,EACL,GAAI,CACFO,EAAG,EACHC,UAAW,SACXC,eAAgB,SAChBC,gBAAiBC,GAASA,EAAMC,QAAQC,KAAK,KAAM,EACnDC,eAAiB,aACjBC,qBAAuB,YAAA,EAEzB,QAAS,EAERb,0BAAYc,IAAI,CAAChD,EAAMiD,IACtB3C,MAACR,EAEC,CAAA,KAAAE,EACA,UAAAD,EACA,iBAAAE,GAHM,GAAED,GAAAA,YAAAA,EAAMU,IAAK,EAGgB,GAGzC,QACC2B,EAAU,EAAA,CACb,CAAA,CAAA,CAEJ,EAEAP,EAAyBN,UAAY,CACnCO,MAAON,EAAUyB,MACjBjD,iBAAkBwB,EAAUG,KAC5B7B,UAAW0B,EAAUE,GACvB,EAEA,MAAeE,EAAAA,EAAAA,KAAKC,CAAwB"}
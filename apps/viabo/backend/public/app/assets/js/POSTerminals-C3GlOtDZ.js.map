{"version":3,"mappings":"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","names":["useTabs","defaultValues","currentTab","setCurrentTab","useState","event","newValue","varSlide","props","distance","durationIn","durationOut","easeIn","easeOut","varTranEnter","varTranExit","TerminalMovementColumns","id","header","terminal","name","columns","accessorKey","enableHiding","size","Cell","cell","column","row","original","rowData","approved","cardLogo","getCardTypeByName","cardType","CardLogoComponent","component","jsxs","Box","display","alignItems","position","jsx","Tooltip","Avatar","width","height","color","bgcolor","AccountBalance","right","bottom","borderRadius","justifyContent","Check","Clear","ml","Typography","textWrap","description","transactionMessage","renderedCellValue","terminalName","Stack","transactionDate","date","time","amountFormat","filterVariant","conciliated","BsPatchCheck","BiBlock","TERMINALS_KEYS","CommerceTerminalsAdapter","terminals","_a","_b","_c","_d","MovementsToConciliateTerminalAdapter","movements","CardMovementsAdapter","TerminalMovementsAdapter","data","movement","amount","format","normalizeDateString","es","fCurrency","balance","filters","_e","_f","getCommerceTerminals","axios","createPaymentLink","paymentLink","generatePaymentByVirtualTerminal","payment","getTerminalMovements","terminalId","initialDate","finalDate","getMovementsToConciliateTerminal","fetchURL","conciliateTerminalMovements","useFindCommerceTerminals","options","customError","setCustomError","useQuery","error","errorMessage","getErrorAPI","initialState","TerminalDetailsStore","set","get","terminalSelected","state","info","open","conciliateInfo","a","b","oldMovement","total","acumulador","useTerminalDetails","createStore","TerminalsStore","collapse","globalBalance","useTerminals","useFindTerminalMovements","resetBalance","resetGlobalBalance","primerDiaMes","startOfMonth","ultimoDiaMes","endOfMonth","key","signal","toast","getNotificationTypeByErrorCode","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","CARD_TYPES","getNameCardsTypes","TerminalFilterCardType","handleChangeCardType","isLoading","FormControl","minWidth","Select","OutlinedInput","selected","length","join","MenuItem","map","option","mx","my","p","typography","textTransform","fontWeight","indexOf","theme","fontWeightRegular","fontWeightMedium","Checkbox","ListItemText","TerminalFilterCardType$1","memo","propTypes","PropTypes","array","func","any","TERMINAL_STATUS","getTerminalStatusByName","find","status","statusName","TerminalFilterStatus","filterStatus","onChangeFilterStatus","STATUS_OPTIONS","useMemo","Tabs","px","tab","number","Tab","Label","TerminalFilterStatus$1","shape","BootstrapInput","styled","InputBase","marginTop","spacing","border","outline","CardFilterMovements","setCurrentMonth","currentMonth","currentYear","Date","getFullYear","isDesktop","useResponsive","yearOptions","Array","from","startYear","_","index","reverse","isFetching","handlePreviousMonth","prevMonth","newMonth","setMonth","getMonth","handleNextMonth","isCurrentMonth","currentDate","isFutureMonth","monthIndex","year","handleMonthChange","target","value","handleYearChange","setFullYear","menuProps","overflowY","py","LoadingButton","KeyboardArrowLeft","IconButton","monthOptions","month","KeyboardArrowRight","TerminalMovements","setConciliateMovements","setOpenConciliate","setBalance","setGlobalBalance","refetch","isError","enabled","onChangeTab","filterCardType","setFilterCardType","rowSelection","setRowSelection","applyFilter","handleChange","split","useEffect","handleExportRows","table","filterData","getSortedRowModel","rows","getValue","c","Card","MaterialDataTable","density","sorting","desc","showAlertBanner","showProgressBars","maxSize","sx","md","lg","xl","handleConciliate","selectedRows","getSelectedRowModel","flatRows","isExternalConciliation","Paper","Divider","borderStyle","Alert","Button","SearchGlobalTextField","SearchAction","getPrePaginationRowModel","FileDownload","FiltersAction","ShowHideColumnsAction","FullScreenAction","disabled","Boolean","stabilizedThis","el","tableData","filter","item","isArray","includes","toUpperCase","reduce","accumulator","transaction","transactionAmount","parseFloat","toFixed","TerminalDetails","pl","xs","sm","overflow","flexDirection","flexGrow","transition","transitions","create","AnimatePresence","motion","opacity","duration","PaymentLinkModal","lazy","__vitePreload","VirtualTerminalModal","TerminalActions","openPaymentLink","setOpenPaymentLink","openVirtualTerminal","setOpenVirtualTerminal","Fragment","Link","Apps","Suspense","TerminalBalance","inLeft","boxShadow","alpha","palette","primary","main","CardHeader","isVirtual","TerminalGlobalBalance","resetTerminal","handleClose","scale","cursor","backgroundColor","RootStyle","ListItemButton","mb","TerminalItem","isOpenSidebar","isOpenList","setOpenList","setCommerceTerminal","setTerminal","commerceTerminal","cardON","isSelected","handleSelectedRow","e","type","ListItem","padding","gap","ListItemAvatar","m","contrastText","ContactlessSharp","PointOfSale","alias","TerminalsList","terminalsQuery","other","ErrorRequestPage","EmptyList","List","SkeletonCardItem","TerminalsSearch","commerceTerminals","setOpenSidebar","setCollapse","setTerminals","openSidebar","isCollapse","searchQuery","setSearchQuery","isSearchFocused","setSearchFocused","handleChangeSearch","results","toLowerCase","console","handleToggleSidebar","handleSearchFocus","handleClickAwaySearch","ClickAwayListener","InputStyle","startAdornment","InputAdornment","Search","SidebarButtonStyle","transform","arrowIcon","SearchNotFound","TerminalsDrawer","useTheme","handleCloseSidebar","renderContent","Scrollbar","SidebarButtonMobileStyle","Drawer","borderRightStyle","SIDEBAR_WIDTH","SIDEBAR_COLLAPSE_WIDTH","visibility","keepMounted","ConciliateTerminalsMovements","Lodable","POSTerminals","openConciliate","Page","ContainerPage","HeaderPage","href","PATH_DASHBOARD","root","VIABO_PAY_PATHS","VIABO_PAY_ROUTES_NAMES"],"sources":["../../../../../frontend/src/shared/hooks/useTabs.js","../../../../../frontend/src/shared/components/animate/variants/slide.js","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminal/movements/TerminalMovementColumns.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/TerminalsKeys.js","../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/commerceTerminalsAdapter.js","../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/movements-to-conciliate-terminal-adapter.js","../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/terminalMovementsAdapter.js","../../../../../frontend/src/app/business/viabo-pay/terminals/services/TerminalsRepository.js","../../../../../frontend/src/app/business/viabo-pay/terminals/hooks/useFindCommerceTerminals.js","../../../../../frontend/src/app/business/viabo-pay/terminals/store/TerminalDetailsStore.js","../../../../../frontend/src/app/business/viabo-pay/terminals/store/TerminalsStore.js","../../../../../frontend/src/app/business/viabo-pay/terminals/hooks/useFindTerminalMovements.js","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminal/TerminalFilterCardType.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminal/TerminalFilterStatus.jsx","../../../../../frontend/src/app/business/viabo-card/cards/components/details/movements/CardFilterMovements.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminal/movements/TerminalMovements.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/TerminalDetails.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminal/TerminalActions.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminal-balance/TerminalBalance.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminal-balance/TerminalGlobalBalance.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminals/TerminalItem.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminals/TerminalsList.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/terminals/TerminalsSearch.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/components/TerminalsDrawer.jsx","../../../../../frontend/src/app/business/viabo-pay/terminals/pages/POSTerminals.jsx"],"sourcesContent":["import { useState } from 'react'\r\n\r\nexport function useTabs(defaultValues) {\r\n  const [currentTab, setCurrentTab] = useState(defaultValues || '')\r\n\r\n  return {\r\n    currentTab,\r\n    onChangeTab: (event, newValue) => {\r\n      setCurrentTab(newValue)\r\n    },\r\n    setCurrentTab\r\n  }\r\n}\r\n","//\r\nimport { varTranEnter, varTranExit } from './transition'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const varSlide = props => {\r\n  const distance = props?.distance || 160\r\n  const durationIn = props?.durationIn\r\n  const durationOut = props?.durationOut\r\n  const easeIn = props?.easeIn\r\n  const easeOut = props?.easeOut\r\n\r\n  return {\r\n    // IN\r\n    inUp: {\r\n      initial: { y: distance },\r\n      animate: { y: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: distance, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    inDown: {\r\n      initial: { y: -distance },\r\n      animate: { y: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: -distance, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    inLeft: {\r\n      initial: { x: -distance },\r\n      animate: { x: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: -distance, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    inRight: {\r\n      initial: { x: distance },\r\n      animate: { x: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: distance, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n\r\n    // OUT\r\n    outUp: {\r\n      initial: { y: 0 },\r\n      animate: { y: -distance, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: 0, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    outDown: {\r\n      initial: { y: 0 },\r\n      animate: { y: distance, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: 0, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    outLeft: {\r\n      initial: { x: 0 },\r\n      animate: { x: -distance, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: 0, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    outRight: {\r\n      initial: { x: 0 },\r\n      animate: { x: distance, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: 0, transition: varTranExit({ durationOut, easeOut }) }\r\n    }\r\n  }\r\n}\r\n","import { AccountBalance, Check, Clear } from '@mui/icons-material'\r\nimport { Avatar, Box, Stack, Tooltip, Typography } from '@mui/material'\r\nimport { BiBlock } from 'react-icons/bi'\r\nimport { BsPatchCheck } from 'react-icons/bs'\r\n\r\nimport { getCardTypeByName } from '@/app/shared/services'\r\n\r\nexport const TerminalMovementColumns = terminal => [\r\n  {\r\n    id: 'terminal',\r\n    header: `${terminal ? terminal?.name : 'Global'}`,\r\n    columns: [\r\n      {\r\n        accessorKey: 'description', // access nested data with dot notation\r\n        header: 'Movimiento',\r\n        enableHiding: false,\r\n        size: 200,\r\n        Cell: ({ cell, column, row }) => {\r\n          const { original: rowData } = row\r\n\r\n          const approved = rowData?.approved\r\n          const cardLogo = getCardTypeByName(rowData?.cardType)\r\n          const CardLogoComponent = cardLogo?.component\r\n          return (\r\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n              <Box sx={{ position: 'relative' }}>\r\n                <Tooltip title={rowData?.cardType}>\r\n                  <Avatar\r\n                    sx={{\r\n                      width: 40,\r\n                      height: 40,\r\n                      color: 'text.secondary',\r\n                      bgcolor: 'background.neutral'\r\n                    }}\r\n                  >\r\n                    {cardLogo ? (\r\n                      <CardLogoComponent sx={{ width: 25, height: 25 }} />\r\n                    ) : (\r\n                      <AccountBalance width={25} height={25} />\r\n                    )}\r\n                  </Avatar>\r\n                </Tooltip>\r\n                <Box\r\n                  sx={{\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    width: 15,\r\n                    height: 15,\r\n                    display: 'flex',\r\n                    borderRadius: '50%',\r\n                    position: 'absolute',\r\n                    alignItems: 'center',\r\n                    color: 'common.white',\r\n                    bgcolor: 'error.main',\r\n                    justifyContent: 'center',\r\n                    ...(approved && {\r\n                      bgcolor: 'success.main'\r\n                    })\r\n                  }}\r\n                >\r\n                  {approved ? <Check sx={{ width: 12, height: 12 }} /> : <Clear sx={{ width: 12, height: 12 }} />}\r\n                </Box>\r\n              </Box>\r\n              <Box sx={{ ml: 2 }}>\r\n                <Typography variant=\"subtitle2\" sx={{ textWrap: 'wrap' }}>\r\n                  {rowData?.description}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  textTransform={'capitalize'}\r\n                  sx={{ color: approved ? 'success.main' : 'error.main', textWrap: 'wrap' }}\r\n                >\r\n                  {rowData?.transactionMessage}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )\r\n        }\r\n      },\r\n      ...(terminal\r\n        ? []\r\n        : [\r\n            {\r\n              accessorKey: 'terminalName', // access nested data with dot notation\r\n              header: 'Terminal',\r\n              size: 100,\r\n\r\n              Cell: ({ cell, column, row, renderedCellValue }) => {\r\n                const { original: rowData } = row\r\n                return (\r\n                  <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                    {rowData?.terminalName}\r\n                  </Typography>\r\n                )\r\n              }\r\n            }\r\n          ]),\r\n      {\r\n        accessorKey: 'date', // access nested data with dot notation\r\n        header: 'Fecha',\r\n        size: 100,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return (\r\n            <Stack>\r\n              <Typography variant=\"subtitle2\">{rowData?.transactionDate?.date}</Typography>\r\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                {rowData?.transactionDate?.time}\r\n              </Typography>\r\n            </Stack>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        accessorKey: 'amountFormat', // access nested data with dot notation\r\n        header: 'Monto',\r\n        size: 100,\r\n        Cell: ({ cell, column, row }) => {\r\n          const { original: rowData } = row\r\n          return (\r\n            <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n              {rowData?.amountFormat}\r\n            </Typography>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        accessorKey: 'conciliatedName', // access nested data with dot notation\r\n        header: '¿Conciliada?',\r\n        filterVariant: 'multi-select',\r\n        size: 110,\r\n        Cell: ({ cell, column, row }) => {\r\n          const { original: rowData } = row\r\n\r\n          return (\r\n            <Stack flexDirection={'row'} gap={1} color={'primary'}>\r\n              {rowData?.conciliated ? (\r\n                <BsPatchCheck color=\"green\" fontWeight={'bold'} fontSize={'20px'} />\r\n              ) : (\r\n                <BiBlock fontSize={'20px'} color=\"red\" />\r\n              )}\r\n            </Stack>\r\n          )\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]\r\n","export const TERMINALS_KEYS = {\r\n  LIST: 'commerce-terminals',\r\n  MOVEMENTS: 'terminal-movements',\r\n  CONCILIATE_MOVEMENTS: 'conciliate-movements'\r\n}\r\n","export const CommerceTerminalsAdapter = terminals =>\r\n  terminals?.map(terminal => ({\r\n    id: terminal?.id,\r\n    commerceId: terminal?.commerceId,\r\n    terminalId: terminal?.terminalId,\r\n    terminalON: terminal?.apiData?.status === 1,\r\n    country: terminal?.apiData?.country,\r\n    date: {\r\n      created: terminal?.apiData?.created_at,\r\n      updated: terminal?.apiData?.updated_at,\r\n      register: terminal?.registerDate\r\n    },\r\n    isVirtual: terminal?.typeId === '1',\r\n    name: terminal?.name !== '' ? terminal?.name.toString().toUpperCase() : `TERMINAL-${terminal?.terminalId}`,\r\n    active: terminal?.active === '1',\r\n    isExternalConciliation: !!terminal?.isConciliationExternal\r\n  })) || []\r\n","import { CardMovementsAdapter } from '@/app/shared/adapters'\r\n\r\nexport const MovementsToConciliateTerminalAdapter = movements => CardMovementsAdapter(movements)\r\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\n\r\nimport { fCurrency, normalizeDateString } from '@/shared/utils'\r\n\r\nexport const TerminalMovementsAdapter = data => {\r\n  const movements =\r\n    data?.movements?.map(movement => {\r\n      const amount = parseFloat(movement?.amount || '0')\r\n      const date = movement?.transaction_date\r\n        ? format(normalizeDateString(movement?.transaction_date), 'dd MMM yyyy', { locale: es })\r\n        : ''\r\n      const time = movement?.transaction_date ? format(normalizeDateString(movement?.transaction_date), 'p') : ''\r\n\r\n      return {\r\n        id: movement?.id,\r\n        terminalName: movement?.terminal_name,\r\n        amount,\r\n        amountFormat: fCurrency(amount),\r\n        approved: movement?.approved,\r\n        cardType: movement?.card_brand,\r\n        cardNumber: movement?.card_number,\r\n        cardBank: movement?.issuer,\r\n        transactionDate: {\r\n          fullDate: format(normalizeDateString(movement?.transaction_date), 'dd MMM yyyy HH:mm', { locale: es }),\r\n          date,\r\n          time\r\n        },\r\n        date: normalizeDateString(movement?.transaction_date),\r\n        description: `${movement?.issuer === '' ? movement?.card_brand : movement?.issuer}-${\r\n          movement?.card_number\r\n        }`.toUpperCase(),\r\n        transactionMessage: movement?.result_message,\r\n        conciliated: !!movement?.conciliated,\r\n        conciliatedName: movement?.conciliated ? 'Conciliada' : 'Sin Conciliar'\r\n      }\r\n    }) ?? []\r\n\r\n  const balance = {\r\n    amount: fCurrency(data?.balance?.amount),\r\n    month: data?.balance?.month?.toLowerCase()\r\n  }\r\n  const filters = {\r\n    status: {\r\n      all: movements?.length || 0,\r\n      approved: movements?.filter(movement => movement?.approved)?.length || 0,\r\n      rejected: movements?.filter(movement => !movement?.approved)?.length || 0\r\n    }\r\n  }\r\n\r\n  return {\r\n    movements,\r\n    balance,\r\n    filters\r\n  }\r\n}\r\n","import { CommerceTerminalsAdapter, MovementsToConciliateTerminalAdapter, TerminalMovementsAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getCommerceTerminals = async () => {\r\n  const { data } = await axios.get('/api/commerces/terminals')\r\n  return CommerceTerminalsAdapter(data)\r\n}\r\n\r\nexport const createPaymentLink = async paymentLink => {\r\n  const { data } = await axios.post(`/api/commerce/pay/new`, paymentLink)\r\n  return data\r\n}\r\n\r\nexport const generatePaymentByVirtualTerminal = async payment => {\r\n  const { data } = await axios.post(`/api/commerce/virtual/pay`, payment)\r\n  return data\r\n}\r\n\r\nexport const getTerminalMovements = async (terminalId, initialDate, finalDate) => {\r\n  const terminal = terminalId\r\n    ? `?fromDate=${initialDate}&toDate=${finalDate}&terminalId=${terminalId}`\r\n    : `?fromDate=${initialDate}&toDate=${finalDate}`\r\n  const { data } = await axios.get(`/api/commerces-pay/transactions/all${terminal}`)\r\n  return TerminalMovementsAdapter(data)\r\n}\r\n\r\nexport const getMovementsToConciliateTerminal = async (terminalId, date) => {\r\n  const fetchURL = new URL('/api/card/movements/terminal/conciliated', window.location.origin)\r\n  fetchURL.searchParams.set('startDate', date)\r\n  fetchURL.searchParams.set('terminalId', terminalId)\r\n  const { data } = await axios.get(fetchURL.href)\r\n  return MovementsToConciliateTerminalAdapter(data)\r\n}\r\n\r\nexport const conciliateTerminalMovements = async movements => {\r\n  const { data } = await axios.post(`/api/commerce/terminal/consolidation/create`, movements)\r\n  return data\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\n\r\nimport { TERMINALS_KEYS } from '../adapters'\r\nimport { getCommerceTerminals } from '../services'\r\n\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindCommerceTerminals = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n  const commerces = useQuery([TERMINALS_KEYS.LIST], getCommerceTerminals, {\r\n    staleTime: 60000,\r\n    refetchOnMount: 'always',\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(\r\n        error,\r\n        'No se puede obtener la lista de terminales del comercio. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...commerces,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  terminal: null,\r\n  conciliateInfo: { movements: null, total: 0, date: null },\r\n  openConciliate: false\r\n}\r\n\r\nconst TerminalDetailsStore = (set, get) => ({\r\n  ...initialState,\r\n  setTerminal: terminalSelected => {\r\n    const { terminal } = get()\r\n\r\n    set(\r\n      state => ({\r\n        terminal: { ...terminal, ...terminalSelected }\r\n      }),\r\n      false,\r\n      'SET_TERMINAL_SELECTED'\r\n    )\r\n  },\r\n  resetTerminal: () => {\r\n    set(\r\n      state => ({\r\n        terminal: null\r\n      }),\r\n      false,\r\n      'RESET_TERMINAL_SELECTED'\r\n    )\r\n  },\r\n\r\n  addTerminalInfo: info => {\r\n    const { terminal } = get()\r\n    set(\r\n      state => ({\r\n        terminal: { ...terminal, ...info }\r\n      }),\r\n      false,\r\n      'SET_TERMINAL_INFO'\r\n    )\r\n  },\r\n  setOpenConciliate: open => {\r\n    set(\r\n      state => ({\r\n        openConciliate: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_CONCILIATE'\r\n    )\r\n  },\r\n  setConciliateMovements: movements => {\r\n    let conciliateInfo = initialState?.conciliateInfo\r\n    if (movements) {\r\n      movements?.sort((a, b) => a.date - b.date)\r\n      const oldMovement = movements?.length > 0 && movements[0]\r\n      const total = movements.reduce((acumulador, movement) => acumulador + movement?.amount, 0)\r\n      conciliateInfo = {\r\n        movements,\r\n        total,\r\n        date: oldMovement?.date\r\n      }\r\n    }\r\n\r\n    set(\r\n      state => ({\r\n        conciliateInfo\r\n      }),\r\n      false,\r\n      'SET_CONCILIATE_MOVEMENTS'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useTerminalDetails = createStore(TerminalDetailsStore)\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  terminals: [],\r\n  isOpenList: true,\r\n  isCollapse: false,\r\n  balance: { amount: '$0.00', month: null },\r\n  globalBalance: { amount: '$0.00', month: null }\r\n}\r\n\r\nconst TerminalsStore = (set, get) => ({\r\n  ...initialState,\r\n  setTerminals: terminals => {\r\n    set(\r\n      state => ({\r\n        terminals\r\n      }),\r\n      false,\r\n      'SET_TERMINALS'\r\n    )\r\n  },\r\n  setOpenList: open => {\r\n    set(\r\n      state => ({\r\n        isOpenList: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_LIST'\r\n    )\r\n  },\r\n  setCollapse: collapse => {\r\n    set(\r\n      state => ({\r\n        isCollapse: collapse\r\n      }),\r\n      false,\r\n      'SET_COLLAPSE'\r\n    )\r\n  },\r\n  setBalance: balance => {\r\n    set(\r\n      state => ({\r\n        balance\r\n      }),\r\n      false,\r\n      'SET_BALANCE'\r\n    )\r\n  },\r\n  setGlobalBalance: globalBalance => {\r\n    set(\r\n      state => ({\r\n        globalBalance\r\n      }),\r\n      false,\r\n      'SET_GLOBAL_BALANCE'\r\n    )\r\n  },\r\n\r\n  resetBalance: () => {\r\n    set(\r\n      state => ({\r\n        balance: initialState.balance\r\n      }),\r\n      false,\r\n      'RESET_BALANCE'\r\n    )\r\n  },\r\n  resetGlobalBalance: () => {\r\n    set(\r\n      state => ({\r\n        globalBalance: initialState.globalBalance\r\n      }),\r\n      false,\r\n      'RESET_BALANCE'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useTerminals = createStore(TerminalsStore)\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { endOfMonth, format, startOfMonth } from 'date-fns'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { TERMINALS_KEYS } from '../adapters'\r\nimport { getTerminalMovements } from '../services'\r\nimport { useTerminals } from '../store'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindTerminalMovements = (terminalId, date, options = {}) => {\r\n  const resetBalance = useTerminals(state => state.resetBalance)\r\n  const resetGlobalBalance = useTerminals(state => state.resetGlobalBalance)\r\n  const primerDiaMes = startOfMonth(date)\r\n  const ultimoDiaMes = endOfMonth(date)\r\n  const initialDate = format(primerDiaMes, 'yyyy-MM-dd')\r\n  const finalDate = format(ultimoDiaMes, 'yyyy-MM-dd')\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const key = terminalId ? [TERMINALS_KEYS.MOVEMENTS, terminalId] : [TERMINALS_KEYS.MOVEMENTS, 'global']\r\n  const commerces = useQuery(key, ({ signal }) => getTerminalMovements(terminalId, initialDate, finalDate, signal), {\r\n    staleTime: 60000,\r\n    retry: false,\r\n    refetchOnWindowFocus: false,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(\r\n        error,\r\n        'No se puede obtener la lista de movimientos de la terminal. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n      terminalId ? resetBalance() : resetGlobalBalance()\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...commerces,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { memo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Checkbox, FormControl, ListItemText, MenuItem, OutlinedInput, Select } from '@mui/material'\r\n\r\nimport { getNameCardsTypes } from '@/app/shared/services'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n}\r\n\r\nconst CARD_TYPES = getNameCardsTypes()\r\n\r\nconst TerminalFilterCardType = ({ cardType, handleChangeCardType, isLoading }) => (\r\n  <FormControl sx={{ minWidth: 240 }} disabled={!!isLoading}>\r\n    <Select\r\n      fullWidth\r\n      multiple\r\n      displayEmpty\r\n      disabled={!!isLoading}\r\n      size=\"small\"\r\n      value={cardType}\r\n      onChange={handleChangeCardType}\r\n      input={<OutlinedInput />}\r\n      renderValue={selected => {\r\n        if (selected.length === 0) {\r\n          return <>Tarjeta</>\r\n        }\r\n\r\n        return selected.join(', ')\r\n      }}\r\n      MenuProps={MenuProps}\r\n      inputProps={{ 'aria-label': 'Without label' }}\r\n    >\r\n      <MenuItem disabled value=\"\">\r\n        <em> Seleccionar Tarjeta</em>\r\n      </MenuItem>\r\n      {CARD_TYPES.map(option => (\r\n        <MenuItem\r\n          key={option}\r\n          value={option}\r\n          sx={{\r\n            mx: 1,\r\n            my: 0.5,\r\n            p: 0,\r\n            borderRadius: 0.75,\r\n            typography: 'body2',\r\n            textTransform: 'capitalize',\r\n            fontWeight: theme =>\r\n              cardType.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\r\n          }}\r\n        >\r\n          <Checkbox checked={cardType.indexOf(option) > -1} />\r\n          <ListItemText primary={option} />\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  </FormControl>\r\n)\r\n\r\nexport default memo(TerminalFilterCardType)\r\n\r\nTerminalFilterCardType.propTypes = {\r\n  cardType: PropTypes.array,\r\n  handleChangeCardType: PropTypes.func,\r\n  isLoading: PropTypes.any\r\n}\r\n","import { memo, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Tab, Tabs } from '@mui/material'\r\n\r\nimport { Label } from '@/shared/components/form'\r\n\r\nconst TERMINAL_STATUS = [\r\n  {\r\n    name: 'Todos',\r\n    id: 'all',\r\n    color: 'primary'\r\n  },\r\n  {\r\n    name: 'Aprobado',\r\n    id: 'approved',\r\n    color: 'success'\r\n  },\r\n  {\r\n    name: 'Rechazado',\r\n    id: 'rejected',\r\n    color: 'error'\r\n  }\r\n]\r\n\r\nconst getTerminalStatusByName = statusName => TERMINAL_STATUS?.find(status => status.name === statusName)\r\n\r\nconst TerminalFilterStatus = ({ filterStatus, onChangeFilterStatus, filters }) => {\r\n  const STATUS_OPTIONS = useMemo(() => TERMINAL_STATUS?.map(status => status.name), [])\r\n\r\n  return (\r\n    <Tabs\r\n      allowScrollButtonsMobile\r\n      variant=\"scrollable\"\r\n      scrollButtons=\"auto\"\r\n      value={filterStatus}\r\n      onChange={onChangeFilterStatus}\r\n      sx={{ px: 2 }}\r\n    >\r\n      {STATUS_OPTIONS.map(tab => {\r\n        const status = getTerminalStatusByName(tab)\r\n        const number = status ? filters?.status[status?.id] || 0 : 0\r\n\r\n        return (\r\n          <Tab\r\n            icon={<Label color={status?.color}>{number}</Label>}\r\n            iconPosition=\"end\"\r\n            disableRipple\r\n            key={tab}\r\n            label={tab}\r\n            value={tab}\r\n          />\r\n        )\r\n      })}\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nexport default memo(TerminalFilterStatus)\r\n\r\nTerminalFilterStatus.propTypes = {\r\n  filterStatus: PropTypes.any,\r\n  filters: PropTypes.shape({\r\n    status: PropTypes.any\r\n  }),\r\n  onChangeFilterStatus: PropTypes.func\r\n}\r\n","import { KeyboardArrowLeft, KeyboardArrowRight } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Box, IconButton, InputBase, MenuItem, Select, Stack } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\n\r\nimport { monthOptions } from '@/shared/utils'\r\nimport { useResponsive } from '@/theme/hooks'\r\n\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n  'label + &': {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  '& .MuiInputBase-input': {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    border: 'none',\r\n    outline: 'none'\r\n    // Use the system font instead of the default Roboto font.\r\n  }\r\n}))\r\n\r\nexport function CardFilterMovements({ setCurrentMonth, currentMonth, isLoading }) {\r\n  const startYear = 2020\r\n  const currentYear = new Date().getFullYear()\r\n  const isDesktop = useResponsive('up', 'lg')\r\n\r\n  const yearOptions = Array.from({ length: currentYear - startYear + 1 }, (_, index) => startYear + index).reverse()\r\n\r\n  const isFetching = isLoading\r\n\r\n  const handlePreviousMonth = () => {\r\n    setCurrentMonth(prevMonth => {\r\n      const newMonth = new Date(prevMonth)\r\n      newMonth.setMonth(newMonth.getMonth() - 1)\r\n      return newMonth\r\n    })\r\n  }\r\n\r\n  const handleNextMonth = () => {\r\n    setCurrentMonth(prevMonth => {\r\n      const newMonth = new Date(prevMonth)\r\n      newMonth.setMonth(newMonth.getMonth() + 1)\r\n      return newMonth\r\n    })\r\n  }\r\n\r\n  const isCurrentMonth = () => {\r\n    const currentDate = new Date()\r\n    return (\r\n      currentMonth.getMonth() === currentDate.getMonth() && currentMonth.getFullYear() === currentDate.getFullYear()\r\n    )\r\n  }\r\n\r\n  const isFutureMonth = (monthIndex, year) => {\r\n    const currentDate = new Date()\r\n    const currentYear = currentDate.getFullYear()\r\n    const currentMonth = currentDate.getMonth()\r\n\r\n    return year > currentYear || (year === currentYear && monthIndex > currentMonth)\r\n  }\r\n\r\n  const handleMonthChange = event => {\r\n    const newMonth = new Date(currentMonth)\r\n    newMonth.setMonth(event.target.value)\r\n    setCurrentMonth(newMonth)\r\n  }\r\n\r\n  const handleYearChange = event => {\r\n    const newMonth = new Date(currentMonth)\r\n    newMonth.setFullYear(event.target.value)\r\n    setCurrentMonth(newMonth)\r\n  }\r\n\r\n  const menuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: 200,\r\n        overflowY: 'auto'\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Stack spacing={2} direction={'row'} justifyContent=\"space-between\" sx={{ py: 2.5, px: 3 }}>\r\n      {isDesktop ? (\r\n        <LoadingButton\r\n          loading={isFetching}\r\n          variant=\"outlined\"\r\n          startIcon={<KeyboardArrowLeft />}\r\n          onClick={handlePreviousMonth}\r\n        >\r\n          anterior\r\n        </LoadingButton>\r\n      ) : (\r\n        <IconButton disabled={isFetching} variant=\"outlined\" onClick={handlePreviousMonth}>\r\n          <KeyboardArrowLeft />\r\n        </IconButton>\r\n      )}\r\n\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent={'center'} spacing={1} gap={1}>\r\n        <Select\r\n          size={'small'}\r\n          value={currentMonth.getMonth()}\r\n          onChange={handleMonthChange}\r\n          disabled={isFetching}\r\n          input={<BootstrapInput />}\r\n        >\r\n          {monthOptions.map((month, index) => {\r\n            const year = currentMonth.getFullYear()\r\n            if (!isFutureMonth(index, year)) {\r\n              return (\r\n                <MenuItem key={index} value={index} disabled={isFutureMonth(index, year)}>\r\n                  {month}\r\n                </MenuItem>\r\n              )\r\n            }\r\n            return null\r\n          })}\r\n        </Select>\r\n        <Select\r\n          size={'small'}\r\n          value={currentMonth.getFullYear()}\r\n          onChange={handleYearChange}\r\n          input={<BootstrapInput />}\r\n          MenuProps={menuProps}\r\n          disabled={isFetching}\r\n        >\r\n          {yearOptions.map(year => (\r\n            <MenuItem key={year} value={year}>\r\n              {year}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Box>\r\n\r\n      {isDesktop ? (\r\n        <LoadingButton\r\n          loading={isFetching}\r\n          variant=\"outlined\"\r\n          endIcon={<KeyboardArrowRight />}\r\n          disabled={isCurrentMonth()}\r\n          onClick={handleNextMonth}\r\n        >\r\n          siguiente\r\n        </LoadingButton>\r\n      ) : (\r\n        <IconButton disabled={isFetching} variant=\"outlined\" onClick={handleNextMonth}>\r\n          <KeyboardArrowRight />\r\n        </IconButton>\r\n      )}\r\n    </Stack>\r\n  )\r\n}\r\n","import { useEffect, useMemo, useState } from 'react'\r\n\r\nimport { FileDownload } from '@mui/icons-material'\r\nimport { Alert, Box, Button, Card, Divider, IconButton, Paper, Stack, Tooltip } from '@mui/material'\r\nimport { isArray } from 'lodash'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { TerminalMovementColumns } from './TerminalMovementColumns'\r\n\r\nimport { useFindTerminalMovements } from '../../../hooks'\r\nimport { useTerminalDetails, useTerminals } from '../../../store'\r\nimport TerminalFilterCardType from '../TerminalFilterCardType'\r\nimport TerminalFilterStatus from '../TerminalFilterStatus'\r\n\r\nimport { CardFilterMovements } from '@/app/business/viabo-card/cards/components/details/movements/CardFilterMovements'\r\nimport {\r\n  FiltersAction,\r\n  FullScreenAction,\r\n  MaterialDataTable,\r\n  SearchAction,\r\n  SearchGlobalTextField,\r\n  ShowHideColumnsAction\r\n} from '@/shared/components/dataTables'\r\nimport { useTabs } from '@/shared/hooks'\r\nimport { fCurrency, generateCSVFile, monthOptions } from '@/shared/utils'\r\n\r\nexport const TerminalMovements = () => {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date())\r\n\r\n  const terminal = useTerminalDetails(state => state.terminal)\r\n  const setConciliateMovements = useTerminalDetails(state => state.setConciliateMovements)\r\n  const setOpenConciliate = useTerminalDetails(state => state.setOpenConciliate)\r\n\r\n  const setBalance = useTerminals(state => state.setBalance)\r\n  const setGlobalBalance = useTerminals(state => state.setGlobalBalance)\r\n\r\n  const { data, isFetching, refetch, isError, error, isLoading } = useFindTerminalMovements(\r\n    terminal?.terminalId,\r\n    currentMonth,\r\n    { enabled: !!(terminal?.terminalId && currentMonth) }\r\n  )\r\n\r\n  const { currentTab: filterStatus, onChangeTab: onChangeFilterStatus } = useTabs('Todos')\r\n\r\n  const [filterCardType, setFilterCardType] = useState([])\r\n\r\n  const [rowSelection, setRowSelection] = useState({})\r\n\r\n  const { movements, amount } = useMemo(\r\n    () =>\r\n      applyFilter({\r\n        movements: data?.movements || [],\r\n        filterCardType,\r\n        filterStatus\r\n      }),\r\n    [data?.movements, filterCardType, filterStatus]\r\n  )\r\n\r\n  const columns = useMemo(() => TerminalMovementColumns(terminal), [terminal])\r\n\r\n  const handleChange = event => {\r\n    const {\r\n      target: { value }\r\n    } = event\r\n    setFilterCardType(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n    setRowSelection({})\r\n  }, [currentMonth])\r\n\r\n  useEffect(() => {\r\n    setCurrentMonth(new Date())\r\n  }, [terminal])\r\n\r\n  useEffect(() => {\r\n    if (amount && terminal && currentMonth) {\r\n      setBalance({ month: monthOptions[currentMonth.getMonth()], amount })\r\n    }\r\n    if (amount && !terminal && currentMonth) {\r\n      setGlobalBalance({ month: monthOptions[currentMonth.getMonth()], amount })\r\n    }\r\n  }, [amount, terminal, currentMonth])\r\n\r\n  const handleExportRows = table => {\r\n    try {\r\n      const filterData =\r\n        table.getSortedRowModel().rows.map(row => columns?.map(c => row.getValue(c.accessorKey)) || []) ?? []\r\n      generateCSVFile(columns?.map(c => c.header) || [], filterData, 'Movimientos Terminales')\r\n    } catch {}\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <MaterialDataTable\r\n        enableColumnPinning\r\n        enableColumnFilterModes\r\n        enableStickyHeader\r\n        enableRowVirtualization\r\n        enableFacetedValues\r\n        enableRowSelection={row => {\r\n          const { conciliated, approved } = row.original\r\n\r\n          return !(Boolean(!approved && terminal) || Boolean(conciliated && terminal))\r\n        }}\r\n        enableDensityToggle={false}\r\n        columns={columns}\r\n        data={movements || []}\r\n        isError={isError}\r\n        textError={error}\r\n        selectAllMode={'all'}\r\n        onRowSelectionChange={setRowSelection}\r\n        initialState={{\r\n          density: 'compact',\r\n          sorting: [\r\n            {\r\n              id: 'date',\r\n              desc: true\r\n            }\r\n          ]\r\n        }}\r\n        state={{\r\n          isLoading,\r\n          showAlertBanner: isError,\r\n          showProgressBars: isFetching,\r\n          rowSelection: rowSelection ?? {}\r\n        }}\r\n        displayColumnDefOptions={{\r\n          'mrt-row-select': {\r\n            maxSize: 10\r\n          }\r\n        }}\r\n        muiTableContainerProps={{ sx: { maxHeight: { md: '350px', lg: '450px', xl: '700px' } } }}\r\n        renderTopToolbar={({ table }) => {\r\n          const handleConciliate = () => {\r\n            const selectedRows = table.getSelectedRowModel().flatRows?.map(selected => selected?.original)\r\n            if (!terminal?.isExternalConciliation) {\r\n              setConciliateMovements(selectedRows)\r\n              setOpenConciliate(true)\r\n            } else {\r\n              toast.info('Conciliación Externa: En etapa de desarrollo 🧑🏻‍💻🚀!!')\r\n            }\r\n          }\r\n          return (\r\n            <Stack component={Paper}>\r\n              <TerminalFilterStatus\r\n                filterStatus={filterStatus}\r\n                onChangeFilterStatus={onChangeFilterStatus}\r\n                filters={data?.filters}\r\n              />\r\n              <Divider sx={{ borderStyle: 'dashed' }} />\r\n              {isError && !isFetching && (\r\n                <Alert\r\n                  severity={'error'}\r\n                  sx={{ width: 1, borderRadius: 0 }}\r\n                  action={\r\n                    <Button color=\"inherit\" size=\"small\" onClick={refetch}>\r\n                      {'Recargar'}\r\n                    </Button>\r\n                  }\r\n                >\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              <Stack\r\n                direction={'row'}\r\n                alignItems={'center'}\r\n                flexWrap={'wrap'}\r\n                justifyContent={'center'}\r\n                flex={1}\r\n                spacing={2}\r\n                px={2}\r\n                py={1}\r\n              >\r\n                <TerminalFilterCardType\r\n                  cardType={filterCardType}\r\n                  handleChangeCardType={handleChange}\r\n                  isLoading={isFetching}\r\n                />\r\n\r\n                <Stack flexGrow={1}>\r\n                  <CardFilterMovements\r\n                    currentMonth={currentMonth}\r\n                    setCurrentMonth={setCurrentMonth}\r\n                    isLoading={isFetching}\r\n                  />\r\n                </Stack>\r\n              </Stack>\r\n              <Divider sx={{ borderStyle: 'dashed' }} />\r\n              <Stack px={2} py={1} direction={'row'} justifyContent={'space-between'} alignItems={'center'}>\r\n                {terminal ? (\r\n                  <Stack>\r\n                    <Button\r\n                      color=\"info\"\r\n                      onClick={handleConciliate}\r\n                      disabled={table.getSelectedRowModel().flatRows?.length === 0}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Conciliar\r\n                    </Button>\r\n                  </Stack>\r\n                ) : (\r\n                  <Box display={'flex'}></Box>\r\n                )}\r\n                <SearchGlobalTextField table={table} />\r\n\r\n                <Box>\r\n                  <SearchAction table={table} />\r\n                  <Tooltip title=\"Descargar\">\r\n                    <IconButton\r\n                      disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                      onClick={() => handleExportRows(table)}\r\n                    >\r\n                      <FileDownload />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <FiltersAction table={table} />\r\n                  <ShowHideColumnsAction table={table} />\r\n                  <FullScreenAction table={table} />\r\n                </Box>\r\n              </Stack>\r\n            </Stack>\r\n          )\r\n        }}\r\n        muiSelectCheckboxProps={({ row }) => {\r\n          const { approved, conciliated } = row.original\r\n          return {\r\n            sx: {\r\n              disabled: Boolean(!approved && terminal) || (conciliated && terminal),\r\n              display: (!approved && terminal) || (conciliated && terminal) ? 'none' : 'flex'\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nfunction applyFilter({ movements, filterCardType, filterStatus }) {\r\n  const stabilizedThis = movements?.map((el, index) => [el, index]) || []\r\n  let amount = 0\r\n\r\n  let tableData = stabilizedThis.map(el => el[0])\r\n\r\n  if (filterStatus !== 'Todos') {\r\n    tableData = tableData.filter(item => item.approved === (filterStatus === 'Aprobado'))\r\n  }\r\n\r\n  if (isArray(filterCardType) && filterCardType?.length > 0) {\r\n    tableData = tableData.filter(item => filterCardType.includes(item?.cardType?.toUpperCase()))\r\n  }\r\n\r\n  amount = tableData.reduce((accumulator, transaction) => {\r\n    if (transaction.approved) {\r\n      const transactionAmount = parseFloat(transaction.amount)\r\n      return accumulator + transactionAmount\r\n    }\r\n    return accumulator\r\n  }, 0)\r\n\r\n  return {\r\n    movements: tableData ?? [],\r\n    amount: fCurrency(amount.toFixed(2))\r\n  }\r\n}\r\n","import { Box, Stack } from '@mui/material'\r\nimport { AnimatePresence, motion } from 'framer-motion'\r\n\r\nimport { TerminalMovements } from './terminal/movements'\r\n\r\nimport { useTerminalDetails } from '../store'\r\n\r\nexport const TerminalDetails = () => {\r\n  const terminal = useTerminalDetails(state => state.terminal)\r\n\r\n  return (\r\n    <Stack\r\n      sx={theme => ({\r\n        pl: { xs: 0, sm: 2, lg: 2 },\r\n        overflow: 'hidden',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create(['width', 'flexGrow'])\r\n      })}\r\n    >\r\n      <AnimatePresence>\r\n        <Box sx={{ overflowY: 'auto' }}>\r\n          {terminal && (\r\n            <motion.div\r\n              exit={{ opacity: 0 }}\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ duration: 1 }}\r\n            >\r\n              <Stack p={2}>\r\n                <TerminalMovements />\r\n              </Stack>\r\n            </motion.div>\r\n          )}\r\n\r\n          {!terminal && (\r\n            <motion.div\r\n              exit={{ opacity: 0 }}\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ duration: 1 }}\r\n            >\r\n              <Stack p={2}>\r\n                <TerminalMovements />\r\n              </Stack>\r\n            </motion.div>\r\n          )}\r\n        </Box>\r\n      </AnimatePresence>\r\n    </Stack>\r\n  )\r\n}\r\n","import { Suspense, lazy, useState } from 'react'\r\n\r\nimport { Apps, Link } from '@mui/icons-material'\r\nimport { Button, Divider, Stack } from '@mui/material'\r\n\r\nconst PaymentLinkModal = lazy(() => import('../payment-link/PaymentLinkModal'))\r\nconst VirtualTerminalModal = lazy(() => import('../virtual-terminal/VirtualTerminalModal'))\r\n\r\nexport const TerminalActions = () => {\r\n  const [openPaymentLink, setOpenPaymentLink] = useState(false)\r\n  const [openVirtualTerminal, setOpenVirtualTerminal] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Divider sx={{ borderStyle: 'dashed' }} />\r\n      <Stack px={2} py={1} flexDirection={'row'} justifyContent={'space-between'}>\r\n        <Button size=\"small\" startIcon={<Link />} onClick={() => setOpenPaymentLink(true)}>\r\n          Liga de Pago\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          startIcon={<Apps />}\r\n          sx={{ textWrap: 'nowrap' }}\r\n          onClick={() => setOpenVirtualTerminal(true)}\r\n        >\r\n          Term. Virtual\r\n        </Button>\r\n      </Stack>\r\n      <Suspense>\r\n        <PaymentLinkModal open={openPaymentLink} setOpen={setOpenPaymentLink} />\r\n      </Suspense>\r\n      <Suspense>\r\n        <VirtualTerminalModal open={openVirtualTerminal} setOpen={setOpenVirtualTerminal} />\r\n      </Suspense>\r\n    </>\r\n  )\r\n}\r\n","import { alpha, CardHeader, Paper, Stack, Typography } from '@mui/material'\r\nimport { AnimatePresence, motion } from 'framer-motion'\r\n\r\nimport { useTerminalDetails, useTerminals } from '../../store'\r\nimport { TerminalActions } from '../terminal/TerminalActions'\r\n\r\nimport { varSlide } from '@/shared/components/animate'\r\n\r\nexport const TerminalBalance = () => {\r\n  const terminal = useTerminalDetails(state => state.terminal)\r\n  const balance = useTerminals(state => state.balance)\r\n  const name = terminal ? terminal?.name : 'Global'\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {!!terminal?.id && (\r\n        <motion.div {...varSlide().inLeft}>\r\n          <Paper\r\n            sx={{\r\n              boxShadow: theme => `0px 0px 15px 2px ${alpha(theme.palette.primary.main, 0.4)}`\r\n            }}\r\n          >\r\n            <CardHeader\r\n              title={\r\n                <Stack flexDirection={'column'} gap={1}>\r\n                  <Typography variant=\"subtitle1\">{name}</Typography>\r\n                </Stack>\r\n              }\r\n              sx={{ px: 2, py: 2 }}\r\n            />\r\n\r\n            <Stack alignItems={'center'} pb={2} px={2}>\r\n              <Stack direction={'row'} spacing={1} alignItems={'center'}>\r\n                <Typography variant=\"h3\">{balance.amount}</Typography>\r\n                <Typography variant=\"caption\">MXN</Typography>\r\n              </Stack>\r\n\r\n              {balance?.month && <Typography variant=\"subtitle2\">Balance de {balance.month}</Typography>}\r\n            </Stack>\r\n\r\n            {terminal?.isVirtual && <TerminalActions />}\r\n          </Paper>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  )\r\n}\r\n","import { Card, CardHeader, Stack, Typography } from '@mui/material'\r\nimport { AnimatePresence, motion } from 'framer-motion'\r\n\r\nimport { useTerminalDetails, useTerminals } from '../../store'\r\n\r\nexport const TerminalGlobalBalance = () => {\r\n  const balance = useTerminals(state => state.globalBalance)\r\n  const resetTerminal = useTerminalDetails(state => state.resetTerminal)\r\n  const terminal = useTerminalDetails(state => state.terminal)\r\n  const handleClose = () => {\r\n    resetTerminal()\r\n  }\r\n\r\n  if (terminal) {\r\n    return (\r\n      <AnimatePresence>\r\n        <motion.div onClick={handleClose} whileHover={{ scale: 1.03 }} whileTap={{ scale: 0.8 }}>\r\n          <Card\r\n            sx={theme => ({\r\n              cursor: 'pointer',\r\n              '& :hover': {\r\n                color: 'primary.main'\r\n              }\r\n            })}\r\n          >\r\n            <CardHeader\r\n              title={\r\n                <Stack flexDirection={'row'} gap={1} justifyContent={'space-between'}>\r\n                  <Typography variant=\"subtitle1\">Global</Typography>\r\n                  <Stack direction={'row'} spacing={1} alignItems={'center'}>\r\n                    <Typography variant=\"caption\">{balance.amount}</Typography>\r\n                    <Typography variant=\"caption\">MXN</Typography>\r\n                  </Stack>\r\n                </Stack>\r\n              }\r\n              sx={{ px: 2, py: 2 }}\r\n            />\r\n          </Card>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div onClick={handleClose} whileHover={{ scale: 1.03 }} whileTap={{ scale: 0.8 }}>\r\n        <Card\r\n          sx={theme => ({\r\n            cursor: 'pointer',\r\n            backgroundColor: { xs: 'background.neutral', md: 'background.paper' },\r\n            '& :hover': {\r\n              color: 'primary.main'\r\n            }\r\n          })}\r\n        >\r\n          <CardHeader\r\n            title={\r\n              <Stack flexDirection={'column'} gap={1}>\r\n                <Typography variant=\"subtitle1\">Global</Typography>\r\n              </Stack>\r\n            }\r\n            sx={{ px: 2, py: 2 }}\r\n          />\r\n\r\n          <Stack alignItems={'center'} pb={2} px={2}>\r\n            <Stack direction={'row'} spacing={1} alignItems={'center'}>\r\n              <Typography variant=\"h3\">{balance.amount}</Typography>\r\n              <Typography variant=\"caption\">MXN</Typography>\r\n            </Stack>\r\n\r\n            {balance?.month && <Typography variant=\"subtitle2\">Balance de {balance.month}</Typography>}\r\n          </Stack>\r\n        </Card>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  )\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { ContactlessSharp, PointOfSale } from '@mui/icons-material'\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  Stack,\r\n  Tooltip,\r\n  Typography,\r\n  styled\r\n} from '@mui/material'\r\n\r\nimport { useTerminalDetails, useTerminals } from '../../store'\r\n\r\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\r\n  borderRadius: '8px!important',\r\n  width: 1,\r\n  justifyContent: 'center',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  mb: 1\r\n  // transition: theme.transitions.create('all')\r\n}))\r\n\r\nexport const TerminalItem = ({ terminal }) => {\r\n  const isOpenSidebar = useTerminals(state => state.isOpenList)\r\n  const setOpenSidebar = useTerminals(state => state.setOpenList)\r\n\r\n  const setCommerceTerminal = useTerminalDetails(state => state.setTerminal)\r\n  const commerceTerminal = useTerminalDetails(state => state.terminal)\r\n\r\n  const status =\r\n    terminal?.id === commerceTerminal?.id && commerceTerminal\r\n      ? commerceTerminal?.cardON === true\r\n        ? 'online'\r\n        : 'offline'\r\n      : 'invisible'\r\n\r\n  const isSelected = terminal?.id === commerceTerminal?.id\r\n\r\n  const handleSelectedRow = e => {\r\n    const type = e.target?.type\r\n    if (!type && !isSelected) {\r\n      setCommerceTerminal(terminal)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={terminal?.name} arrow placement=\"right\">\r\n      <ListItem\r\n        sx={{\r\n          mb: 1,\r\n          padding: 0,\r\n          borderRadius: 1,\r\n          '& :hover': { color: 'text.primary' }\r\n        }}\r\n        disablePadding\r\n      >\r\n        <RootStyle\r\n          onClick={handleSelectedRow}\r\n          sx={{\r\n            ...(isSelected && {\r\n              bgcolor: 'secondary.light',\r\n              color: 'text.primary.contrastText',\r\n              '& :hover': { color: 'text.primary' }\r\n            }),\r\n            '& :hover': { color: 'text.primary' },\r\n            width: 1,\r\n            py: 1,\r\n            gap: 1\r\n          }}\r\n        >\r\n          <ListItemAvatar sx={{ ml: 2, m: 0 }}>\r\n            <Box sx={{ position: 'relative' }}>\r\n              <Avatar\r\n                sx={theme => ({\r\n                  width: 32,\r\n                  height: 32,\r\n                  m: 0,\r\n                  backgroundColor: theme.palette.primary.main,\r\n                  color: theme.palette.primary.contrastText,\r\n                  '& :hover': { color: theme.palette.primary.contrastText }\r\n                })}\r\n              >\r\n                {terminal?.isVirtual ? (\r\n                  <ContactlessSharp\r\n                    sx={theme => ({ width: 20, height: 20, '& :hover': { color: theme.palette.primary.contrastText } })}\r\n                  />\r\n                ) : (\r\n                  <PointOfSale\r\n                    sx={theme => ({\r\n                      width: 16,\r\n                      height: 16,\r\n                      '& :hover': { color: theme.palette.primary.contrastText }\r\n                    })}\r\n                  />\r\n                )}\r\n              </Avatar>\r\n            </Box>\r\n          </ListItemAvatar>\r\n\r\n          {isOpenSidebar && (\r\n            <>\r\n              <Stack\r\n                sx={{\r\n                  width: 1\r\n                }}\r\n              >\r\n                <Typography noWrap variant={'subtitle2'}>\r\n                  {terminal?.name}\r\n                </Typography>\r\n              </Stack>\r\n            </>\r\n          )}\r\n        </RootStyle>\r\n      </ListItem>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nTerminalItem.propTypes = {\r\n  terminal: PropTypes.shape({\r\n    alias: PropTypes.any,\r\n    id: PropTypes.any,\r\n    isVirtual: PropTypes.any,\r\n    name: PropTypes.any\r\n  })\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { List } from '@mui/material'\r\n\r\nimport { TerminalItem } from './TerminalItem'\r\n\r\nimport { useTerminals } from '../../store'\r\n\r\nimport SkeletonCardItem from '@/app/business/viabo-card/cards/components/sidebar/SkeletonCardItem'\r\nimport { ErrorRequestPage } from '@/shared/components/notifications'\r\nimport EmptyList from '@/shared/components/notifications/EmptyList'\r\n\r\nexport const TerminalsList = ({ terminalsQuery, sx, ...other }) => {\r\n  const { isLoading, data, error, isError, refetch } = terminalsQuery\r\n\r\n  const isOpenSidebar = useTerminals(state => state.isOpenList)\r\n  const terminals = useTerminals(state => state.terminals)\r\n\r\n  if (isError && isOpenSidebar && !data && !isLoading) {\r\n    return <ErrorRequestPage errorMessage={error} handleButton={refetch} />\r\n  }\r\n\r\n  if (data && isOpenSidebar && data?.length === 0 && !isLoading) {\r\n    return <EmptyList pt={2.5} message={'No hay terminales activas para este comercio'} />\r\n  }\r\n\r\n  return (\r\n    <List disablePadding sx={sx} {...other}>\r\n      {(isLoading ? [...Array(12)] : terminals).map((terminal, index) =>\r\n        terminal?.id ? (\r\n          <TerminalItem key={terminal?.id} terminal={terminal} />\r\n        ) : (\r\n          <SkeletonCardItem isOpenSideBar={isOpenSidebar} key={index} />\r\n        )\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\nTerminalsList.propTypes = {\r\n  sx: PropTypes.any,\r\n  terminalsQuery: PropTypes.shape({\r\n    data: PropTypes.array,\r\n    error: PropTypes.any,\r\n    isError: PropTypes.any,\r\n    isLoading: PropTypes.any,\r\n    refetch: PropTypes.any\r\n  })\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Search } from '@mui/icons-material'\r\nimport { Box, ClickAwayListener, InputAdornment, Stack } from '@mui/material'\r\n\r\nimport { useTerminals } from '../../store'\r\n\r\nimport { SidebarButtonStyle } from '@/app/business/viabo-card/cards/components/sidebar/SidebarStyles'\r\nimport { arrowIcon } from '@/shared/assets/icons'\r\nimport { InputStyle } from '@/shared/components/form'\r\nimport { SearchNotFound } from '@/shared/components/notifications'\r\nimport { useResponsive } from '@/theme/hooks'\r\n\r\nexport const TerminalsSearch = ({ commerceTerminals = [] }) => {\r\n  const { setOpenList: setOpenSidebar, setCollapse, setTerminals } = useTerminals()\r\n\r\n  const openSidebar = useTerminals(state => state.isOpenList)\r\n  const isCollapse = useTerminals(state => state.isCollapse)\r\n  const terminals = useTerminals(state => state.terminals)\r\n\r\n  const isDesktop = useResponsive('up', 'md')\r\n\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n\r\n  const [isSearchFocused, setSearchFocused] = useState(false)\r\n\r\n  const displayResults = searchQuery && isSearchFocused\r\n\r\n  const handleChangeSearch = async event => {\r\n    try {\r\n      const { value } = event.target\r\n      setSearchQuery(value)\r\n      if (value) {\r\n        const results =\r\n          commerceTerminals?.filter(\r\n            item => item?.name && item?.name?.toLowerCase().indexOf(value.toLowerCase()) !== -1\r\n          ) || []\r\n\r\n        setTerminals(results)\r\n      } else {\r\n        setTerminals(commerceTerminals)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const handleToggleSidebar = () => {\r\n    const sentence = isDesktop && openSidebar\r\n    setCollapse(sentence)\r\n    if (openSidebar) {\r\n      setSearchQuery('')\r\n      setTerminals(commerceTerminals)\r\n    }\r\n    setOpenSidebar(!openSidebar)\r\n  }\r\n\r\n  const handleSearchFocus = () => {\r\n    setSearchFocused(true)\r\n  }\r\n\r\n  const handleClickAwaySearch = () => {\r\n    setSearchFocused(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (commerceTerminals) {\r\n      setTerminals(commerceTerminals)\r\n    }\r\n  }, [commerceTerminals])\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (!openSidebar) {\r\n      return setSearchFocused(false)\r\n    }\r\n  }, [openSidebar])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ p: 2, px: 0 }}>\r\n        <Stack direction=\"row\" justifyContent={openSidebar ? 'flex-end' : 'center'} alignItems={'center'} spacing={2}>\r\n          {(!isCollapse || !isDesktop) && (\r\n            <ClickAwayListener onClickAway={handleClickAwaySearch}>\r\n              <InputStyle\r\n                fullWidth\r\n                size=\"small\"\r\n                value={searchQuery}\r\n                onFocus={handleSearchFocus}\r\n                onChange={handleChangeSearch}\r\n                placeholder=\"Buscar Terminales...\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Search sx={{ color: 'text.disabled', width: 20, height: 20 }} />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </ClickAwayListener>\r\n          )}\r\n          {isDesktop && (\r\n            <Stack direction={'row'} alignItems={'center'} justifyContent={'center'}>\r\n              <SidebarButtonStyle\r\n                size={'small'}\r\n                sx={{\r\n                  ...(!openSidebar && {\r\n                    transform: 'rotate(180deg)'\r\n                  })\r\n                }}\r\n                onClick={handleToggleSidebar}\r\n              >\r\n                {arrowIcon}\r\n              </SidebarButtonStyle>\r\n            </Stack>\r\n          )}\r\n        </Stack>\r\n      </Box>\r\n      {terminals?.length === 0 && commerceTerminals?.length > 0 && (\r\n        <SearchNotFound\r\n          sx={{ p: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}\r\n          searchQuery={searchQuery}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nTerminalsSearch.propTypes = {\r\n  commerceTerminals: PropTypes.array\r\n}\r\n","import { useMemo } from 'react'\r\n\r\nimport { ContactlessSharp } from '@mui/icons-material'\r\nimport { Drawer, Stack, useTheme } from '@mui/material'\r\nimport { useResponsive } from '@theme/hooks'\r\n\r\nimport { TerminalBalance } from './terminal-balance/TerminalBalance'\r\nimport { TerminalGlobalBalance } from './terminal-balance/TerminalGlobalBalance'\r\nimport { TerminalsList } from './terminals/TerminalsList'\r\nimport { TerminalsSearch } from './terminals/TerminalsSearch'\r\n\r\nimport { useFindCommerceTerminals } from '../hooks'\r\nimport { useTerminals } from '../store'\r\n\r\nimport {\r\n  SIDEBAR_COLLAPSE_WIDTH,\r\n  SIDEBAR_WIDTH,\r\n  SidebarButtonMobileStyle\r\n} from '@/app/business/viabo-card/cards/components/sidebar/SidebarStyles'\r\nimport { Scrollbar } from '@/shared/components/scroll'\r\n\r\nexport const TerminalsDrawer = () => {\r\n  const openSidebar = useTerminals(state => state.isOpenList)\r\n  const setOpenSidebar = useTerminals(state => state.setOpenList)\r\n  const setCollapse = useTerminals(state => state.setCollapse)\r\n\r\n  const terminalsQuery = useFindCommerceTerminals()\r\n\r\n  const theme = useTheme()\r\n\r\n  const isDesktop = useResponsive('up', 'md')\r\n\r\n  const isCollapse = useMemo(() => isDesktop && !openSidebar, [isDesktop, openSidebar])\r\n\r\n  const handleCloseSidebar = () => {\r\n    setCollapse(true)\r\n    setOpenSidebar(false)\r\n  }\r\n\r\n  const handleToggleSidebar = () => {\r\n    setOpenSidebar(!openSidebar)\r\n  }\r\n\r\n  const renderContent = (\r\n    <>\r\n      {openSidebar && (\r\n        <Stack spacing={2} p={2}>\r\n          <TerminalGlobalBalance />\r\n\r\n          <TerminalBalance />\r\n        </Stack>\r\n      )}\r\n\r\n      <Stack>\r\n        <TerminalsSearch commerceTerminals={terminalsQuery?.data || []} />\r\n      </Stack>\r\n      <Scrollbar\r\n        sx={{\r\n          height: 0.98\r\n        }}\r\n      >\r\n        <Stack>\r\n          <TerminalsList terminalsQuery={terminalsQuery} />\r\n        </Stack>\r\n      </Scrollbar>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {!isDesktop && !openSidebar && (\r\n        <SidebarButtonMobileStyle onClick={handleToggleSidebar}>\r\n          <ContactlessSharp sx={{ width: 20, height: 20 }} />\r\n        </SidebarButtonMobileStyle>\r\n      )}\r\n\r\n      {isDesktop ? (\r\n        <Drawer\r\n          open={openSidebar}\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              height: 1,\r\n              borderRightStyle: 'none',\r\n              bgcolor: 'background.default'\r\n            }\r\n          }}\r\n          sx={{\r\n            height: 1,\r\n            width: SIDEBAR_WIDTH,\r\n            transition: theme.transitions.create('width'),\r\n            '& .MuiDrawer-paper': {\r\n              position: 'static',\r\n              backgroundColor: 'transparent!important',\r\n              width: SIDEBAR_WIDTH\r\n            },\r\n            ...(isCollapse && {\r\n              width: SIDEBAR_COLLAPSE_WIDTH,\r\n              '& .MuiDrawer-paper': {\r\n                width: SIDEBAR_COLLAPSE_WIDTH,\r\n                backgroundColor: 'transparent!important',\r\n                position: 'static',\r\n                transform: 'none !important',\r\n                visibility: 'visible !important'\r\n              }\r\n            })\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      ) : (\r\n        <Drawer\r\n          ModalProps={{ keepMounted: false }}\r\n          open={openSidebar}\r\n          onClose={handleCloseSidebar}\r\n          sx={{\r\n            height: 1,\r\n            '& .MuiDrawer-paper': { width: SIDEBAR_WIDTH, p: 2 }\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { lazy } from 'react'\r\n\r\nimport { Box } from '@mui/material'\r\n\r\nimport { TerminalDetails, TerminalsDrawer } from '../components'\r\nimport { useTerminalDetails } from '../store'\r\n\r\nimport { VIABO_PAY_PATHS, VIABO_PAY_ROUTES_NAMES } from '@/app/business/viabo-pay/routes'\r\nimport { PATH_DASHBOARD } from '@/routes'\r\nimport { Page } from '@/shared/components/containers'\r\nimport { ContainerPage } from '@/shared/components/containers/ContainerPage'\r\nimport { HeaderPage } from '@/shared/components/layout'\r\nimport { Lodable } from '@/shared/components/lodables'\r\n\r\nconst ConciliateTerminalsMovements = Lodable(\r\n  lazy(() => import('../components/terminal/movements/ConciliateTerminalsMovements'))\r\n)\r\n\r\nconst POSTerminals = () => {\r\n  const openConciliate = useTerminalDetails(state => state.openConciliate)\r\n\r\n  return (\r\n    <Page title=\"Lista de Terminales Punto de Venta\">\r\n      <ContainerPage>\r\n        <Box display={'flex'} overflow={'hidden'} sx={{ height: '100vH', maxHeight: '100%', flexDirection: 'column' }}>\r\n          <Box px={1}>\r\n            <HeaderPage\r\n              name={'Terminales Punto de Venta'}\r\n              links={[\r\n                { name: 'Inicio', href: PATH_DASHBOARD.root },\r\n                { name: 'Viabo Pay', href: VIABO_PAY_PATHS.terminals },\r\n                { name: VIABO_PAY_ROUTES_NAMES.terminals.name }\r\n              ]}\r\n            />\r\n          </Box>\r\n\r\n          <Box display={'flex'} overflow={'hidden'} flex={1}>\r\n            <TerminalsDrawer />\r\n            <TerminalDetails />\r\n          </Box>\r\n        </Box>\r\n        {!!openConciliate && <ConciliateTerminalsMovements />}\r\n      </ContainerPage>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default POSTerminals\r\n"],"file":"assets/js/POSTerminals-C3GlOtDZ.js"}
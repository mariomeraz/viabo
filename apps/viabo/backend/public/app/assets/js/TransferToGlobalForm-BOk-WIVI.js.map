{"version":3,"file":"TransferToGlobalForm-BOk-WIVI.js","sources":["../../../../../frontend/src/app/business/viabo-card/cards/components/transfer/TransferToGlobalForm.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nimport { ArrowForwardIos, CreditCard } from '@mui/icons-material'\r\nimport { Button, Chip, Stack } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport { FormProvider, MaskedInput, RFTextField } from '@/shared/components/form'\r\nimport { Scrollbar } from '@/shared/components/scroll'\r\n\r\nfunction TransferToGlobalForm({ setCurrentBalance, insufficient, mainCard, onSuccess }) {\r\n  const RegisterSchema = Yup.object().shape({\r\n    amount: Yup.string()\r\n      .required('La cantidad es requerida')\r\n      .test('maxAmount', 'Monto m√°ximo de transferencia $50,000', function (value) {\r\n        return parseFloat(value?.replace(/,/g, '')) <= 50000\r\n      })\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      card: mainCard ? { label: mainCard?.label, value: mainCard?.id } : null,\r\n      amount: '',\r\n      concept: ''\r\n    },\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: (values, { setSubmitting }) => {\r\n      if (insufficient) {\r\n        return setSubmitting(false)\r\n      }\r\n      setSubmitting(false)\r\n      return onSuccess(values)\r\n    }\r\n  })\r\n  const { isSubmitting, setFieldValue, values } = formik\r\n\r\n  const loading = isSubmitting\r\n\r\n  return (\r\n    <Scrollbar containerProps={{ sx: { flexGrow: 0, height: 'auto' } }}>\r\n      <FormProvider formik={formik}>\r\n        <Stack sx={{ p: 3 }} spacing={1}>\r\n          <Stack\r\n            direction={{ xs: 'column', md: 'row' }}\r\n            spacing={2}\r\n            sx={{ width: 1 }}\r\n            alignItems={'flex-start'}\r\n            justifyContent={'center'}\r\n          >\r\n            <Chip icon={<CreditCard />} label={mainCard?.cardNumberHidden} />\r\n          </Stack>\r\n          <Stack>\r\n            <RFTextField\r\n              sx={{ width: 1 }}\r\n              size={'small'}\r\n              name={'amount'}\r\n              required={true}\r\n              label={'Cantidad'}\r\n              placeholder={'0.00'}\r\n              disabled={loading}\r\n              autoComplete={'off'}\r\n              InputProps={{\r\n                startAdornment: <span style={{ marginRight: '5px' }}>$</span>,\r\n                inputComponent: MaskedInput,\r\n                inputProps: {\r\n                  mask: Number,\r\n                  radix: '.',\r\n                  thousandsSeparator: ',',\r\n                  padFractionalZeros: true,\r\n                  min: 0,\r\n                  scale: 2,\r\n                  value: values.amount,\r\n                  onAccept: value => {\r\n                    setCurrentBalance(parseFloat(value === '' ? '0' : value.replace(/,/g, '')).toFixed(2))\r\n                    setFieldValue('amount', value)\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </Stack>\r\n          <Stack sx={{ width: 1 }}>\r\n            <RFTextField\r\n              name={'concept'}\r\n              multiline\r\n              disabled={loading}\r\n              rows={2}\r\n              label={'Concepto'}\r\n              placeholder={'Transferencia ..'}\r\n            />\r\n          </Stack>\r\n\r\n          <Stack sx={{ px: 3, pt: 3 }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              disabled={insufficient}\r\n              fullWidth\r\n              type=\"submit\"\r\n              startIcon={<ArrowForwardIos />}\r\n            >\r\n              Siguiente\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Scrollbar>\r\n  )\r\n}\r\n\r\nexport default TransferToGlobalForm\r\n\r\nTransferToGlobalForm.propTypes = {\r\n  insufficient: PropTypes.any,\r\n  mainCard: PropTypes.shape({\r\n    cardNumberHidden: PropTypes.any,\r\n    id: PropTypes.any,\r\n    label: PropTypes.any\r\n  }),\r\n  onSuccess: PropTypes.func,\r\n  setCurrentBalance: PropTypes.func\r\n}\r\n"],"names":["TransferToGlobalForm","setCurrentBalance","insufficient","mainCard","onSuccess","RegisterSchema","Yup","shape","amount","required","test","value","parseFloat","replace","formik","useFormik","initialValues","card","label","id","concept","validationSchema","onSubmit","values","setSubmitting","isSubmitting","setFieldValue","loading","jsx","Scrollbar","sx","flexGrow","height","FormProvider","jsxs","Stack","p","xs","md","width","Chip","CreditCard","cardNumberHidden","RFTextField","startAdornment","marginRight","inputComponent","MaskedInput","inputProps","mask","Number","radix","thousandsSeparator","padFractionalZeros","min","scale","onAccept","toFixed","px","pt","Button","ArrowForwardIos","propTypes","PropTypes","any","func"],"mappings":"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"}
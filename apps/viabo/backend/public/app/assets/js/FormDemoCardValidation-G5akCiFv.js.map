{"version":3,"file":"FormDemoCardValidation-G5akCiFv.js","sources":["../../../../../frontend/src/app/business/viabo-card/register-cards/hooks/useValidateDemoCard.js","../../../../../frontend/src/app/business/viabo-card/register-cards/components/FormDemoCardValidation.jsx"],"sourcesContent":["import { useMutation } from '@tanstack/react-query'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { validateDemoCard } from '@/app/business/viabo-card/register-cards/services'\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useValidateDemoCard = (options = {}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  return useMutation({\r\n    mutationFn: validateDemoCard,\r\n    onError: error => {\r\n      const message = getErrorAPI(error, 'No se puede validar la tarjeta.')\r\n      enqueueSnackbar(message, {\r\n        variant: getNotificationTypeByErrorCode(error),\r\n        autoHideDuration: 5000\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n}\r\n","import { useEffect } from 'react'\r\n\r\nimport { CreditCard } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Divider, InputAdornment, Stack, Typography } from '@mui/material'\r\nimport { useResponsive } from '@theme/hooks'\r\nimport { useFormik } from 'formik'\r\nimport { m } from 'framer-motion'\r\nimport { MuiOtpInput } from 'mui-one-time-password-input'\r\nimport * as Yup from 'yup'\r\n\r\nimport { useValidateDemoCard } from '@/app/business/viabo-card/register-cards/hooks'\r\nimport { CARD_ASSIGN_PROCESS_LIST } from '@/app/business/viabo-card/register-cards/services'\r\nimport { useCardUserAssign } from '@/app/business/viabo-card/register-cards/store'\r\nimport { varFade } from '@/shared/components/animate'\r\nimport { FormProvider, MaskedInput, RFTextField } from '@/shared/components/form'\r\nimport { matchIsNumeric } from '@/shared/utils'\r\n\r\nexport default function FormDemoCardValidation() {\r\n  const setToken = useCardUserAssign(state => state.setToken)\r\n  const setStep = useCardUserAssign(state => state.setStepAssignRegister)\r\n  const setCard = useCardUserAssign(state => state.setCard)\r\n  const resetState = useCardUserAssign(state => state.resetState)\r\n\r\n  const isDesktop = useResponsive('up', 'md')\r\n\r\n  const { mutate: validateDemoCard, isLoading: validatingCard, reset, isError } = useValidateDemoCard()\r\n\r\n  const CardSchema = Yup.object().shape({\r\n    cardNumber: Yup.string()\r\n      .transform((value, originalValue) => originalValue.replace(/\\s/g, ''))\r\n      .min(8, 'Debe contener los últimos 8 dígitos')\r\n      .required('El número de la tarjeta es requerido')\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      cardNumber: ''\r\n    },\r\n    validationSchema: CardSchema,\r\n    onSubmit: (values, { setSubmitting }) => {\r\n      validateDemoCard(\r\n        { cardNumber: values?.cardNumber?.replace(/\\s+/g, '') },\r\n        {\r\n          onSuccess: data => {\r\n            const { token, ...card } = data\r\n            if (token) {\r\n              setToken(token)\r\n              setCard(card)\r\n              setStep(CARD_ASSIGN_PROCESS_LIST.USER_REGISTER)\r\n            }\r\n            setSubmitting(false)\r\n          },\r\n          onError: () => {\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      )\r\n    }\r\n  })\r\n\r\n  const { isSubmitting, values, setFieldValue, handleSubmit, errors } = formik\r\n\r\n  const loading = isSubmitting || validatingCard\r\n\r\n  useEffect(() => {\r\n    resetState()\r\n  }, [])\r\n\r\n  const handleChange = newValue => {\r\n    if (isError) {\r\n      reset()\r\n    }\r\n    setFieldValue('cardNumber', newValue)\r\n  }\r\n\r\n  const validateChar = (value, index) => matchIsNumeric(value)\r\n\r\n  return (\r\n    <Stack spacing={5}>\r\n      <Stack direction=\"column\" width={1} spacing={1}>\r\n        <Stack>\r\n          <m.div variants={varFade().inRight}>\r\n            <Typography\r\n              align=\"center\"\r\n              variant=\"h3\"\r\n              sx={{\r\n                color: 'primary.main',\r\n                fontWeight: 'fontWeightMedium'\r\n              }}\r\n            >\r\n              Aquí Comienza\r\n            </Typography>\r\n          </m.div>\r\n\r\n          <m.div variants={varFade().inRight}>\r\n            <Typography\r\n              align=\"center\"\r\n              variant=\"h3\"\r\n              sx={{\r\n                color: 'primary.light',\r\n                fontWeight: 'fontWeightMedium'\r\n              }}\r\n            >\r\n              tu agilidad en pagos\r\n            </Typography>\r\n          </m.div>\r\n        </Stack>\r\n        <Typography paragraph align=\"center\" variant=\"subtitle1\" color={'text.primary'} whiteSpace=\"pre-line\">\r\n          Ingrese los 8 últimos dígitos de la tarjeta.\r\n        </Typography>\r\n      </Stack>\r\n\r\n      <FormProvider formik={formik}>\r\n        {isDesktop ? (\r\n          <MuiOtpInput\r\n            name={'cardNumber'}\r\n            length={8}\r\n            value={values.cardNumber}\r\n            onChange={handleChange}\r\n            validateChar={validateChar}\r\n            sx={{ gap: 1.5 }}\r\n            TextFieldsProps={{ placeholder: '-', error: isError, disabled: loading, fullWidth: true }}\r\n          />\r\n        ) : (\r\n          <RFTextField\r\n            name={'cardNumber'}\r\n            required={true}\r\n            placeholder={'9717 8968'}\r\n            fullWidth\r\n            size={'small'}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <CreditCard />\r\n                </InputAdornment>\r\n              ),\r\n              inputComponent: MaskedInput,\r\n              inputProps: {\r\n                mask: '0000 0000',\r\n                value: values.cardNumber,\r\n                onAccept: value => {\r\n                  setFieldValue('cardNumber', value)\r\n                }\r\n              }\r\n            }}\r\n            disabled={loading}\r\n          />\r\n        )}\r\n      </FormProvider>\r\n      <Stack spacing={3} px={5}>\r\n        <Stack>\r\n          <Typography paragraph align=\"center\" variant=\"body2\" color={'text.primary'}>\r\n            Iniciemos el proceso de asociación de tu cuenta.\r\n          </Typography>\r\n          <Divider />\r\n        </Stack>\r\n        <Stack alignItems={'center'} justifyContent={'center'}>\r\n          <LoadingButton\r\n            loading={loading}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n            sx={{ width: 150 }}\r\n          >\r\n            Validar\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n"],"names":["useValidateDemoCard","options","enqueueSnackbar","useSnackbar","useMutation","validateDemoCard","error","message","getErrorAPI","getNotificationTypeByErrorCode","FormDemoCardValidation","setToken","useCardUserAssign","state","setStep","setStepAssignRegister","setCard","resetState","isDesktop","useResponsive","mutate","isLoading","validatingCard","reset","isError","CardSchema","Yup","shape","cardNumber","string","transform","value","originalValue","replace","min","required","formik","useFormik","initialValues","validationSchema","onSubmit","values","setSubmitting","onSuccess","data","token","card","CARD_ASSIGN_PROCESS_LIST","USER_REGISTER","onError","isSubmitting","setFieldValue","handleSubmit","errors","loading","useEffect","handleChange","newValue","validateChar","index","matchIsNumeric","jsxs","Stack","jsx","m","varFade","inRight","Typography","color","fontWeight","FormProvider","MuiOtpInput","gap","placeholder","disabled","fullWidth","RFTextField","startAdornment","InputAdornment","CreditCard","inputComponent","MaskedInput","inputProps","mask","onAccept","Divider","LoadingButton","width"],"mappings":"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"}
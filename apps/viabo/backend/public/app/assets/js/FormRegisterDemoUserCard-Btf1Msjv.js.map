{"version":3,"file":"FormRegisterDemoUserCard-Btf1Msjv.js","sources":["../../../../../frontend/src/app/business/viabo-card/register-cards/hooks/useRegisterDemoUser.js","../../../../../frontend/src/app/business/viabo-card/register-cards/components/FormRegisterDemoUserCard.jsx"],"sourcesContent":["import { useState } from 'react'\r\n\r\nimport { useMutation } from '@tanstack/react-query'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { createNewDemoUser } from '@/app/business/viabo-card/register-cards/services'\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useRegisterDemoUser = (options = {}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const register = useMutation(createNewDemoUser, {\r\n    onSuccess: () => {\r\n      setCustomError(null)\r\n      enqueueSnackbar('Se creo el usuario con éxito', {\r\n        variant: 'success',\r\n        autoHideDuration: 5000\r\n      })\r\n    },\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'No se puede crear el usuario. Intente nuevamente o reporte a sistemas')\r\n      setCustomError(errorMessage)\r\n      enqueueSnackbar(errorMessage, {\r\n        variant: getNotificationTypeByErrorCode(error),\r\n        autoHideDuration: 5000\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n\r\n  return {\r\n    ...register,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { EmailOutlined, VerifiedUser } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Checkbox, FormControlLabel, InputAdornment, InputLabel, Link, Stack, Typography } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport { MuiTelInput } from 'mui-tel-input'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\n\r\nimport { useRegisterDemoUser } from '@/app/business/viabo-card/register-cards/hooks'\r\nimport { CARD_ASSIGN_PROCESS_LIST } from '@/app/business/viabo-card/register-cards/services'\r\nimport { useCardUserAssign } from '@/app/business/viabo-card/register-cards/store'\r\nimport { PUBLIC_PATHS } from '@/routes'\r\nimport { FormProvider, RFTextField } from '@/shared/components/form'\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport default function FormRegisterDemoUserCard() {\r\n  const setStep = useCardUserAssign(state => state.setStepAssignRegister)\r\n  const setUser = useCardUserAssign(state => state.setUser)\r\n  const setToken = useCardUserAssign(state => state.setToken)\r\n  const token = useCardUserAssign(state => state.token)\r\n\r\n  const { mutate: registerDemoUser, isLoading: isRegisteringDemoUser } = useRegisterDemoUser()\r\n\r\n  const registerValidation = Yup.object({\r\n    name: Yup.string().required('El nombre es requerido'),\r\n    email: Yup.string().email('Ingresa un correo valido').required('El correo es requerido'),\r\n    phone: Yup.string().test(\r\n      'longitud',\r\n      'El telefono es muy corto',\r\n      value => !(value && value.replace(/[\\s+]/g, '').length < 10)\r\n    )\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      phone: '',\r\n      email: '',\r\n      privacy: false\r\n    },\r\n    validationSchema: registerValidation,\r\n    onSubmit: values => {\r\n      axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n      registerDemoUser(values, {\r\n        onSuccess: data => {\r\n          if (data?.token) {\r\n            setToken(data?.token)\r\n            setUser(values)\r\n            setStep(CARD_ASSIGN_PROCESS_LIST.USER_VALIDATION)\r\n          }\r\n          setSubmitting(false)\r\n        },\r\n        onError: () => {\r\n          setSubmitting(false)\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const { errors, touched, isSubmitting, setFieldValue, values, setSubmitting, getFieldProps } = formik\r\n\r\n  const loading = isSubmitting || isRegisteringDemoUser\r\n\r\n  return (\r\n    <Stack>\r\n      <Stack direction=\"column\" width={1} spacing={0}>\r\n        <Typography variant=\"h4\" color=\"textPrimary\" align=\"center\">\r\n          Crear Cuenta\r\n        </Typography>\r\n        <Typography paragraph align=\"center\" variant=\"subtitle1\" color={'text.primary'} whiteSpace=\"pre-line\">\r\n          ¡Es tiempo de transformar tu negocio!\r\n        </Typography>\r\n      </Stack>\r\n\r\n      <FormProvider formik={formik}>\r\n        <Stack spacing={2} sx={{ p: 3, px: 5 }}>\r\n          <Stack spacing={1}>\r\n            <InputLabel>Nombre Completo*</InputLabel>\r\n            <RFTextField name={'name'} required={true} placeholder={'Usuario'} disabled={loading} size={'small'} />\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <InputLabel>Correo Electrónico*</InputLabel>\r\n            <RFTextField\r\n              name={'email'}\r\n              required={true}\r\n              placeholder={'usuario@dominio.com'}\r\n              disabled={loading}\r\n              size={'small'}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <EmailOutlined />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <InputLabel>Teléfono</InputLabel>\r\n            <MuiTelInput\r\n              name=\"phone\"\r\n              fullWidth\r\n              langOfCountryName=\"es\"\r\n              preferredCountries={['MX', 'US']}\r\n              continents={['NA', 'SA']}\r\n              value={values.phone || '+52'}\r\n              disabled={loading}\r\n              onChange={(value, info) => {\r\n                setFieldValue('phone', value)\r\n              }}\r\n              size={'small'}\r\n              error={touched.phone && Boolean(errors.phone)}\r\n              helperText={touched.phone && errors.phone}\r\n            />\r\n          </Stack>\r\n          <Stack justifyContent={'center'} alignItems={'center'}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  size=\"small\"\r\n                  {...getFieldProps('privacy')}\r\n                  disabled={loading}\r\n                  checked={values?.apiRequired}\r\n                  value={values?.apiRequired}\r\n                />\r\n              }\r\n              label={\r\n                <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary' }}>\r\n                  He leído y acepto los &nbsp;\r\n                  <Link\r\n                    component={RouterLink}\r\n                    underline=\"always\"\r\n                    color=\"info.main\"\r\n                    to={PUBLIC_PATHS.policies}\r\n                    target=\"_blank\"\r\n                  >\r\n                    Términos y condiciones\r\n                  </Link>\r\n                  &nbsp; & &nbsp;\r\n                  <Link\r\n                    component={RouterLink}\r\n                    underline=\"always\"\r\n                    color=\"info.main\"\r\n                    to={PUBLIC_PATHS.privacy}\r\n                    target=\"_blank\"\r\n                  >\r\n                    Acuerdos de privacidad\r\n                  </Link>\r\n                  .\r\n                </Typography>\r\n              }\r\n            />\r\n          </Stack>\r\n\r\n          <Stack sx={{ px: 5 }}>\r\n            <LoadingButton\r\n              size=\"large\"\r\n              loading={isSubmitting}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              startIcon={<VerifiedUser />}\r\n            >\r\n              Registrar\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Stack>\r\n  )\r\n}\r\n"],"names":["useRegisterDemoUser","options","enqueueSnackbar","useSnackbar","customError","setCustomError","useState","useMutation","createNewDemoUser","error","errorMessage","getErrorAPI","getNotificationTypeByErrorCode","FormRegisterDemoUserCard","setStep","useCardUserAssign","state","setStepAssignRegister","setUser","setToken","token","mutate","registerDemoUser","isLoading","isRegisteringDemoUser","registerValidation","Yup","name","required","email","phone","string","test","value","replace","length","formik","useFormik","initialValues","privacy","validationSchema","onSubmit","values","axios","defaults","headers","common","Authorization","onSuccess","data","CARD_ASSIGN_PROCESS_LIST","USER_VALIDATION","setSubmitting","onError","errors","touched","isSubmitting","setFieldValue","getFieldProps","loading","Stack","jsxs","jsx","Typography","FormProvider","p","px","InputLabel","RFTextField","startAdornment","InputAdornment","EmailOutlined","MuiTelInput","info","Boolean","FormControlLabel","Checkbox","apiRequired","color","Link","RouterLink","PUBLIC_PATHS","policies","LoadingButton","VerifiedUser"],"mappings":"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"}
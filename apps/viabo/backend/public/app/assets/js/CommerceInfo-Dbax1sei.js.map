{"version":3,"file":"CommerceInfo-Dbax1sei.js","sources":["../../../../../frontend/src/app/business/commerce/services/cardUses.js","../../../../../frontend/src/app/business/commerce/validations/commerceInfoValidation.js","../../../../../frontend/src/app/business/commerce/components/process/CommerceInfo.jsx"],"sourcesContent":["export const CARD_USES = ['Pago compensaciones a colaboradores', 'Pago servicios', 'Control de gastos ', 'Otro']\r\n","import * as Yup from 'yup'\r\n\r\nconst commerceInfoSchema = Yup.object({\r\n  fiscalName: Yup.string().required('El nombre fiscal es requerido'),\r\n  rfc: Yup.string().required('El RFC es requerido'),\r\n  commercialName: Yup.string().required('El nombre comercial es requerido'),\r\n  employeesNumber: Yup.number()\r\n    .min(1, 'Al menos debe exisitir un empleado')\r\n    .required('El número de empleados es requerido'),\r\n  branchesNumber: Yup.number()\r\n    .min(1, 'Al menos debe existir una sucursal')\r\n    .required('El número de sucursales es requerido'),\r\n  tpvsNumber: Yup.number()\r\n    .min(1, 'Al menos debe seleccionar una terminal punto de venta')\r\n    .required('El número de terminales de punto de venta es requerido')\r\n})\r\n\r\nconst commerceInfoFullSchema = Yup.object({\r\n  fiscalName: Yup.string().required('El nombre fiscal es requerido'),\r\n  rfc: Yup.string().required('El RFC es requerido'),\r\n  commercialName: Yup.string().required('El nombre comercial es requerido'),\r\n  employeesNumber: Yup.number()\r\n    .min(1, 'Al menos debe exisitir un empleado')\r\n    .required('El número de empleados es requerido'),\r\n  branchesNumber: Yup.number()\r\n    .min(1, 'Al menos debe existir una sucursal')\r\n    .required('El número de sucursales es requerido'),\r\n  tpvsNumber: Yup.number()\r\n    .min(1, 'Al menos debe seleccionar una terminal punto de venta')\r\n    .required('El número de terminales de punto de venta es requerido'),\r\n  cardsUse: Yup.string().required('El uso de la tarjetas es requerido'),\r\n  cardsNumber: Yup.number()\r\n    .min(1, 'Al menos debe seleccionar una tarjeta')\r\n    .required('El número de tarjetas es requerido')\r\n})\r\n\r\nexport const getCommerceValidationByService = resume => {\r\n  const initial = {\r\n    fiscalName: resume?.fiscalName || '',\r\n    rfc: resume?.rfc || '',\r\n    commercialName: resume?.commercialName || '',\r\n    employeesNumber: resume?.employeesNumber || '',\r\n    branchesNumber: resume?.branchesNumber || '',\r\n    tpvsNumber: resume?.tpvsNumber || '',\r\n    apiRequired: resume?.apiRequired || false,\r\n    cardsUse: resume?.cardsUse || '',\r\n    cardsNumber: resume?.cardsNumber || '',\r\n    customCardsRequired: resume?.customCardsRequired || false\r\n  }\r\n\r\n  let schema = commerceInfoSchema\r\n  const allInfoIsRequired = Boolean(resume?.services?.find(service => service?.type === '2'))\r\n  if (allInfoIsRequired) {\r\n    schema = commerceInfoFullSchema\r\n  }\r\n  return {\r\n    initialValues: initial,\r\n    schema,\r\n    allInfoIsRequired\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Box, Checkbox, FormControlLabel, MenuItem, Stack, TextField, Typography } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\n\r\nimport { CommerceUpdateAdapter } from '@/app/business/commerce/adapters/commerceUpdateAdapter'\r\nimport { useUpdateCommerceProcess } from '@/app/business/commerce/hooks'\r\nimport { CARD_USES, PROCESS_LIST } from '@/app/business/commerce/services'\r\nimport { propTypesStore } from '@/app/business/commerce/store'\r\nimport { getCommerceValidationByService } from '@/app/business/commerce/validations/commerceInfoValidation'\r\n\r\nCommerceInfo.propTypes = {\r\n  store: PropTypes.shape(propTypesStore)\r\n}\r\n\r\nexport default function CommerceInfo({ store }) {\r\n  const { resume, setActualProcess, setLastProcess } = store\r\n  const { schema, initialValues, allInfoIsRequired } = useMemo(() => getCommerceValidationByService(resume), [resume])\r\n\r\n  const { mutate: updateInfoCommerce, isLoading: isUpdatingCommerce } = useUpdateCommerceProcess()\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    enableReinitialize: true,\r\n    validationSchema: schema,\r\n    onSubmit: values => {\r\n      const {\r\n        fiscalName,\r\n        rfc,\r\n        commercialName,\r\n        employeesNumber,\r\n        branchesNumber,\r\n        tpvsNumber,\r\n        apiRequired,\r\n        cardsUse,\r\n        cardsNumber,\r\n        customCardsRequired\r\n      } = values\r\n      const resumeAdapter = CommerceUpdateAdapter(resume, 3)\r\n      const services = resumeAdapter?.services?.map(service => {\r\n        if (service?.type === '2') {\r\n          return {\r\n            ...service,\r\n            type: service.type.toString(),\r\n            cardNumbers: cardsNumber.toString(),\r\n            cardUse: cardsUse,\r\n            personalized: customCardsRequired ? '1' : '0'\r\n          }\r\n        } else {\r\n          return service\r\n        }\r\n      })\r\n      const dataAdapted = {\r\n        ...resumeAdapter,\r\n        fiscalName,\r\n        tradeName: commercialName,\r\n        rfc,\r\n        employees: employeesNumber,\r\n        branchOffices: branchesNumber,\r\n        pointSaleTerminal: tpvsNumber,\r\n        paymentApi: apiRequired ? '1' : '0',\r\n        services\r\n      }\r\n\r\n      updateInfoCommerce(dataAdapted, {\r\n        onSuccess: () => {\r\n          setActualProcess(PROCESS_LIST.COMMERCE_DOCUMENTATION)\r\n          setLastProcess({ info: null, name: PROCESS_LIST.COMMERCE_INFO })\r\n          setSubmitting(false)\r\n        },\r\n        onError: () => {\r\n          setSubmitting(false)\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const { handleSubmit, values, errors, touched, handleChange, isSubmitting, setSubmitting, getFieldProps } = formik\r\n\r\n  const loading = isSubmitting || isUpdatingCommerce\r\n\r\n  return (\r\n    <>\r\n      <Stack direction=\"column\" width={1} spacing={1}>\r\n        <Typography variant=\"h4\" color=\"textPrimary\" align=\"center\">\r\n          Información del Comercio\r\n        </Typography>\r\n        <Typography paragraph align=\"center\" variant=\"body1\" color={'text.secondary'} whiteSpace=\"pre-line\">\r\n          Ingrese la información del comercio para continuar con el proceso\r\n        </Typography>\r\n      </Stack>\r\n      <Box width={1} py={4} component={'form'} onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"fiscalName\"\r\n            label=\"Nombre Fiscal\"\r\n            autoFocus\r\n            value={values.fiscalName}\r\n            error={touched.fiscalName && Boolean(errors.fiscalName)}\r\n            helperText={touched.fiscalName && errors.fiscalName}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            name=\"rfc\"\r\n            label=\"RFC\"\r\n            value={values.rfc}\r\n            error={touched.rfc && Boolean(errors.rfc)}\r\n            helperText={touched.rfc && errors.rfc}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            name=\"commercialName\"\r\n            label=\"Nombre Comercial\"\r\n            value={values.commercialName}\r\n            error={touched.commercialName && Boolean(errors.commercialName)}\r\n            helperText={touched.commercialName && errors.commercialName}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          />\r\n          <Stack direction={{ xs: 'column', md: 'row' }} spacing={3}>\r\n            <TextField\r\n              fullWidth\r\n              name=\"employeesNumber\"\r\n              label=\"No. Empleados\"\r\n              type={'number'}\r\n              inputProps={{ inputMode: 'numeric', min: '1' }}\r\n              value={values.employeesNumber}\r\n              error={touched.employeesNumber && Boolean(errors.employeesNumber)}\r\n              helperText={touched.employeesNumber && errors.employeesNumber}\r\n              onChange={handleChange}\r\n              disabled={loading}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              name=\"branchesNumber\"\r\n              label=\"No. Sucursales\"\r\n              type={'number'}\r\n              inputProps={{ inputMode: 'numeric', min: '1' }}\r\n              value={values.branchesNumber}\r\n              error={touched.branchesNumber && Boolean(errors.branchesNumber)}\r\n              helperText={touched.branchesNumber && errors.branchesNumber}\r\n              onChange={handleChange}\r\n              disabled={loading}\r\n            />\r\n          </Stack>\r\n\r\n          <Stack direction={{ xs: 'column', md: 'row' }} spacing={3}>\r\n            <TextField\r\n              fullWidth\r\n              name=\"tpvsNumber\"\r\n              label=\"No. Terminales TPV's\"\r\n              type={'number'}\r\n              inputProps={{ inputMode: 'numeric', min: '1' }}\r\n              value={values.tpvsNumber}\r\n              error={touched.tpvsNumber && Boolean(errors.tpvsNumber)}\r\n              helperText={touched.tpvsNumber && errors.tpvsNumber}\r\n              onChange={handleChange}\r\n              disabled={loading}\r\n            />\r\n            {allInfoIsRequired && (\r\n              <TextField\r\n                fullWidth\r\n                name=\"cardsNumber\"\r\n                label=\"No. de Tarjetas\"\r\n                type={'number'}\r\n                inputProps={{ inputMode: 'numeric', min: '1' }}\r\n                value={values.cardsNumber}\r\n                error={touched.cardsNumber && Boolean(errors.cardsNumber)}\r\n                helperText={touched.cardsNumber && errors.cardsNumber}\r\n                onChange={handleChange}\r\n                disabled={loading}\r\n              />\r\n            )}\r\n          </Stack>\r\n\r\n          {allInfoIsRequired && (\r\n            <TextField\r\n              {...getFieldProps('cardsUse')}\r\n              value={values?.cardsUse}\r\n              disabled={isSubmitting}\r\n              fullWidth\r\n              select\r\n              label=\"Uso de las tarjetas viabo\"\r\n              placeholder=\"Seleccionar\"\r\n              SelectProps={{\r\n                MenuProps: {\r\n                  sx: { '& .MuiPaper-root': { maxHeight: 260 } }\r\n                }\r\n              }}\r\n              error={touched.cardsUse && Boolean(errors.cardsUse)}\r\n              helperText={touched.cardsUse && errors.cardsUse}\r\n              sx={{\r\n                textTransform: 'capitalize'\r\n              }}\r\n            >\r\n              {CARD_USES.map(option => (\r\n                <MenuItem\r\n                  key={option}\r\n                  value={option}\r\n                  sx={{\r\n                    mx: 1,\r\n                    my: 0.5,\r\n                    borderRadius: 0.75,\r\n                    typography: 'body2',\r\n                    textTransform: 'uppercase'\r\n                  }}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          )}\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                {...getFieldProps('apiRequired')}\r\n                disabled={loading}\r\n                checked={values?.apiRequired}\r\n                value={values?.apiRequired}\r\n              />\r\n            }\r\n            label=\"¿Se requiere API para ligas de cobro? (Pagos a distancia sin tarjeta física, protegido con 3D secure)\"\r\n          />\r\n\r\n          {allInfoIsRequired && (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  {...getFieldProps('customCardsRequired')}\r\n                  disabled={loading}\r\n                  checked={values?.customCardsRequired}\r\n                  value={values?.customCardsRequired}\r\n                />\r\n              }\r\n              label=\"¿Desea que las tarjetas fisicas esten personalizadas? (Grabadas)\"\r\n            />\r\n          )}\r\n\r\n          <LoadingButton\r\n            loading={loading}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            sx={{ textTransform: 'uppercase' }}\r\n          >\r\n            Guardar\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n"],"names":["CARD_USES","commerceInfoSchema","Yup.object","Yup.string","Yup.number","commerceInfoFullSchema","getCommerceValidationByService","resume","initial","schema","allInfoIsRequired","_a","service","CommerceInfo","propTypes","store","PropTypes","shape","propTypesStore","setActualProcess","setLastProcess","initialValues","useMemo","mutate","updateInfoCommerce","isLoading","isUpdatingCommerce","useUpdateCommerceProcess","formik","useFormik","enableReinitialize","validationSchema","onSubmit","values","fiscalName","rfc","commercialName","employeesNumber","branchesNumber","tpvsNumber","apiRequired","cardsUse","cardsNumber","customCardsRequired","resumeAdapter","CommerceUpdateAdapter","services","map","type","toString","cardNumbers","cardUse","personalized","dataAdapted","tradeName","employees","branchOffices","pointSaleTerminal","paymentApi","onSuccess","PROCESS_LIST","COMMERCE_DOCUMENTATION","info","name","COMMERCE_INFO","setSubmitting","onError","handleSubmit","errors","touched","handleChange","isSubmitting","getFieldProps","loading","jsxs","Fragment","Stack","jsx","Typography","Box","TextField","Boolean","xs","md","inputMode","min","MenuProps","sx","maxHeight","textTransform","option","MenuItem","mx","my","borderRadius","typography","FormControlLabel","Checkbox","LoadingButton"],"mappings":"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"}
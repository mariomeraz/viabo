{"version":3,"file":"commerceUpdateAdapter-CObYPfcj.js","sources":["../../../../../frontend/src/app/business/commerce/hooks/useUpdateCommerceProcess.js","../../../../../frontend/src/app/business/commerce/adapters/commerceUpdateAdapter.js"],"sourcesContent":["import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { COMMERCE_KEYS } from '@/app/business/commerce/adapters'\r\nimport { updateCommerceProcess } from '@/app/business/commerce/services'\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useUpdateCommerceProcess = (options = {}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const client = useQueryClient()\r\n  return useMutation({\r\n    mutationFn: updateCommerceProcess,\r\n    onSuccess: () => {\r\n      client.invalidateQueries([COMMERCE_KEYS.COMMERCE_PROCESS])\r\n      enqueueSnackbar('Se actualizo la información del proceso!', {\r\n        variant: 'success'\r\n      })\r\n    },\r\n    onError: error => {\r\n      const message = getErrorAPI(error, 'No se puede agregar la información al proceso')\r\n      enqueueSnackbar(message, {\r\n        variant: error?.status === 500 ? 'error' : 'warning',\r\n        autoHideDuration: 5000\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n}\r\n","export const CommerceUpdateAdapter = (resume, stepUpdate) => {\r\n  const {\r\n    id,\r\n    idUser,\r\n    services,\r\n    fiscalTypePerson,\r\n    fiscalName,\r\n    rfc,\r\n    commercialName,\r\n    employeesNumber,\r\n    branchesNumber,\r\n    tpvsNumber,\r\n    apiRequired,\r\n    cardsNumber,\r\n    cardsUse,\r\n    customCardsRequired,\r\n    files,\r\n    step\r\n  } = resume\r\n\r\n  return {\r\n    commerceId: id,\r\n    fiscalPersonType: fiscalTypePerson,\r\n    fiscalName,\r\n    tradeName: commercialName,\r\n    rfc,\r\n    employees: employeesNumber,\r\n    branchOffices: branchesNumber,\r\n    pointSaleTerminal: tpvsNumber,\r\n    paymentApi: apiRequired ? 1 : 0,\r\n    registerStep: stepUpdate ?? step,\r\n    services\r\n  }\r\n}\r\n"],"names":["useUpdateCommerceProcess","options","enqueueSnackbar","useSnackbar","client","useQueryClient","useMutation","updateCommerceProcess","COMMERCE_KEYS","error","message","getErrorAPI","CommerceUpdateAdapter","resume","stepUpdate","id","idUser","services","fiscalTypePerson","fiscalName","rfc","commercialName","employeesNumber","branchesNumber","tpvsNumber","apiRequired","cardsNumber","cardsUse","customCardsRequired","files","step"],"mappings":"0JAOY,MAACA,EAA2B,CAACC,EAAU,KAAO,CACxD,KAAM,CAAE,gBAAAC,CAAiB,EAAGC,EAAa,EACnCC,EAASC,EAAgB,EAC/B,OAAOC,EAAY,CACjB,WAAYC,EACZ,UAAW,IAAM,CACfH,EAAO,kBAAkB,CAACI,EAAc,gBAAgB,CAAC,EACzDN,EAAgB,2CAA4C,CAC1D,QAAS,SACjB,CAAO,CACF,EACD,QAASO,GAAS,CAChB,MAAMC,EAAUC,EAAYF,EAAO,+CAA+C,EAClFP,EAAgBQ,EAAS,CACvB,SAASD,GAAA,YAAAA,EAAO,UAAW,IAAM,QAAU,UAC3C,iBAAkB,GAC1B,CAAO,CACF,EACD,GAAGR,CACP,CAAG,CACH,EC3BaW,EAAwB,CAACC,EAAQC,IAAe,CAC3D,KAAM,CACJ,GAAAC,EACA,OAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,WAAAC,EACA,IAAAC,EACA,eAAAC,EACA,gBAAAC,EACA,eAAAC,EACA,WAAAC,EACA,YAAAC,EACA,YAAAC,EACA,SAAAC,EACA,oBAAAC,EACA,MAAAC,EACA,KAAAC,CACJ,EAAMjB,EAEJ,MAAO,CACL,WAAYE,EACZ,iBAAkBG,EAClB,WAAAC,EACA,UAAWE,EACX,IAAAD,EACA,UAAWE,EACX,cAAeC,EACf,kBAAmBC,EACnB,WAAYC,EAAc,EAAI,EAC9B,aAAcX,GAAcgB,EAC5B,SAAAb,CACD,CACH"}
{"version":3,"mappings":"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","names":["AssignedTicketsListAdapter","tickets","ticket","fDateTime","GeneratedTicketsListAdapter","TicketConversationAdapter","data","pageParam","total","page","limit","participants","_a","participant","index","name","initials","photo","messages","_b","message","getNameAvatar","fToNowStrict","getGeneratedTicketsSupportList","fetchURL","axios","getAssignedTicketsSupportList","getSupportTicketConversation","ticketId","addMessageToSupportTicketConversation","finishSupportTicket","TICKET_STATUS","getColorTicketStatusById","id","status","useAssignedTicketsTableColumns","theme","useTheme","fontSize","GetFontValue","useMemo","accessorKey","header","enableHiding","size","Cell","cell","column","row","renderedCellValue","jsx","Typography","accessorFn","originalRow","cause","maxSize","original","rowData","Box","display","pt","Label","palette","mode","textTransform","whiteSpace","date","dateTime","useFindAssignedTicketsSupport","options","customError","setCustomError","useState","query","useQuery","TICKETS_SUPPORT_LIST_KEYS","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode","useFindGeneratedTicketsSupport","initialState","ticketSupportListStore","set","get","state","open","isFullScreen","totalTicketsGenerated","totalTicketsAssigned","canClose","useTicketSupportListStore","createStore","useGeneratedTicketsTableColumns","AssignedTicketsSupportTable","isLoading","isError","error","isFetching","refetch","setTotalSupportTicketsAssigned","setTotal","setFullScreenTableSupportList","setFullScreen","setSupportTicketDetails","setOpenTicketConversation","columns","rowSelection","setRowSelection","table","useMaterialTable","enableColumnPinning","enableColumnFilterModes","enableStickyHeader","enableRowVirtualization","enableFacetedValues","enableDensityToggle","enableMultiRowSelection","density","sorting","desc","showAlertBanner","showProgressBars","displayColumnDefOptions","muiTableContainerProps","sx","maxHeight","md","lg","xl","enableColumnResizing","layoutMode","muiTableBodyRowProps","onClick","getToggleSelectedHandler","selected","cursor","backgroundColor","action","hover","positionToolbarAlertBanner","onRowSelectionChange","length","getState","MaterialDataTable","GeneratedTicketsSupportTable","setTotalSupportTicketsGenerated","TicketsSupportList","user","useUser","hasGeneratedTicketsPermission","permissions","includes","TICKET_SUPPORT_PERMISSIONS","GENERATED_TICKETS","hasAssignedTicketsPermission","ASSIGNED_TICKETS","isTableFullScreen","view","setView","hasTwoPermission","totalTickets","Card","boxShadow","customShadows","z24","grey","CardHeader","pb","jsxs","ToggleButtonGroup","event","newView","ToggleButton","width","Stack","TicketSupportConversationDrawer","Lodable","lazy","SupportIncidences","Page","ContainerPage","HeaderPage","href","PATH_DASHBOARD","root","SUPPORT_PATHS","incidences"],"sources":["../../../../../frontend/src/app/support/ticket-support-list/adapters/assigned-tickets-list-adapter.js","../../../../../frontend/src/app/support/ticket-support-list/adapters/generated-tickets-list-adapter.js","../../../../../frontend/src/app/support/ticket-support-list/adapters/ticket-conversation-adapter.js","../../../../../frontend/src/app/support/ticket-support-list/services/TicketsSupportListRepository.js","../../../../../frontend/src/app/support/ticket-support-list/services/getTicketStatus.js","../../../../../frontend/src/app/support/ticket-support-list/hooks/useAssignedTicketsTableColumns.jsx","../../../../../frontend/src/app/support/ticket-support-list/hooks/useFindAssignedTicketsSupport.js","../../../../../frontend/src/app/support/ticket-support-list/hooks/useFindGeneratedTicketsSupport.js","../../../../../frontend/src/app/support/ticket-support-list/store/ticket-support-list-store.js","../../../../../frontend/src/app/support/ticket-support-list/hooks/useGeneratedTicketsTableColumns.jsx","../../../../../frontend/src/app/support/ticket-support-list/components/AssignedTicketsSupportTable.jsx","../../../../../frontend/src/app/support/ticket-support-list/components/GeneratedTicketsSupportTable.jsx","../../../../../frontend/src/app/support/ticket-support-list/components/TicketsSupportList.jsx","../../../../../frontend/src/app/support/ticket-support-list/pages/SupportIncidences.jsx"],"sourcesContent":["import { fDateTime } from '@/shared/utils'\r\n\r\nexport const AssignedTicketsListAdapter = tickets =>\r\n  tickets?.map(ticket => ({\r\n    id: ticket?.id,\r\n    attendant: ticket?.assignedName,\r\n    requester: ticket?.applicantName,\r\n    description: ticket?.description,\r\n    cause: {\r\n      id: ticket?.supportReasonId,\r\n      name: ticket?.supportReasonName\r\n    },\r\n    date: {\r\n      original: ticket?.createDate,\r\n      dateTime: ticket?.createDate ? fDateTime(ticket?.createDate) : ''\r\n    },\r\n    status: {\r\n      id: ticket?.statusId,\r\n      name: ticket?.statusName\r\n    },\r\n    createdBy: {\r\n      id: ticket?.createdByUser\r\n    }\r\n  }))\r\n","import { fDateTime } from '@/shared/utils'\r\n\r\nexport const GeneratedTicketsListAdapter = tickets =>\r\n  tickets?.map(ticket => ({\r\n    id: ticket?.id,\r\n    attendant: ticket?.assignedName,\r\n    requester: ticket?.applicantName,\r\n    description: ticket?.description,\r\n    cause: {\r\n      id: ticket?.supportReasonId,\r\n      name: ticket?.supportReasonName\r\n    },\r\n    date: {\r\n      original: ticket?.createDate,\r\n      dateTime: ticket?.createDate ? fDateTime(ticket?.createDate) : ''\r\n    },\r\n    status: {\r\n      id: ticket?.statusId,\r\n      name: ticket?.statusName\r\n    },\r\n    createdBy: {\r\n      id: ticket?.createdByUser\r\n    }\r\n  }))\r\n","import { fToNowStrict } from '@/shared/utils'\r\nimport { getNameAvatar } from '@/theme/utils'\r\n\r\nexport const TicketConversationAdapter = (data, pageParam) => {\r\n  const { total, page, limit } = data\r\n\r\n  const participants =\r\n    data?.participants?.map((participant, index) => {\r\n      const { name, initials, photo } = participant\r\n      return {\r\n        id: index,\r\n        name,\r\n        initials,\r\n        avatar: photo && photo !== '' ? photo : '/'\r\n      }\r\n    }) || []\r\n\r\n  const messages =\r\n    data?.messages?.map((message, index) => ({\r\n      id: message?.id,\r\n      name: message?.userName,\r\n      initials: getNameAvatar(message?.userName || ''),\r\n      message: message?.description,\r\n      createDate: {\r\n        fToNow: message?.createDate ? fToNowStrict(message?.createDate) : '',\r\n        original: message?.createDate\r\n      },\r\n      my: !!message?.isUserSentMessage,\r\n      attachment: message?.files || [],\r\n      avatar: message?.photo && message?.photo !== '' ? message?.photo : '/',\r\n      isSent: true\r\n    })) || []\r\n\r\n  return {\r\n    results: {\r\n      participants,\r\n      messages\r\n    },\r\n    next: Number(total) > Number(page) * Number(limit) ? pageParam + 1 : undefined,\r\n    canCloseTicket: !!data?.userCanCloseTicket\r\n  }\r\n}\r\n","import { AssignedTicketsListAdapter, GeneratedTicketsListAdapter, TicketConversationAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getGeneratedTicketsSupportList = async () => {\r\n  const fetchURL = new URL('/api/tickets', window.location.origin)\r\n  fetchURL.searchParams.set('created', true)\r\n\r\n  const { data } = await axios.get(fetchURL)\r\n\r\n  return GeneratedTicketsListAdapter(data)\r\n}\r\n\r\nexport const getAssignedTicketsSupportList = async () => {\r\n  const fetchURL = new URL('/api/tickets', window.location.origin)\r\n  fetchURL.searchParams.set('assigned', true)\r\n\r\n  const { data } = await axios.get(fetchURL)\r\n\r\n  return AssignedTicketsListAdapter(data)\r\n}\r\n\r\nexport const getSupportTicketConversation = async (ticketId, page) => {\r\n  // const page = pageParam === 0 ? 1 : pageParam\r\n\r\n  const fetchURL = new URL('/api/tickets/messages', window.location.origin)\r\n  fetchURL.searchParams.set('ticket', ticketId)\r\n  fetchURL.searchParams.set('limit', 10)\r\n  fetchURL.searchParams.set('page', page)\r\n\r\n  const { data } = await axios.get(fetchURL)\r\n  return TicketConversationAdapter(data, page)\r\n}\r\n\r\nexport const addMessageToSupportTicketConversation = async message => {\r\n  const { data } = await axios.post('/api/tickets/message/new', message?.data)\r\n\r\n  return message?.ticketId\r\n}\r\n\r\nexport const finishSupportTicket = async ticket => {\r\n  const { data } = await axios.put(`/api/tickets/ticket/${ticket?.ticketId}/close`)\r\n\r\n  return data\r\n}\r\n","export const TICKET_STATUS = [\r\n  {\r\n    id: '1',\r\n    name: 'Nuevo',\r\n    color: 'info'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Problema',\r\n    color: 'warning'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Resuelto',\r\n    color: 'success'\r\n  }\r\n]\r\n\r\nexport const getIdTicketStatusByName = nameStatus =>\r\n  TICKET_STATUS.find(status => status.name.toLowerCase() === nameStatus?.toLowerCase())?.id\r\n\r\nexport const getColorTicketStatusById = id => TICKET_STATUS.find(status => status.id.toString() === id)?.color || 'info'\r\n","import { useMemo } from 'react'\r\n\r\nimport { Box, Typography, useTheme } from '@mui/material'\r\n\r\nimport { getColorTicketStatusById } from '../services'\r\n\r\nimport { Label } from '@/shared/components/form'\r\nimport GetFontValue from '@/theme/utils/getFontValue'\r\n\r\nexport const useAssignedTicketsTableColumns = () => {\r\n  const theme = useTheme()\r\n  const { fontSize } = GetFontValue('caption')\r\n\r\n  return useMemo(\r\n    () => [\r\n      {\r\n        id: 'id',\r\n        accessorKey: 'id',\r\n        header: 'ID',\r\n        enableHiding: false,\r\n        size: 50,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => (\r\n          <Typography fontWeight={'bold'} variant=\"subtitle2\">\r\n            {renderedCellValue}\r\n          </Typography>\r\n        )\r\n      },\r\n      {\r\n        id: 'cause',\r\n        accessorFn: originalRow => originalRow?.cause?.name || null,\r\n        header: 'Causa',\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return <Typography variant=\"subtitle2\">{renderedCellValue}</Typography>\r\n        }\r\n      },\r\n      {\r\n        id: 'description',\r\n        accessorKey: 'description',\r\n        header: 'Descripción',\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return <Typography variant=\"subtitle2\">{renderedCellValue}</Typography>\r\n        }\r\n      },\r\n      {\r\n        id: 'requester',\r\n        header: 'Solicita',\r\n        accessorKey: 'requester',\r\n        maxSize: 200,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n\r\n          return <Typography variant=\"subtitle2\">{renderedCellValue}</Typography>\r\n        }\r\n      },\r\n      {\r\n        id: 'status',\r\n        accessorFn: originalRow => originalRow?.status?.name || null,\r\n        header: 'Estado',\r\n        maxSize: 120,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n\r\n          return (\r\n            <Box sx={{ display: 'flex', pt: 1 }}>\r\n              <Label\r\n                variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n                color={getColorTicketStatusById(rowData?.status?.id) || 'primary'}\r\n                sx={{ textTransform: 'capitalize', whiteSpace: 'nowrap', fontSize }}\r\n              >\r\n                {rowData?.status?.name}\r\n              </Label>\r\n            </Box>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        id: 'date',\r\n        accessorFn: originalRow => originalRow?.date?.original || null,\r\n        header: 'Fecha',\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return <Typography variant=\"subtitle2\">{rowData?.date?.dateTime}</Typography>\r\n        }\r\n      }\r\n    ],\r\n    [theme.palette.mode]\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { TICKETS_SUPPORT_LIST_KEYS } from '../adapters'\r\nimport { getAssignedTicketsSupportList } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindAssignedTicketsSupport = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [TICKETS_SUPPORT_LIST_KEYS.ASSIGNED_LIST],\r\n    queryFn: getAssignedTicketsSupportList,\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener la lista de tickets asignados. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { TICKETS_SUPPORT_LIST_KEYS } from '../adapters'\r\nimport { getGeneratedTicketsSupportList } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindGeneratedTicketsSupport = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [TICKETS_SUPPORT_LIST_KEYS.GENERATED_LIST],\r\n    queryFn: getGeneratedTicketsSupportList,\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener la lista de tickets generados. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  ticket: null,\r\n  totalTicketsGenerated: 0,\r\n  totalTicketsAssigned: 0,\r\n  isTableFullScreen: false,\r\n  openTicketConversation: false,\r\n  canCloseTicket: false\r\n}\r\nconst ticketSupportListStore = (set, get) => ({\r\n  ...initialState,\r\n  setSupportTicketDetails: ticket => {\r\n    set(\r\n      state => ({\r\n        ticket\r\n      }),\r\n      false,\r\n      'SET_SUPPORT_TICKET_DETAILS'\r\n    )\r\n  },\r\n  setOpenTicketConversation: open => {\r\n    set(\r\n      state => ({\r\n        openTicketConversation: open\r\n      }),\r\n      false,\r\n      'SET_SUPPORT_TICKET_CONVERSATION'\r\n    )\r\n  },\r\n  setFullScreenTableSupportList: isFullScreen => {\r\n    set(\r\n      state => ({\r\n        isTableFullScreen: isFullScreen\r\n      }),\r\n      false,\r\n      'SET_FULL_SCREEN_TABLE_SUPPORT_LIST'\r\n    )\r\n  },\r\n  setTotalSupportTicketsGenerated: totalTicketsGenerated => {\r\n    set(\r\n      state => ({\r\n        totalTicketsGenerated\r\n      }),\r\n      false,\r\n      'SET_TOTAL_SUPPORT_TICKETS_GENERATED'\r\n    )\r\n  },\r\n  setTotalSupportTicketsAssigned: totalTicketsAssigned => {\r\n    set(\r\n      state => ({\r\n        totalTicketsAssigned\r\n      }),\r\n      false,\r\n      'SET_TOTAL_SUPPORT_TICKETS_ASSIGNED'\r\n    )\r\n  },\r\n  setCanCloseTicket: canClose => {\r\n    set(\r\n      state => ({\r\n        canCloseTicket: canClose\r\n      }),\r\n      false,\r\n      'SET_CAN_CLOSE_SUPPORT_TICKET'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useTicketSupportListStore = createStore(ticketSupportListStore)\r\n","import { useMemo } from 'react'\r\n\r\nimport { Box, Typography, useTheme } from '@mui/material'\r\n\r\nimport { getColorTicketStatusById } from '../services'\r\n\r\nimport { Label } from '@/shared/components/form'\r\nimport GetFontValue from '@/theme/utils/getFontValue'\r\n\r\nexport const useGeneratedTicketsTableColumns = () => {\r\n  const theme = useTheme()\r\n  const { fontSize } = GetFontValue('caption')\r\n\r\n  return useMemo(\r\n    () => [\r\n      {\r\n        id: 'id',\r\n        accessorKey: 'id',\r\n        header: 'ID',\r\n        enableHiding: false,\r\n        size: 50,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => (\r\n          <Typography fontWeight={'bold'} variant=\"subtitle2\">\r\n            {renderedCellValue}\r\n          </Typography>\r\n        )\r\n      },\r\n      {\r\n        id: 'cause',\r\n        accessorFn: originalRow => originalRow?.cause?.name || null,\r\n        header: 'Causa',\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return <Typography variant=\"subtitle2\">{renderedCellValue}</Typography>\r\n        }\r\n      },\r\n      {\r\n        id: 'description',\r\n        accessorKey: 'description',\r\n        header: 'Descripción',\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return <Typography variant=\"subtitle2\">{renderedCellValue}</Typography>\r\n        }\r\n      },\r\n      {\r\n        id: 'attendant',\r\n        header: 'Atiende',\r\n        accessorKey: 'attendant',\r\n        maxSize: 200,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n\r\n          return <Typography variant=\"subtitle2\">{renderedCellValue}</Typography>\r\n        }\r\n      },\r\n\r\n      {\r\n        id: 'status',\r\n        accessorFn: originalRow => originalRow?.status?.name || null,\r\n        header: 'Estado',\r\n        maxSize: 120,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n\r\n          return (\r\n            <Box sx={{ display: 'flex', pt: 1 }}>\r\n              <Label\r\n                variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n                color={getColorTicketStatusById(rowData?.status?.id) || 'primary'}\r\n                sx={{ textTransform: 'capitalize', whiteSpace: 'nowrap', fontSize }}\r\n              >\r\n                {rowData?.status?.name}\r\n              </Label>\r\n            </Box>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        id: 'date',\r\n        accessorFn: originalRow => originalRow?.date?.original || null,\r\n        header: 'Fecha',\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return <Typography variant=\"subtitle2\">{rowData?.date?.dateTime}</Typography>\r\n        }\r\n      }\r\n    ],\r\n    [theme.palette.mode]\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useAssignedTicketsTableColumns, useFindAssignedTicketsSupport } from '../hooks'\r\nimport { useTicketSupportListStore } from '../store'\r\n\r\nimport { MaterialDataTable } from '@/shared/components/dataTables'\r\nimport { useMaterialTable } from '@/shared/hooks'\r\n\r\nexport const AssignedTicketsSupportTable = () => {\r\n  const { data: tickets, isLoading, isError, error, isFetching, refetch } = useFindAssignedTicketsSupport()\r\n\r\n  const {\r\n    setTotalSupportTicketsAssigned: setTotal,\r\n    setFullScreenTableSupportList: setFullScreen,\r\n    setSupportTicketDetails,\r\n    setOpenTicketConversation\r\n  } = useTicketSupportListStore()\r\n\r\n  const columns = useAssignedTicketsTableColumns()\r\n\r\n  const [rowSelection, setRowSelection] = useState({})\r\n\r\n  const table = useMaterialTable(isError, error, {\r\n    columns,\r\n    data: tickets || [],\r\n    enableColumnPinning: true,\r\n    enableColumnFilterModes: true,\r\n    enableStickyHeader: true,\r\n    enableRowVirtualization: true,\r\n    enableFacetedValues: true,\r\n    enableDensityToggle: false,\r\n    enableMultiRowSelection: false,\r\n    initialState: {\r\n      density: 'compact',\r\n      sorting: [\r\n        {\r\n          id: 'date',\r\n          desc: true\r\n        }\r\n      ]\r\n    },\r\n    state: {\r\n      isLoading,\r\n      showAlertBanner: isError,\r\n      showProgressBars: isFetching,\r\n      rowSelection\r\n    },\r\n    displayColumnDefOptions: {\r\n      'mrt-row-actions': {\r\n        header: 'Acciones',\r\n        maxSize: 80\r\n      }\r\n    },\r\n    muiTableContainerProps: { sx: { maxHeight: { md: '350px', lg: '450px', xl: '700px' } } },\r\n    enableColumnResizing: true,\r\n    layoutMode: 'grid',\r\n\r\n    muiTableBodyRowProps: ({ row }) => ({\r\n      onClick: () => {\r\n        row.getToggleSelectedHandler()\r\n        setSupportTicketDetails(row?.original)\r\n        setOpenTicketConversation(true)\r\n      },\r\n      selected: rowSelection[row.id],\r\n      sx: theme => ({\r\n        cursor: 'pointer',\r\n        backgroundColor: 'inherit',\r\n        '&.Mui-selected': {\r\n          backgroundColor: theme.palette.action.selected,\r\n          '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n          }\r\n        }\r\n      })\r\n    }),\r\n    positionToolbarAlertBanner: 'none',\r\n    onRowSelectionChange: setRowSelection\r\n  })\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (tickets?.length) {\r\n      setTotal(tickets?.length)\r\n    } else {\r\n      setTotal(0)\r\n    }\r\n  }, [tickets])\r\n\r\n  useEffect(() => {\r\n    setFullScreen(table.getState().isFullScreen)\r\n  }, [table.getState().isFullScreen])\r\n\r\n  return <MaterialDataTable table={table} />\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useFindGeneratedTicketsSupport, useGeneratedTicketsTableColumns } from '../hooks'\r\nimport { useTicketSupportListStore } from '../store'\r\n\r\nimport { MaterialDataTable } from '@/shared/components/dataTables'\r\nimport { useMaterialTable } from '@/shared/hooks'\r\n\r\nexport const GeneratedTicketsSupportTable = () => {\r\n  const { data: tickets, isLoading, isError, error, isFetching, refetch } = useFindGeneratedTicketsSupport()\r\n  const {\r\n    setTotalSupportTicketsGenerated: setTotal,\r\n    setFullScreenTableSupportList: setFullScreen,\r\n    setSupportTicketDetails,\r\n    setOpenTicketConversation\r\n  } = useTicketSupportListStore()\r\n\r\n  const columns = useGeneratedTicketsTableColumns()\r\n\r\n  const [rowSelection, setRowSelection] = useState({})\r\n\r\n  const table = useMaterialTable(isError, error, {\r\n    columns,\r\n    data: tickets || [],\r\n    enableColumnPinning: true,\r\n    enableColumnFilterModes: true,\r\n    enableStickyHeader: true,\r\n    enableRowVirtualization: true,\r\n    enableFacetedValues: true,\r\n    enableDensityToggle: false,\r\n    enableMultiRowSelection: false,\r\n    initialState: {\r\n      density: 'compact',\r\n      sorting: [\r\n        {\r\n          id: 'date',\r\n          desc: true\r\n        }\r\n      ]\r\n    },\r\n    state: {\r\n      isLoading,\r\n      showAlertBanner: isError,\r\n      showProgressBars: isFetching,\r\n      rowSelection\r\n    },\r\n    displayColumnDefOptions: {\r\n      'mrt-row-actions': {\r\n        header: 'Acciones',\r\n        maxSize: 80\r\n      }\r\n    },\r\n    muiTableContainerProps: { sx: { maxHeight: { md: '350px', lg: '450px', xl: '700px' } } },\r\n    enableColumnResizing: true,\r\n    layoutMode: 'grid',\r\n\r\n    muiTableBodyRowProps: ({ row }) => ({\r\n      onClick: () => {\r\n        row.getToggleSelectedHandler()\r\n        setSupportTicketDetails(row?.original)\r\n        setOpenTicketConversation(true)\r\n      },\r\n      sx: theme => ({\r\n        cursor: 'pointer',\r\n        backgroundColor: 'inherit',\r\n        '&.Mui-selected': {\r\n          backgroundColor: theme.palette.action.selected,\r\n          '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n          }\r\n        }\r\n      })\r\n    }),\r\n    positionToolbarAlertBanner: 'none',\r\n    onRowSelectionChange: setRowSelection\r\n  })\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (tickets?.length) {\r\n      setTotal(tickets?.length)\r\n    } else {\r\n      setTotal(0)\r\n    }\r\n  }, [tickets])\r\n\r\n  useEffect(() => {\r\n    setFullScreen(table.getState().isFullScreen)\r\n  }, [table.getState().isFullScreen])\r\n\r\n  return <MaterialDataTable table={table} />\r\n}\r\n","import { useEffect, useMemo, useState } from 'react'\r\n\r\nimport { Card, CardHeader, Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material'\r\n\r\nimport { AssignedTicketsSupportTable } from './AssignedTicketsSupportTable'\r\nimport { GeneratedTicketsSupportTable } from './GeneratedTicketsSupportTable'\r\n\r\nimport { TICKET_SUPPORT_PERMISSIONS } from '../../shared/permissions'\r\nimport { useTicketSupportListStore } from '../store'\r\n\r\nimport { useUser } from '@/shared/hooks'\r\n\r\nconst TicketsSupportList = () => {\r\n  const user = useUser()\r\n  const hasGeneratedTicketsPermission = user?.permissions.includes(TICKET_SUPPORT_PERMISSIONS.GENERATED_TICKETS)\r\n  const hasAssignedTicketsPermission = user?.permissions.includes(TICKET_SUPPORT_PERMISSIONS.ASSIGNED_TICKETS)\r\n  const totalTicketsGenerated = useTicketSupportListStore(state => state.totalTicketsGenerated)\r\n  const totalTicketsAssigned = useTicketSupportListStore(state => state.totalTicketsAssigned)\r\n  const isFullScreen = useTicketSupportListStore(state => state.isTableFullScreen)\r\n\r\n  const [view, setView] = useState(null)\r\n\r\n  const hasTwoPermission = hasGeneratedTicketsPermission && hasAssignedTicketsPermission\r\n\r\n  const message = useMemo(\r\n    () => (view === TICKET_SUPPORT_PERMISSIONS.GENERATED_TICKETS ? 'Generados' : 'Asignados'),\r\n    [view]\r\n  )\r\n\r\n  const totalTickets = useMemo(\r\n    () => (view === TICKET_SUPPORT_PERMISSIONS.GENERATED_TICKETS ? totalTicketsGenerated : totalTicketsAssigned),\r\n    [view, totalTicketsGenerated, totalTicketsAssigned]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (hasTwoPermission) {\r\n      return setView(TICKET_SUPPORT_PERMISSIONS.ASSIGNED_TICKETS)\r\n    }\r\n    if (hasGeneratedTicketsPermission) {\r\n      return setView(TICKET_SUPPORT_PERMISSIONS.GENERATED_TICKETS)\r\n    }\r\n    if (hasAssignedTicketsPermission) {\r\n      return setView(TICKET_SUPPORT_PERMISSIONS.ASSIGNED_TICKETS)\r\n    }\r\n    return setView(TICKET_SUPPORT_PERMISSIONS.GENERATED_TICKETS)\r\n  }, [])\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      sx={theme =>\r\n        !isFullScreen\r\n          ? {\r\n              boxShadow: theme.customShadows.z24,\r\n              backgroundColor: theme.palette.mode === 'light' ? 'inherit' : theme.palette.grey[500_12]\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <CardHeader\r\n        sx={theme => ({\r\n          pb: 2\r\n        })}\r\n        title={`Lista de Tickets ${message}`}\r\n        subheader={`Tienes ${totalTickets || 0} Tickets ${message}`}\r\n        action={\r\n          hasTwoPermission ? (\r\n            <ToggleButtonGroup\r\n              color=\"primary\"\r\n              value={view}\r\n              exclusive\r\n              onChange={(event, newView) => {\r\n                if (newView) {\r\n                  setView(newView)\r\n                }\r\n              }}\r\n              aria-label=\"Ticket View\"\r\n              sx={{ backgroundColor: 'inherit' }}\r\n            >\r\n              <ToggleButton fullWidth sx={{ width: 1 }} value={TICKET_SUPPORT_PERMISSIONS.ASSIGNED_TICKETS}>\r\n                <Stack direction={'row'} spacing={1} alignItems={'center'}>\r\n                  <Typography variant=\"subtitle2\">Asignados</Typography>\r\n                </Stack>\r\n              </ToggleButton>\r\n              <ToggleButton fullWidth sx={{ width: 1 }} value={TICKET_SUPPORT_PERMISSIONS.GENERATED_TICKETS}>\r\n                <Stack direction={'row'} spacing={1} alignItems={'center'}>\r\n                  <Typography variant=\"subtitle2\">Generados</Typography>\r\n                </Stack>\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          ) : (\r\n            <></>\r\n          )\r\n        }\r\n      />\r\n      {view === TICKET_SUPPORT_PERMISSIONS.GENERATED_TICKETS && <GeneratedTicketsSupportTable />}\r\n      {view === TICKET_SUPPORT_PERMISSIONS.ASSIGNED_TICKETS && <AssignedTicketsSupportTable />}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TicketsSupportList\r\n","import { lazy } from 'react'\r\n\r\nimport { SUPPORT_PATHS } from '../../shared/routes/support-paths'\r\nimport TicketsSupportList from '../components/TicketsSupportList'\r\n\r\nimport { PATH_DASHBOARD } from '@/routes'\r\nimport { Page } from '@/shared/components/containers'\r\nimport { ContainerPage } from '@/shared/components/containers/ContainerPage'\r\nimport { HeaderPage } from '@/shared/components/layout'\r\nimport { Lodable } from '@/shared/components/lodables'\r\n\r\nconst TicketSupportConversationDrawer = Lodable(\r\n  lazy(() => import('../components/conversation/TicketSupportConversationDrawer'))\r\n)\r\n\r\nexport const SupportIncidences = () => (\r\n  //  const { data, isLoading } = useFindProfiles()\r\n\r\n  <Page title=\"Incidencias & Consultas\">\r\n    <ContainerPage>\r\n      <HeaderPage\r\n        name={'Incidencias & Consultas'}\r\n        links={[\r\n          { name: 'Inicio', href: PATH_DASHBOARD.root },\r\n          { name: 'Soporte', href: SUPPORT_PATHS.incidences },\r\n          { name: 'Incidencias' }\r\n        ]}\r\n      />\r\n      <TicketsSupportList />\r\n      <TicketSupportConversationDrawer />\r\n    </ContainerPage>\r\n  </Page>\r\n)\r\n"],"file":"assets/js/SupportIncidences--7t481Hh.js"}
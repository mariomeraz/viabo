{"version":3,"file":"useFindSpeiThirdAccountsList-B8tgoWra.js","sources":["../../../../../frontend/src/app/business/viabo-spei/third-accounts/adapters/spei-banks-adapter.js","../../../../../frontend/src/app/business/viabo-spei/third-accounts/adapters/spei-third-accounts-keys.js","../../../../../frontend/src/app/business/viabo-spei/third-accounts/adapters/spei-third-accounts-list-adapter.js","../../../../../frontend/src/app/business/viabo-spei/third-accounts/services/SpeiThirdAccountsRepository.js","../../../../../frontend/src/app/business/viabo-spei/third-accounts/hooks/useFindSpeiThirdAccountsList.js"],"sourcesContent":["import { convertCatalogToReactSelect } from '@/shared/utils'\r\n\r\nexport const SpeiBanksAdapter = banks => {\r\n  const banksAdapted =\r\n    banks?.map(bank => ({\r\n      id: bank?.id,\r\n      stpCode: bank?.code,\r\n      name: `${bank?.shortName} - ${bank?.code}`,\r\n      commercialName: bank?.name,\r\n      status: bank?.active === '1'\r\n    })) || []\r\n\r\n  return convertCatalogToReactSelect(banksAdapted, 'id', 'name', 'status')\r\n}\r\n","export const SPEI_THIRD_ACCOUNTS_KEYS = {\r\n  THIRD_ACCOUNTS_LIST: 'spei-third-accounts-list',\r\n  BANKS_LIST: 'spei-banks-list'\r\n}\r\n","import { convertCatalogToReactSelect } from '@/shared/utils'\r\n\r\nexport const SpeiThirdAccountsListAdapter = accounts => {\r\n  const accountsAdapted =\r\n    accounts?.map(account => ({\r\n      id: account?.id,\r\n      name: account?.alias && account?.alias?.trim() !== '' ? account?.alias : account?.beneficiary,\r\n      beneficiary: account?.beneficiary,\r\n      alias: account?.alias,\r\n      clabe: account?.interbankCLABE,\r\n      clabeHidden: `${account?.interbankCLABE?.replace(/.(?=.{4})/g, '*')?.slice(-8)}`,\r\n      email: account?.email,\r\n      phone: account?.phone,\r\n      bank: { name: account?.shorNameBank, id: account?.bankId },\r\n      status: account?.active === '1',\r\n      date: account?.date,\r\n      rfc: account?.rfc\r\n    })) || []\r\n\r\n  return convertCatalogToReactSelect(accountsAdapted, 'id', 'name', 'status')\r\n}\r\n","import { SpeiBanksAdapter, SpeiThirdAccountsListAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getSpeiThirdAccountsList = async () => {\r\n  const { data } = await axios.get('/api/spei/external-accounts')\r\n  return SpeiThirdAccountsListAdapter(data)\r\n}\r\n\r\nexport const newSpeiThirdAccount = async account => {\r\n  const { data } = await axios.post('/api/spei/external-account/new', account)\r\n  return data\r\n}\r\n\r\nexport const getSpeiBanks = async () => {\r\n  const { data } = await axios.get('/api/spei/banks')\r\n  return SpeiBanksAdapter(data)\r\n}\r\n\r\nexport const deleteSpeiThirdAccount = async account => {\r\n  const { data } = await axios.put('/api/spei/external-account/disable', account)\r\n  return data\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { SPEI_THIRD_ACCOUNTS_KEYS } from '../adapters'\r\nimport { getSpeiThirdAccountsList } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindSpeiThirdAccountsList = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [SPEI_THIRD_ACCOUNTS_KEYS.THIRD_ACCOUNTS_LIST],\r\n    queryFn: getSpeiThirdAccountsList,\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener la lista de cuentas de terceros. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n"],"names":["SpeiBanksAdapter","banks","banksAdapted","bank","convertCatalogToReactSelect","SPEI_THIRD_ACCOUNTS_KEYS","SpeiThirdAccountsListAdapter","accounts","accountsAdapted","account","_a","_c","_b","getSpeiThirdAccountsList","data","axios","newSpeiThirdAccount","getSpeiBanks","deleteSpeiThirdAccount","useFindSpeiThirdAccountsList","options","customError","setCustomError","useState","query","useQuery","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode"],"mappings":"0JAEO,MAAMA,EAAmBC,GAAS,CACvC,MAAMC,GACJD,GAAA,YAAAA,EAAO,IAAIE,IAAS,CAClB,GAAIA,GAAA,YAAAA,EAAM,GACV,QAASA,GAAA,YAAAA,EAAM,KACf,KAAM,GAAGA,GAAA,YAAAA,EAAM,SAAS,MAAMA,GAAA,YAAAA,EAAM,IAAI,GACxC,eAAgBA,GAAA,YAAAA,EAAM,KACtB,QAAQA,GAAA,YAAAA,EAAM,UAAW,GAC1B,MAAM,CAAE,EAEX,OAAOC,EAA4BF,EAAc,KAAM,OAAQ,QAAQ,CACzE,ECbaG,EAA2B,CACtC,oBAAqB,2BACrB,WAAY,iBACd,ECDaC,EAA+BC,GAAY,CACtD,MAAMC,GACJD,GAAA,YAAAA,EAAU,IAAIE,GAAY,WAAA,OACxB,GAAIA,GAAA,YAAAA,EAAS,GACb,KAAMA,GAAA,MAAAA,EAAS,SAASC,EAAAD,GAAA,YAAAA,EAAS,QAAT,YAAAC,EAAgB,UAAW,GAAKD,GAAA,YAAAA,EAAS,MAAQA,GAAA,YAAAA,EAAS,YAClF,YAAaA,GAAA,YAAAA,EAAS,YACtB,MAAOA,GAAA,YAAAA,EAAS,MAChB,MAAOA,GAAA,YAAAA,EAAS,eAChB,YAAa,IAAGE,GAAAC,EAAAH,GAAA,YAAAA,EAAS,iBAAT,YAAAG,EAAyB,QAAQ,aAAc,OAA/C,YAAAD,EAAqD,MAAM,GAAG,GAC9E,MAAOF,GAAA,YAAAA,EAAS,MAChB,MAAOA,GAAA,YAAAA,EAAS,MAChB,KAAM,CAAE,KAAMA,GAAA,YAAAA,EAAS,aAAc,GAAIA,GAAA,YAAAA,EAAS,MAAQ,EAC1D,QAAQA,GAAA,YAAAA,EAAS,UAAW,IAC5B,KAAMA,GAAA,YAAAA,EAAS,KACf,IAAKA,GAAA,YAAAA,EAAS,GACf,MAAM,CAAE,EAEX,OAAOL,EAA4BI,EAAiB,KAAM,OAAQ,QAAQ,CAC5E,EChBaK,EAA2B,SAAY,CAClD,KAAM,CAAE,KAAAC,CAAM,EAAG,MAAMC,EAAM,IAAI,6BAA6B,EAC9D,OAAOT,EAA6BQ,CAAI,CAC1C,EAEaE,EAAsB,MAAMP,GAAW,CAClD,KAAM,CAAE,KAAAK,CAAI,EAAK,MAAMC,EAAM,KAAK,iCAAkCN,CAAO,EAC3E,OAAOK,CACT,EAEaG,EAAe,SAAY,CACtC,KAAM,CAAE,KAAAH,CAAM,EAAG,MAAMC,EAAM,IAAI,iBAAiB,EAClD,OAAOf,EAAiBc,CAAI,CAC9B,EAEaI,EAAyB,MAAMT,GAAW,CACrD,KAAM,CAAE,KAAAK,CAAI,EAAK,MAAMC,EAAM,IAAI,qCAAsCN,CAAO,EAC9E,OAAOK,CACT,ECZaK,EAA+B,CAACC,EAAU,KAAO,CAC5D,KAAM,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAS,IAAI,EAE7CC,EAAQC,EAAS,CACrB,SAAU,CAACpB,EAAyB,mBAAmB,EACvD,QAASQ,EACT,qBAAsB,GACtB,MAAO,GACP,UAAW,IACX,GAAGO,CACP,CAAG,EAEDM,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAIF,GAAA,MAAAA,EAAO,QAAS,CAClB,MAAMG,EAAeC,EACnBJ,EAAM,MACN,8FACD,EACDF,EAAeK,CAAY,EAC3BE,EAAM,MAAMF,EAAc,CACxB,KAAMG,EAA+BN,EAAM,KAAK,CACxD,CAAO,CACF,CACF,EAAE,CAACA,EAAM,QAASA,EAAM,KAAK,CAAC,EAExB,CACL,GAAGA,EACH,MAAOH,GAAe,IACvB,CACH"}
{"version":3,"file":"ConciliateModal-Fn3UMk8Q.js","sources":["../../../../../frontend/src/app/business/funding-orders/adapters/conciliate-funding-order-adapter.js","../../../../../frontend/src/app/business/funding-orders/hooks/useConciliateFundingOrder.js","../../../../../frontend/src/app/business/funding-orders/hooks/useFindConciliateMovementsByOrder.js","../../../../../frontend/src/app/business/funding-orders/components/ConciliateModal.jsx"],"sourcesContent":["export const ConciliateFundingOrderAdapter = (fundingOrder, movement) => ({\r\n  fundingOrderId: fundingOrder?.id,\r\n  conciliationNumber: movement?.id\r\n})\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { FUNDING_ORDERS_KEYS } from '../adapters'\r\nimport { conciliateFundingOrder } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useConciliateFundingOrder = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const conciliateOrder = useMutation(conciliateFundingOrder, options)\r\n  const conciliate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(conciliateOrder.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Conciliando orden de fondeo ...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([FUNDING_ORDERS_KEYS.LIST])\r\n            onSuccess(data)\r\n            return 'Se creó la conciliación con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...conciliateOrder,\r\n    mutate: conciliate\r\n  }\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { FUNDING_ORDERS_KEYS } from '../adapters'\r\nimport { getMovementsByFundingOrder } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindConciliateMovementsByOrder = (order, options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const fundingOrders = useQuery([FUNDING_ORDERS_KEYS.MOVEMENTS, order?.id], () => getMovementsByFundingOrder(order), {\r\n    staleTime: 60000,\r\n    refetchOnWindowFocus: false,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'No se puede obtener los movimientos de la cuenta')\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...fundingOrders,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { Alert, Box, Card, Stack, Typography } from '@mui/material'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { ConciliateFundingOrderAdapter } from '../adapters'\r\nimport { useConciliateFundingOrder, useFindConciliateMovementsByOrder } from '../hooks'\r\nimport { useFundingOrderStore } from '../store'\r\n\r\nimport { getCardTypeByName } from '@/app/shared/services'\r\nimport { MaterialDataTable, SearchAction } from '@/shared/components/dataTables'\r\nimport { Modal } from '@/shared/components/modals'\r\nimport { useMaterialTable } from '@/shared/hooks'\r\n\r\nconst ConciliateModal = () => {\r\n  const openConciliateModal = useFundingOrderStore(state => state.openConciliateModal)\r\n  const setOpenConciliateModal = useFundingOrderStore(state => state.setOpenConciliateModal)\r\n  const fundingOrder = useFundingOrderStore(state => state.fundingOrder)\r\n  const setFundingOrder = useFundingOrderStore(state => state.setFundingOrder)\r\n  const { mutate, isLoading } = useConciliateFundingOrder()\r\n\r\n  const columns = [\r\n    {\r\n      accessorKey: 'description', // access nested data with dot notation\r\n      header: 'Movimiento',\r\n      size: 100\r\n    },\r\n    {\r\n      accessorKey: 'date', // access nested data with dot notation\r\n      header: 'Fecha',\r\n      size: 100\r\n    },\r\n    {\r\n      accessorKey: 'amountFormat', // access nested data with dot notation\r\n      header: 'Monto',\r\n      size: 100\r\n    }\r\n  ]\r\n\r\n  const {\r\n    data: movements,\r\n    isError,\r\n    error,\r\n    isLoading: isLoadingMovements,\r\n    isFetching\r\n  } = useFindConciliateMovementsByOrder(fundingOrder, {\r\n    enabled: !!fundingOrder\r\n  })\r\n\r\n  const cardLogo = getCardTypeByName(fundingOrder?.paymentProcessorName)\r\n  const CardLogoComponent = cardLogo?.component\r\n\r\n  const table = useMaterialTable(isError, error, {\r\n    columns,\r\n    data: movements?.movements || [],\r\n    enableColumnPinning: true,\r\n    enableStickyHeader: true,\r\n    enableRowVirtualization: true,\r\n    enableFacetedValues: true,\r\n    enableRowSelection: true,\r\n    enableMultiRowSelection: false,\r\n    positionActionsColumn: 'last',\r\n    enableDensityToggle: false,\r\n    enableColumnResizing: false,\r\n    initialState: {\r\n      density: 'compact',\r\n      sorting: [\r\n        {\r\n          id: 'date',\r\n          desc: true\r\n        }\r\n      ]\r\n    },\r\n    state: {\r\n      isLoading: isLoadingMovements,\r\n      showAlertBanner: isError,\r\n      showProgressBars: isFetching\r\n    },\r\n    muiTablePaperProps: {\r\n      elevation: 0,\r\n      sx: theme => ({\r\n        borderRadius: 0,\r\n        backgroundColor: theme.palette.background.neutral\r\n      })\r\n    },\r\n    muiBottomToolbarProps: {\r\n      sx: theme => ({\r\n        backgroundColor: theme.palette.background.neutral\r\n      })\r\n    },\r\n    muiTopToolbarProps: {\r\n      sx: theme => ({\r\n        backgroundColor: theme.palette.background.neutral\r\n      })\r\n    },\r\n    displayColumnDefOptions: {\r\n      'mrt-row-select': {\r\n        maxSize: 10,\r\n        header: ''\r\n      }\r\n    },\r\n    renderToolbarInternalActions: ({ table }) => (\r\n      <Box>\r\n        <SearchAction table={table} />\r\n      </Box>\r\n    ),\r\n    muiTableContainerProps: { sx: { maxHeight: 'md' } }\r\n  })\r\n\r\n  const selectedMovements = table?.getSelectedRowModel().flatRows?.map(row => row.original) ?? []\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedMovements?.length > 0) {\r\n      const data = ConciliateFundingOrderAdapter(fundingOrder, selectedMovements[0])\r\n      mutate(data, {\r\n        onSuccess: () => {\r\n          handleClose()\r\n        },\r\n        onError: () => {}\r\n      })\r\n    } else {\r\n      toast.warn('Debe seleccionar un movimiento para conciliar la orden de fondeo')\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpenConciliateModal(false)\r\n    setFundingOrder(null)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={handleClose}\r\n      onSuccess={handleSubmit}\r\n      isSubmitting={isLoading}\r\n      fullWidth\r\n      scrollType=\"body\"\r\n      title={'Conciliar'}\r\n      textButtonSuccess=\"Conciliar\"\r\n      open={openConciliateModal}\r\n    >\r\n      <Stack spacing={3} sx={{ py: 3 }}>\r\n        <Alert\r\n          severity=\"info\"\r\n          sx={{\r\n            display: 'flex',\r\n            flexGrow: 1,\r\n            '& .MuiAlert-message': { display: 'flex', flexGrow: 1 }\r\n          }}\r\n        >\r\n          <Stack flexGrow={1} spacing={2} direction={'row'} justifyContent={'space-between'} alignItems={'center'}>\r\n            <Stack>\r\n              <Typography variant=\"subtitle2\">Orden #{fundingOrder?.referenceNumber}</Typography>\r\n              <Typography variant=\"subtitle2\" fontWeight={'bold'}>\r\n                {fundingOrder?.amount}\r\n              </Typography>\r\n            </Stack>\r\n            <Stack>{cardLogo && <CardLogoComponent sx={{ width: 30, height: 30 }} />}</Stack>\r\n          </Stack>\r\n        </Alert>\r\n        <Stack>\r\n          <Card>\r\n            <MaterialDataTable table={table} />\r\n          </Card>\r\n        </Stack>\r\n      </Stack>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConciliateModal\r\n"],"names":["ConciliateFundingOrderAdapter","fundingOrder","movement","useConciliateFundingOrder","options","client","useQueryClient","conciliateOrder","useMutation","conciliateFundingOrder","formData","onSuccess","onError","mutationOptions","toast","data","FUNDING_ORDERS_KEYS","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode","useFindConciliateMovementsByOrder","order","customError","setCustomError","useState","useQuery","getMovementsByFundingOrder","errorMessage","ConciliateModal","openConciliateModal","useFundingOrderStore","state","setOpenConciliateModal","setFundingOrder","mutate","isLoading","columns","accessorKey","header","size","movements","isError","isLoadingMovements","isFetching","enabled","cardLogo","getCardTypeByName","paymentProcessorName","CardLogoComponent","component","table","useMaterialTable","enableColumnPinning","enableStickyHeader","enableRowVirtualization","enableFacetedValues","enableRowSelection","enableMultiRowSelection","positionActionsColumn","enableDensityToggle","enableColumnResizing","initialState","density","sorting","id","desc","showAlertBanner","showProgressBars","muiTablePaperProps","elevation","sx","theme","borderRadius","backgroundColor","palette","background","neutral","muiBottomToolbarProps","muiTopToolbarProps","displayColumnDefOptions","maxSize","renderToolbarInternalActions","jsx","Box","SearchAction","muiTableContainerProps","maxHeight","selectedMovements","getSelectedRowModel","flatRows","map","row","original","handleSubmit","length","handleClose","warn","Modal","jsxs","Stack","py","Alert","display","flexGrow","Typography","referenceNumber","amount","width","height","Card","MaterialDataTable"],"mappings":"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"}
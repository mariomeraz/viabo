{"version":3,"mappings":"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","names":["CATALOGS_SHARED_KEYS","ProfilesAdapter","profiles","profilesAdapted","profile","convertCatalogToReactSelect","getProfilesCatalog","data","axios","useFindProfiles","options","customError","setCustomError","useState","query","useQuery","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode","initialState","causesStore","set","get","open","state","cause","useCausesStore","createStore","NewCauseForm","Lodable","lazy","NewCauseDrawer","openNewCause","setOpenNewCause","setCause","handleClose","jsx","RightPanel","Stack","Typography","propTypes","PropTypes","any","CAUSES_KEYS","CausesListAdapter","causes","_a","NewCauseAdapter","_b","useCausesColumns","useMemo","id","accessorKey","header","enableHiding","size","Cell","cell","column","row","renderedCellValue","accessorFn","originalRow","requesterProfile","name","receptorProfile","minSize","styles","theme","height","minHeight","minWidth","borderRadius","cursor","alignItems","whiteSpace","wordWrap","display","justifyContent","padding","spacing","color","contrastColor","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","Box","pt","newCause","getCausesList","changeStatusCause","updateCause","useChangeStatusCause","client","useQueryClient","changeStatus","useMutation","formData","onSuccess","onError","mutationOptions","isFunction","error","errorFormatted","useCreateNewCause","useFindCausesList","useUpdateCause","mutate","createCause","isLoading","isCreatingCause","isUpdatingCause","ValidationSchema","Yup","shape","trim","max","required","description","nullable","test","value","parent","level","formik","useFormik","initialValues","find","enableReinitialize","validationSchema","onSubmit","values","setSubmitting","setFieldValue","isSubmitting","loading","Scrollbar","sx","flexGrow","FormProvider","p","jsxs","RFTextField","RFSelect","placeholder","LoadingButton","string","func","array","getCausesTableActions","table","original","rowData","status","causeIdToggleStatus","setCauseIdToggleStatus","toggleStatus","isChangingCauseStatus","isChangingStatus","flex","flexWrap","gap","CircularLoading","ml","IOSSwitch","e","stopPropagation","IconButton","Edit","CausesList","thirdAccounts","isError","isFetching","columns","useMaterialTable","enableColumnPinning","enableColumnFilterModes","enableStickyHeader","enableRowVirtualization","enableFacetedValues","enableRowActions","enableRowSelection","enableDensityToggle","positionActionsColumn","selectAllMode","density","sorting","desc","showAlertBanner","showProgressBars","displayColumnDefOptions","maxSize","muiTableContainerProps","maxHeight","md","lg","xl","enableColumnResizing","layoutMode","renderTopToolbarCustomActions","renderRowActions","Card","getState","isFullScreen","boxShadow","customShadows","z24","palette","mode","grey","MaterialDataTable","CatalogCauses","Page","ContainerPage","HeaderPage","href","PATH_DASHBOARD","root","CATALOGS_PATHS"],"sources":["../../../../../frontend/src/app/catalogs/shared/adapters/catalogs-shared-keys.js","../../../../../frontend/src/app/catalogs/shared/adapters/profiles-adapter.js","../../../../../frontend/src/app/catalogs/shared/services/SharedCatalogsRepository.js","../../../../../frontend/src/app/catalogs/shared/hooks/useFindProfiles.js","../../../../../frontend/src/app/catalogs/causes/store/causes-store.js","../../../../../frontend/src/app/catalogs/causes/components/NewCauseDrawer.jsx","../../../../../frontend/src/app/catalogs/causes/adapters/causes-keys.js","../../../../../frontend/src/app/catalogs/causes/adapters/causes-list-adapter.js","../../../../../frontend/src/app/catalogs/causes/adapters/new-cause-adapter.js","../../../../../frontend/src/app/catalogs/causes/hooks/useCausesColumns.jsx","../../../../../frontend/src/app/catalogs/causes/services/CausesRepository.js","../../../../../frontend/src/app/catalogs/causes/hooks/useChangeStatusCause.js","../../../../../frontend/src/app/catalogs/causes/hooks/useCreateNewCause.js","../../../../../frontend/src/app/catalogs/causes/hooks/useFindCausesList.js","../../../../../frontend/src/app/catalogs/causes/hooks/useUpdateCause.js","../../../../../frontend/src/app/catalogs/causes/components/NewCauseForm.jsx","../../../../../frontend/src/app/catalogs/causes/components/CausesTableActions.jsx","../../../../../frontend/src/app/catalogs/causes/components/CausesList.jsx","../../../../../frontend/src/app/catalogs/causes/pages/CatalogCauses.jsx"],"sourcesContent":["export const CATALOGS_SHARED_KEYS = {\r\n  PROFILES: 'profiles-catalog'\r\n}\r\n","import { convertCatalogToReactSelect } from '@/shared/utils'\r\n\r\nexport const ProfilesAdapter = profiles => {\r\n  const profilesAdapted = profiles?.map(profile => ({\r\n    id: profile?.id,\r\n    status: profile?.active,\r\n    name: profile?.name,\r\n    initUrl: profile?.urlInit,\r\n    level: Number(profile?.level)\r\n  }))\r\n\r\n  return convertCatalogToReactSelect(profilesAdapted, 'id', 'name', 'status')\r\n}\r\n","import { ProfilesAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getProfilesCatalog = async () => {\r\n  const { data } = await axios.get('/api/profiles')\r\n\r\n  return ProfilesAdapter(data)\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CATALOGS_SHARED_KEYS } from '../adapters'\r\nimport { getProfilesCatalog } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindProfiles = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [CATALOGS_SHARED_KEYS.PROFILES],\r\n    queryFn: getProfilesCatalog,\r\n    staleTime: 60000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener los perfiles del sistema. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(errorMessage)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  openNewCause: false,\r\n  cause: null\r\n}\r\n\r\nconst causesStore = (set, get) => ({\r\n  ...initialState,\r\n  setOpenNewCause: open => {\r\n    set(\r\n      state => ({\r\n        openNewCause: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_NEW_CAUSE'\r\n    )\r\n  },\r\n  setCause: cause => {\r\n    set(\r\n      state => ({\r\n        cause\r\n      }),\r\n      false,\r\n      'SET_CAUSE_DETAILS'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useCausesStore = createStore(causesStore)\r\n","import { lazy } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Stack, Typography } from '@mui/material'\r\n\r\nimport { useCausesStore } from '../store'\r\n\r\nimport { RightPanel } from '@/app/shared/components'\r\nimport { Lodable } from '@/shared/components/lodables'\r\n\r\nconst NewCauseForm = Lodable(lazy(() => import('./NewCauseForm')))\r\n\r\nconst NewCauseDrawer = ({ profiles }) => {\r\n  const { openNewCause, setOpenNewCause, setCause, cause } = useCausesStore()\r\n\r\n  const handleClose = () => {\r\n    setOpenNewCause(false)\r\n    setCause(null)\r\n  }\r\n\r\n  return (\r\n    <RightPanel\r\n      open={openNewCause}\r\n      handleClose={handleClose}\r\n      titleElement={\r\n        <Stack>\r\n          <Typography variant={'h6'}>{cause ? `Editar Causa` : 'Nueva Causa'}</Typography>\r\n        </Stack>\r\n      }\r\n    >\r\n      {openNewCause && <NewCauseForm profiles={profiles} onSuccess={handleClose} cause={cause} />}\r\n    </RightPanel>\r\n  )\r\n}\r\n\r\nNewCauseDrawer.propTypes = {\r\n  profiles: PropTypes.any\r\n}\r\n\r\nexport default NewCauseDrawer\r\n","export const CAUSES_KEYS = {\r\n  LIST: 'catalog-causes-list'\r\n}\r\n","export const CausesListAdapter = causes =>\r\n  causes?.map(cause => ({\r\n    id: cause?.id,\r\n    cause: cause?.name,\r\n    description: cause?.description,\r\n    color: cause?.color?.trim(),\r\n    status: cause?.active === '1',\r\n    requesterProfile: { id: cause?.applicantProfileId, name: cause?.applicantProfileName },\r\n    receptorProfile: { id: cause?.assignedProfileId, name: cause?.assignedProfileName }\r\n  })) || []\r\n","export const NewCauseAdapter = cause => ({\r\n  reason: cause?.cause,\r\n  description: cause?.description,\r\n  applicantProfileId: cause?.requesterProfile?.value || '',\r\n  assignedProfileId: cause?.receptorProfile?.value || '',\r\n  color: cause?.color\r\n})\r\n","import { useMemo } from 'react'\r\n\r\nimport { Box, Typography } from '@mui/material'\r\n\r\nimport { contrastColor } from '@/theme/utils'\r\n\r\nexport const useCausesColumns = () =>\r\n  useMemo(\r\n    () => [\r\n      {\r\n        id: 'cause',\r\n        accessorKey: 'cause',\r\n        header: 'Causa',\r\n        enableHiding: false,\r\n        size: 150,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => (\r\n          <Typography fontWeight={'bold'} variant=\"subtitle2\">\r\n            {renderedCellValue}\r\n          </Typography>\r\n        )\r\n      },\r\n      {\r\n        id: 'requesterProfile',\r\n        accessorFn: originalRow => originalRow?.requesterProfile?.name || null,\r\n        header: 'Perfil Solicitante',\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return <Typography variant=\"subtitle2\">{renderedCellValue}</Typography>\r\n        }\r\n      },\r\n      {\r\n        id: 'receptorProfile',\r\n        accessorFn: originalRow => originalRow?.receptorProfile?.name || null,\r\n        header: 'Perfil Receptor',\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n\r\n          return <Typography variant=\"subtitle2\">{renderedCellValue}</Typography>\r\n        }\r\n      },\r\n      {\r\n        id: 'color',\r\n        accessorKey: 'color',\r\n        header: 'Color',\r\n        minSize: 100,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          const styles = theme => ({\r\n            height: 'auto',\r\n            minHeight: 22,\r\n            minWidth: 22,\r\n            borderRadius: 8,\r\n            cursor: 'default',\r\n            alignItems: 'center',\r\n            whiteSpace: 'normal',\r\n            wordWrap: 'break-word',\r\n            display: 'inline-flex',\r\n            justifyContent: 'center',\r\n            padding: theme.spacing(0, 1),\r\n            color: contrastColor(renderedCellValue),\r\n            fontSize: theme.typography.pxToRem(12),\r\n            fontFamily: theme.typography.fontFamily,\r\n            backgroundColor: renderedCellValue,\r\n            fontWeight: theme.typography.fontWeightBold\r\n          })\r\n\r\n          return (\r\n            <Box sx={{ display: 'flex', pt: 1 }}>\r\n              <Box component=\"span\" sx={styles}>\r\n                {renderedCellValue}\r\n              </Box>\r\n            </Box>\r\n          )\r\n        }\r\n      }\r\n    ],\r\n    []\r\n  )\r\n","import { CausesListAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const newCause = async cause => {\r\n  const { data } = await axios.post('/api/support-reason/new', cause)\r\n\r\n  return data\r\n}\r\n\r\nexport const getCausesList = async () => {\r\n  const { data } = await axios.get('/api/tickets/support-reasons')\r\n\r\n  return CausesListAdapter(data)\r\n}\r\n\r\nexport const changeStatusCause = async cause => {\r\n  const { data } = await axios.put(\r\n    `/api/tickets/support-reasons/${cause?.id}/${cause?.changeStatus ? 'disable' : 'enable'}`\r\n  )\r\n  return cause\r\n}\r\n\r\nexport const updateCause = async cause => {\r\n  const { data } = await axios.put('/api/support-reason/update', cause)\r\n\r\n  return data\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CAUSES_KEYS } from '../adapters'\r\nimport { changeStatusCause } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useChangeStatusCause = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const changeStatus = useMutation({\r\n    mutationFn: changeStatusCause,\r\n    ...options\r\n  })\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, ...mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(changeStatus.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Actualizando estado de la causa...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([CAUSES_KEYS.LIST])\r\n            isFunction(onSuccess) && onSuccess(data)\r\n            return 'Se actualizó el estado de la causa con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...changeStatus,\r\n    mutate\r\n  }\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CAUSES_KEYS } from '../adapters'\r\nimport { newCause } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useCreateNewCause = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const cause = useMutation(newCause, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      const data = await toast.promise(cause.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Guardando nueva causa ...',\r\n        success: 'Se creó la causa con éxito'\r\n      })\r\n      client.invalidateQueries([CAUSES_KEYS.LIST])\r\n      isFunction(onSuccess) && onSuccess(data)\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...cause,\r\n    mutate\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CAUSES_KEYS } from '../adapters'\r\nimport { getCausesList } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindCausesList = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [CAUSES_KEYS.LIST],\r\n    queryFn: getCausesList,\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener la lista de las causas. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CAUSES_KEYS } from '../adapters'\r\nimport { updateCause } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useUpdateCause = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const cause = useMutation(updateCause, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      const data = await toast.promise(cause.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Actualizando causa ...',\r\n        success: 'Se actualizó la causa con éxito'\r\n      })\r\n      client.invalidateQueries([CAUSES_KEYS.LIST])\r\n      isFunction(onSuccess) && onSuccess(data)\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...cause,\r\n    mutate\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Stack, Typography } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport { NewCauseAdapter } from '../adapters'\r\nimport { useCreateNewCause, useUpdateCause } from '../hooks'\r\n\r\nimport { FormProvider, RFSelect, RFTextField } from '@/shared/components/form'\r\nimport { Scrollbar } from '@/shared/components/scroll'\r\n\r\nconst NewCauseForm = ({ profiles, onSuccess, cause }) => {\r\n  const { mutate: createCause, isLoading: isCreatingCause } = useCreateNewCause()\r\n\r\n  const { mutate: updateCause, isLoading: isUpdatingCause } = useUpdateCause()\r\n\r\n  const ValidationSchema = Yup.object().shape({\r\n    cause: Yup.string().trim().max(100, 'Máximo 100 caracteres').required('Es necesario la causa'),\r\n    description: Yup.string().trim().max(250, 'Máximo 250 caracteres'),\r\n    requesterProfile: Yup.object().nullable().required('Es necesario el perfil solicitante'),\r\n    receptorProfile: Yup.object()\r\n      .nullable()\r\n      .required('Es necesario el perfil receptor')\r\n      .test('not-equal', 'El perfil receptor no puede ser igual al perfil solicitante', function (value) {\r\n        const { requesterProfile } = this.parent\r\n        return !value || !requesterProfile || value.id !== requesterProfile.id\r\n      })\r\n      .test(\r\n        'higher-level',\r\n        'El perfil receptor debe tener un nivel más alto que el perfil solicitante',\r\n        function (value) {\r\n          const { requesterProfile } = this.parent\r\n          return !value || (requesterProfile && value?.level < requesterProfile?.level)\r\n        }\r\n      ),\r\n    color: Yup.string()\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      cause: cause?.cause || '',\r\n      description: cause?.description || '',\r\n      requesterProfile: profiles?.find(profile => profile?.id === cause?.requesterProfile?.id) || null,\r\n      receptorProfile: profiles?.find(profile => profile?.id === cause?.receptorProfile?.id) || null,\r\n      color: cause?.color || ''\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: ValidationSchema,\r\n    onSubmit: (values, { setSubmitting, setFieldValue }) => {\r\n      const newCause = NewCauseAdapter(values)\r\n\r\n      if (cause) {\r\n        return updateCause(\r\n          { ...newCause, id: cause?.id },\r\n          {\r\n            onSuccess: () => {\r\n              setSubmitting(false)\r\n              onSuccess()\r\n            },\r\n            onError: () => {\r\n              setSubmitting(false)\r\n            }\r\n          }\r\n        )\r\n      }\r\n\r\n      return createCause(newCause, {\r\n        onSuccess: () => {\r\n          setSubmitting(false)\r\n          onSuccess()\r\n        },\r\n        onError: () => {\r\n          setSubmitting(false)\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const { isSubmitting } = formik\r\n\r\n  const loading = isCreatingCause || isUpdatingCause || isSubmitting\r\n\r\n  return (\r\n    <Scrollbar containerProps={{ sx: { flexGrow: 0, height: 'auto' } }}>\r\n      <FormProvider formik={formik}>\r\n        <Stack spacing={2} sx={{ p: 3 }}>\r\n          <Stack spacing={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Causa *\r\n            </Typography>\r\n\r\n            <RFTextField size={'small'} name={'cause'} placeholder={'Nueva causa...'} disabled={loading} />\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Descripción\r\n            </Typography>\r\n\r\n            <RFTextField\r\n              size={'small'}\r\n              name={'description'}\r\n              multiline\r\n              rows={2}\r\n              disabled={loading}\r\n              placeholder={'Descripción de la causa...'}\r\n            />\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Perfil Solicitante *\r\n            </Typography>\r\n            <RFSelect\r\n              size={'small'}\r\n              name={'requesterProfile'}\r\n              disabled={loading}\r\n              options={profiles || []}\r\n              textFieldParams={{\r\n                placeholder: 'Seleccionar ...',\r\n                size: 'small'\r\n              }}\r\n            />\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Perfil Receptor *\r\n            </Typography>\r\n            <RFSelect\r\n              size={'small'}\r\n              name={'receptorProfile'}\r\n              disabled={loading}\r\n              options={profiles || []}\r\n              textFieldParams={{\r\n                placeholder: 'Seleccionar ...',\r\n                size: 'small'\r\n              }}\r\n            />\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography m={0} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Color\r\n            </Typography>\r\n            <RFTextField size={'small'} type=\"color\" name=\"color\" disabled={loading} />\r\n          </Stack>\r\n\r\n          <Stack sx={{ pt: 1 }}>\r\n            <LoadingButton size={'large'} loading={loading} variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\r\n              {cause ? 'Actualizar' : 'Crear'}\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Scrollbar>\r\n  )\r\n}\r\n\r\nNewCauseForm.propTypes = {\r\n  cause: PropTypes.shape({\r\n    cause: PropTypes.string,\r\n    color: PropTypes.string,\r\n    description: PropTypes.string,\r\n    receptorProfile: PropTypes.shape({\r\n      id: PropTypes.any\r\n    }),\r\n    requesterProfile: PropTypes.shape({\r\n      id: PropTypes.any\r\n    })\r\n  }),\r\n  onSuccess: PropTypes.func,\r\n  profiles: PropTypes.array\r\n}\r\n\r\nexport default NewCauseForm\r\n","import { useState } from 'react'\r\n\r\nimport { Edit } from '@mui/icons-material'\r\nimport { Box, IconButton } from '@mui/material'\r\n\r\nimport { useChangeStatusCause } from '../hooks'\r\nimport { useCausesStore } from '../store'\r\n\r\nimport { IOSSwitch } from '@/shared/components/form'\r\nimport { CircularLoading } from '@/shared/components/loadings'\r\n\r\nexport function getCausesTableActions(table) {\r\n  const { row } = table\r\n  const { original: rowData } = row\r\n  const { status } = rowData\r\n\r\n  const [causeIdToggleStatus, setCauseIdToggleStatus] = useState(null)\r\n  const { setOpenNewCause, setCause } = useCausesStore()\r\n  const { mutate: toggleStatus, isLoading: isChangingCauseStatus } = useChangeStatusCause()\r\n\r\n  const isChangingStatus = isChangingCauseStatus && causeIdToggleStatus === rowData?.id\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flex: 1,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        flexWrap: 'nowrap',\r\n        gap: '8px'\r\n      }}\r\n    >\r\n      {isChangingStatus ? (\r\n        <CircularLoading\r\n          size={15}\r\n          containerProps={{\r\n            display: 'flex',\r\n            ml: 1\r\n          }}\r\n        />\r\n      ) : (\r\n        <IOSSwitch\r\n          size=\"sm\"\r\n          color={!status ? 'error' : 'success'}\r\n          checked={status || false}\r\n          inputProps={{ 'aria-label': 'controlled' }}\r\n          onChange={e => {}}\r\n          onClick={e => {\r\n            e.stopPropagation()\r\n            setCauseIdToggleStatus(rowData?.id)\r\n            toggleStatus(\r\n              { ...rowData, changeStatus: !status },\r\n              {\r\n                onSuccess: () => {\r\n                  setCauseIdToggleStatus(null)\r\n                },\r\n                onError: () => {\r\n                  setCauseIdToggleStatus(null)\r\n                }\r\n              }\r\n            )\r\n          }}\r\n        />\r\n      )}\r\n      {status && !isChangingStatus && (\r\n        <IconButton\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={e => {\r\n            e.stopPropagation()\r\n            setCause(rowData)\r\n            setOpenNewCause(true)\r\n          }}\r\n        >\r\n          <Edit size=\"small\" fontSize=\"16px\" />\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n","import { Box, Card } from '@mui/material'\r\n\r\nimport { getCausesTableActions } from './CausesTableActions'\r\n\r\nimport { useCausesColumns, useFindCausesList } from '../hooks'\r\n\r\nimport { MaterialDataTable } from '@/shared/components/dataTables'\r\nimport { useMaterialTable } from '@/shared/hooks'\r\n\r\nexport const CausesList = () => {\r\n  const { data: thirdAccounts, isLoading, isError, error, isFetching } = useFindCausesList()\r\n\r\n  const columns = useCausesColumns()\r\n\r\n  const table = useMaterialTable(isError, error, {\r\n    columns,\r\n    data: thirdAccounts || [],\r\n    enableColumnPinning: true,\r\n    enableColumnFilterModes: true,\r\n    enableStickyHeader: true,\r\n    enableRowVirtualization: true,\r\n    enableFacetedValues: true,\r\n    enableRowActions: true,\r\n    enableRowSelection: true,\r\n    enableDensityToggle: false,\r\n    positionActionsColumn: 'last',\r\n    selectAllMode: 'all',\r\n    initialState: {\r\n      density: 'compact',\r\n      sorting: [\r\n        {\r\n          id: 'cause',\r\n          desc: false\r\n        }\r\n      ]\r\n    },\r\n    state: {\r\n      isLoading,\r\n      showAlertBanner: isError,\r\n      showProgressBars: isFetching\r\n    },\r\n    displayColumnDefOptions: {\r\n      'mrt-row-select': {\r\n        maxSize: 10\r\n      },\r\n      'mrt-row-actions': {\r\n        header: 'Acciones',\r\n        maxSize: 80\r\n      }\r\n    },\r\n    muiTableContainerProps: { sx: { maxHeight: { md: '350px', lg: '450px', xl: '700px' } } },\r\n    enableColumnResizing: true,\r\n    layoutMode: 'grid',\r\n    renderTopToolbarCustomActions: () => <Box></Box>,\r\n    renderRowActions: table => getCausesTableActions(table)\r\n  })\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      sx={theme =>\r\n        !table.getState().isFullScreen\r\n          ? {\r\n              boxShadow: theme.customShadows.z24,\r\n              backgroundColor: theme.palette.mode === 'light' ? 'inherit' : theme.palette.grey[500_12]\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <MaterialDataTable table={table} />\r\n    </Card>\r\n  )\r\n}\r\n","import { useFindProfiles } from '../../shared/hooks'\r\nimport { CATALOGS_PATHS } from '../../shared/routes'\r\nimport { NewCauseDrawer } from '../components'\r\nimport { CausesList } from '../components/CausesList'\r\nimport { useCausesStore } from '../store'\r\n\r\nimport { PATH_DASHBOARD } from '@/routes'\r\nimport { Page } from '@/shared/components/containers'\r\nimport { ContainerPage } from '@/shared/components/containers/ContainerPage'\r\nimport { HeaderPage } from '@/shared/components/layout'\r\n\r\nexport const CatalogCauses = () => {\r\n  const { data, isLoading } = useFindProfiles()\r\n  const setOpenNewCause = useCausesStore(state => state.setOpenNewCause)\r\n\r\n  return (\r\n    <Page title=\"Catálogo de Causas\">\r\n      <ContainerPage>\r\n        <HeaderPage\r\n          name={'Catálogo de Causas'}\r\n          links={[\r\n            { name: 'Inicio', href: PATH_DASHBOARD.root },\r\n            { name: 'Catálogos', href: CATALOGS_PATHS.causes },\r\n            { name: 'Causas' }\r\n          ]}\r\n          buttonName=\"Nueva Causa\"\r\n          onClick={() => setOpenNewCause(true)}\r\n          loading={isLoading}\r\n        />\r\n        <CausesList />\r\n      </ContainerPage>\r\n      <NewCauseDrawer profiles={data} />\r\n    </Page>\r\n  )\r\n}\r\n"],"file":"assets/js/CatalogCauses-Rr44mYzx.js"}
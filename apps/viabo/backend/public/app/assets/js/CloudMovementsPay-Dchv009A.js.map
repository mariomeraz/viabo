{"version":3,"mappings":"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","names":["initialState","liquidatedMovementsStore","set","get","movement","state","open","filterDate","useViaboPayLiquidatedMovementsStore","createStore","getLiquidatedMovementsActions","table","row","closeMenu","original","rowData","liquidationStatus","setMovementToLiquidate","setOpenDrawerLiquidateMovement","menuItems","id","jsxs","MenuItem","m","jsx","ListItemIcon","Payment","CLOUD_VIABO_PAY_KEYS","ViaboPayLiquidatedMovementsAdapter","data","amount","date","format","normalizeDateString","es","time","fCurrency","getViaboPayLiquidatedMovements","startDate","endDate","signal","fetchURL","axios","liquidateTerminalMovement","useFindViaboPayLiquidatedMovements","options","setFilterDate","initialDate","startOfDay","finalDate","endOfDay","customError","setCustomError","useState","query","useQuery","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode","TerminalMovementColumn","approved","cardLogo","getCardTypeByName","cardType","CardLogoComponent","component","Box","display","alignItems","position","Tooltip","Avatar","width","height","color","bgcolor","AccountBalance","right","bottom","borderRadius","justifyContent","Check","Clear","ml","Typography","textWrap","description","transactionMessage","propTypes","PropTypes","shape","bool","any","useLiquidatedMovementsColumns","useMemo","accessorKey","header","enableHiding","size","Cell","cell","column","renderedCellValue","terminalName","Stack","transactionDate","fullDate","amountFormat","amountToLiquidateFormat","accessorFn","originalRow","name","LiquidatedMovementsTable","currentDate","Date","initialStartDate","sub","days","initialEndDate","setStartDate","setEndDate","isError","error","isLoading","isFetching","refetch","columns","useMaterialTable","enableColumnPinning","enableColumnFilterModes","enableStickyHeader","enableRowVirtualization","enableFacetedValues","enableRowActions","enableRowSelection","enableDensityToggle","positionActionsColumn","selectAllMode","density","sorting","desc","showAlertBanner","showProgressBars","displayColumnDefOptions","maxSize","muiTableContainerProps","sx","maxHeight","md","lg","xl","renderRowActionMenuItems","renderTopToolbarCustomActions","handleDateRange","range","Card","CardMovementsHeader","MaterialDataTable","LiquidateTerminalMovementDrawer","Lodable","lazy","__vitePreload","CloudMovementsPay","Page","ContainerPage","HeaderPage","href","PATH_DASHBOARD","root","VIABO_PAY_PATHS","cloud","VIABO_PAY_ROUTES_NAMES"],"sources":["../../../../../frontend/src/app/business/viabo-pay/cloud/store/viabo-pay-liquidated-movements.js","../../../../../frontend/src/app/business/viabo-pay/cloud/components/movements/LiquidatedMovementsActions.jsx","../../../../../frontend/src/app/business/viabo-pay/cloud/adapters/cloud-viabo-pay-keys.js","../../../../../frontend/src/app/business/viabo-pay/cloud/adapters/viabo-pay-liquidated-movements-adapter.js","../../../../../frontend/src/app/business/viabo-pay/cloud/services/CloudViaboPayRepository.js","../../../../../frontend/src/app/business/viabo-pay/cloud/hooks/useFindViaboPayLiquidatedMovements.js","../../../../../frontend/src/app/business/viabo-pay/cloud/components/movements/columns/TerminalMovementColumn.jsx","../../../../../frontend/src/app/business/viabo-pay/cloud/hooks/useLiquidatedMovementsColumns.jsx","../../../../../frontend/src/app/business/viabo-pay/cloud/components/movements/LiquidatedMovementsTable.jsx","../../../../../frontend/src/app/business/viabo-pay/cloud/pages/CloudMovementsPay.jsx"],"sourcesContent":["import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  openDrawerLiquidateMovement: false,\r\n  movement: null,\r\n  filterDate: null\r\n}\r\n\r\nconst liquidatedMovementsStore = (set, get) => ({\r\n  ...initialState,\r\n  setMovementToLiquidate: movement => {\r\n    set(\r\n      state => ({\r\n        movement\r\n      }),\r\n      false,\r\n      'SET_DETAILS_MOVEMENT_TO_LIQUIDATE'\r\n    )\r\n  },\r\n\r\n  setOpenDrawerLiquidateMovement: open => {\r\n    set(\r\n      state => ({\r\n        openDrawerLiquidateMovement: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_LIQUIDATE_MOVEMENT_VIABO_PAY'\r\n    )\r\n  },\r\n\r\n  setFilterDate: filterDate => {\r\n    set(\r\n      state => ({\r\n        filterDate\r\n      }),\r\n      false,\r\n      'SET_FILTER_DATE_LIQUIDATE_MOVEMENTS'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useViaboPayLiquidatedMovementsStore = createStore(liquidatedMovementsStore)\r\n","import { Payment } from '@mui/icons-material'\r\nimport { ListItemIcon, MenuItem } from '@mui/material'\r\n\r\nimport { useViaboPayLiquidatedMovementsStore } from '../../store'\r\n\r\nexport function getLiquidatedMovementsActions(table) {\r\n  const { row, closeMenu } = table\r\n  const { original: rowData } = row\r\n  const { liquidationStatus } = rowData\r\n\r\n  const { setMovementToLiquidate, setOpenDrawerLiquidateMovement } = useViaboPayLiquidatedMovementsStore(state => state)\r\n\r\n  const menuItems = [\r\n    liquidationStatus?.id !== '13' && (\r\n      <MenuItem\r\n        key={0}\r\n        onClick={() => {\r\n          setMovementToLiquidate(rowData)\r\n          setOpenDrawerLiquidateMovement(true)\r\n          closeMenu()\r\n        }}\r\n        sx={{ m: 0 }}\r\n      >\r\n        <ListItemIcon>\r\n          <Payment color=\"success\" />\r\n        </ListItemIcon>\r\n        Liquidar\r\n      </MenuItem>\r\n    )\r\n  ]\r\n\r\n  return menuItems\r\n}\r\n","export const CLOUD_VIABO_PAY_KEYS = {\r\n  MOVEMENTS: 'liquidated-viabo-pay-movements'\r\n}\r\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\n\r\nimport { fCurrency, normalizeDateString } from '@/shared/utils'\r\n\r\nexport const ViaboPayLiquidatedMovementsAdapter = data => {\r\n  const movements =\r\n    data?.map(movement => {\r\n      const amount = parseFloat(movement?.amount || '0')\r\n      const date = movement?.transaction_date\r\n        ? format(normalizeDateString(movement?.transaction_date), 'dd MMM yyyy', { locale: es })\r\n        : ''\r\n      const time = movement?.transaction_date ? format(normalizeDateString(movement?.transaction_date), 'p') : ''\r\n\r\n      return {\r\n        id: movement?.id,\r\n        terminalName: movement?.terminal_name,\r\n        terminalId: movement?.terminal_id,\r\n        amount,\r\n        amountFormat: fCurrency(amount),\r\n        amountToLiquidate: movement?.amountToSettled,\r\n        amountToLiquidateFormat: fCurrency(movement?.amountToSettled),\r\n        commerceName: movement?.commerceName,\r\n        commerceId: movement?.commerceId,\r\n        approved: movement?.approved,\r\n        cardType: movement?.card_brand,\r\n        authNumber: movement?.authorization_number,\r\n        commission: movement?.commission >= 0 ? `${movement?.commission}%` : '0%',\r\n        cardNumber: movement?.card_number,\r\n        cardBank: movement?.issuer,\r\n        transactionDate: {\r\n          fullDate: format(normalizeDateString(movement?.transaction_date), 'dd MMM yyyy HH:mm', { locale: es }),\r\n          date,\r\n          time\r\n        },\r\n        serverDate: normalizeDateString(movement?.transaction_date),\r\n        description: `${movement?.issuer === '' ? movement?.card_brand : movement?.issuer}-${\r\n          movement?.card_number\r\n        }`.toUpperCase(),\r\n        transactionMessage: movement?.result_message,\r\n        conciliated: !!movement?.conciliated,\r\n        conciliatedName: movement?.conciliated ? 'Conciliada' : 'Sin Conciliar',\r\n        liquidationStatus: {\r\n          id: movement?.liquidationStatusId,\r\n          name: movement?.liquidationStatusName\r\n        },\r\n        dataToLiquidate: {\r\n          id: movement?.id,\r\n          commerceId: movement?.commerceId,\r\n          authorization_number: movement?.authorization_number,\r\n          terminal_id: movement?.terminal_id,\r\n          terminal_spei_card: movement?.terminal_spei_card || '',\r\n          amountToSettled: movement?.amountToSettled\r\n        }\r\n      }\r\n    }) ?? []\r\n\r\n  return movements\r\n}\r\n","import { ViaboPayLiquidatedMovementsAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getViaboPayLiquidatedMovements = async (startDate, endDate, signal) => {\r\n  const fetchURL = new URL('/api/terminals/shared/transactions', window.location.origin)\r\n  fetchURL.searchParams.set('startDate', startDate)\r\n  fetchURL.searchParams.set('endDate', endDate)\r\n  const { data } = await axios.get(fetchURL.href, {\r\n    signal\r\n  })\r\n  return ViaboPayLiquidatedMovementsAdapter(data)\r\n}\r\n\r\nexport const liquidateTerminalMovement = async movement => {\r\n  const { data } = await axios.post('/api/card/transactions/shared-terminals', movement)\r\n  return data\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { endOfDay, format, startOfDay } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CLOUD_VIABO_PAY_KEYS } from '../adapters'\r\nimport { getViaboPayLiquidatedMovements } from '../services'\r\nimport { useViaboPayLiquidatedMovementsStore } from '../store'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindViaboPayLiquidatedMovements = (startDate, endDate, options = {}) => {\r\n  if (!startDate || !endDate) {\r\n    return null\r\n  }\r\n  const { setFilterDate } = useViaboPayLiquidatedMovementsStore(state => state)\r\n  const initialDate = format(startOfDay(startDate), 'yyyy-MM-dd HH:mm:ss')\r\n  const finalDate = format(endOfDay(endDate), 'yyyy-MM-dd HH:mm:ss')\r\n\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n\r\n\r\n  const query = useQuery({\r\n    queryKey: [CLOUD_VIABO_PAY_KEYS.MOVEMENTS],\r\n    queryFn: ({ signal }) => getViaboPayLiquidatedMovements(initialDate, finalDate, signal),\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    onSuccess: data => {\r\n      setFilterDate({\r\n        startDate: startOfDay(startDate),\r\n        endDate: endOfDay(endDate),\r\n        text: `${format(startDate, 'dd MMMM yyyy', { locale: es })} - ${format(endDate, 'dd MMMM yyyy', {\r\n          locale: es\r\n        })}`\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener la lista de movimientos. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { AccountBalance, Check, Clear } from '@mui/icons-material'\r\nimport { Avatar, Box, Tooltip, Typography } from '@mui/material'\r\n\r\nimport { getCardTypeByName } from '@/app/shared/services'\r\n\r\nexport const TerminalMovementColumn = ({ row }) => {\r\n  const { original: rowData } = row\r\n\r\n  const approved = rowData?.approved\r\n  const cardLogo = getCardTypeByName(rowData?.cardType)\r\n  const CardLogoComponent = cardLogo?.component\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <Tooltip title={rowData?.cardType}>\r\n          <Avatar\r\n            sx={{\r\n              width: 40,\r\n              height: 40,\r\n              color: 'text.secondary',\r\n              bgcolor: 'background.neutral'\r\n            }}\r\n          >\r\n            {cardLogo ? (\r\n              <CardLogoComponent sx={{ width: 25, height: 25 }} />\r\n            ) : (\r\n              <AccountBalance width={25} height={25} />\r\n            )}\r\n          </Avatar>\r\n        </Tooltip>\r\n        <Box\r\n          sx={{\r\n            right: 0,\r\n            bottom: 0,\r\n            width: 15,\r\n            height: 15,\r\n            display: 'flex',\r\n            borderRadius: '50%',\r\n            position: 'absolute',\r\n            alignItems: 'center',\r\n            color: 'common.white',\r\n            bgcolor: 'error.main',\r\n            justifyContent: 'center',\r\n            ...(approved && {\r\n              bgcolor: 'success.main'\r\n            })\r\n          }}\r\n        >\r\n          {approved ? <Check sx={{ width: 12, height: 12 }} /> : <Clear sx={{ width: 12, height: 12 }} />}\r\n        </Box>\r\n      </Box>\r\n      <Box sx={{ ml: 2 }}>\r\n        <Typography variant=\"subtitle2\" sx={{ textWrap: 'wrap' }}>\r\n          {rowData?.description}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          textTransform={'capitalize'}\r\n          sx={{ color: approved ? 'success.main' : 'error.main', textWrap: 'wrap' }}\r\n        >\r\n          {rowData?.transactionMessage}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nTerminalMovementColumn.propTypes = {\r\n  row: PropTypes.shape({\r\n    original: PropTypes.shape({\r\n      approved: PropTypes.bool,\r\n      cardType: PropTypes.any,\r\n      description: PropTypes.any,\r\n      transactionMessage: PropTypes.any\r\n    })\r\n  })\r\n}\r\n","import { useMemo } from 'react'\r\n\r\nimport { Stack, Typography } from '@mui/material'\r\n\r\nimport { TerminalMovementColumn } from '../components/movements/columns'\r\n\r\nexport const useLiquidatedMovementsColumns = () =>\r\n  useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: 'description',\r\n        header: 'Movimiento',\r\n        enableHiding: false,\r\n        size: 200,\r\n        Cell: ({ row }) => <TerminalMovementColumn row={row} />\r\n      },\r\n      {\r\n        accessorKey: 'terminalName',\r\n        header: 'Terminal',\r\n        size: 120,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return (\r\n            <Typography fontWeight={'bold'} variant=\"subtitle2\">\r\n              {rowData?.terminalName}\r\n            </Typography>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        accessorKey: 'commerceName',\r\n        header: 'Comercio',\r\n        size: 120\r\n      },\r\n      {\r\n        accessorKey: 'serverDate',\r\n        header: 'Fecha',\r\n        size: 100,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return (\r\n            <Stack>\r\n              <Typography variant=\"subtitle2\">{rowData?.transactionDate?.fullDate}</Typography>\r\n            </Stack>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        accessorKey: 'amount',\r\n        header: 'Monto Cobrado',\r\n        size: 120,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return (\r\n            <Stack>\r\n              <Typography fontWeight={'bold'} variant=\"subtitle2\">\r\n                {rowData?.amountFormat}\r\n              </Typography>\r\n            </Stack>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        accessorKey: 'amountToLiquidate',\r\n        header: 'Monto por liquidar',\r\n        size: 120,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return (\r\n            <Stack>\r\n              <Typography fontWeight={'bold'} color={'success.main'} variant=\"subtitle2\">\r\n                {rowData?.amountToLiquidateFormat}\r\n              </Typography>\r\n            </Stack>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        id: 'status',\r\n        accessorFn: originalRow => originalRow?.liquidationStatus?.name || null,\r\n        header: 'Estado de Liquidación',\r\n        size: 120,\r\n        Cell: ({ cell, column, row, renderedCellValue }) => {\r\n          const { original: rowData } = row\r\n          return (\r\n            <Stack>\r\n              <Typography variant=\"subtitle2\">{rowData?.liquidationStatus?.name}</Typography>\r\n            </Stack>\r\n          )\r\n        }\r\n      }\r\n    ],\r\n    []\r\n  )\r\n","import { useEffect, useMemo, useState } from 'react'\r\n\r\nimport { Box, Card } from '@mui/material'\r\nimport { sub } from 'date-fns'\r\n\r\nimport { getLiquidatedMovementsActions } from './LiquidatedMovementsActions'\r\n\r\nimport { useFindViaboPayLiquidatedMovements, useLiquidatedMovementsColumns } from '../../hooks'\r\nimport { useViaboPayLiquidatedMovementsStore } from '../../store'\r\n\r\nimport { CardMovementsHeader } from '@/app/business/shared/components/card-movements/header-filter'\r\nimport { MaterialDataTable } from '@/shared/components/dataTables'\r\nimport { useMaterialTable } from '@/shared/hooks'\r\n\r\nconst LiquidatedMovementsTable = () => {\r\n  const currentDate = new Date()\r\n\r\n  const filterDate = useViaboPayLiquidatedMovementsStore(state => state.filterDate)\r\n\r\n  const initialStartDate = useMemo(\r\n    () => (filterDate?.startDate ? new Date(filterDate?.startDate) : sub(currentDate, { days: 30 })),\r\n    [filterDate?.startDate]\r\n  )\r\n  const initialEndDate = useMemo(\r\n    () => (filterDate?.endDate ? new Date(filterDate?.endDate) : currentDate),\r\n    [filterDate?.endDate]\r\n  )\r\n\r\n  const [startDate, setStartDate] = useState(initialStartDate)\r\n  const [endDate, setEndDate] = useState(initialEndDate)\r\n\r\n  const { data, isError, error, isLoading, isFetching, refetch } = useFindViaboPayLiquidatedMovements(\r\n    startDate,\r\n    endDate\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (startDate && endDate) {\r\n      refetch()\r\n    }\r\n  }, [startDate, endDate])\r\n\r\n  const columns = useLiquidatedMovementsColumns()\r\n\r\n  const table = useMaterialTable(isError, error, {\r\n    columns,\r\n    data: data || [],\r\n    enableColumnPinning: true,\r\n    enableColumnFilterModes: true,\r\n    enableStickyHeader: true,\r\n    enableRowVirtualization: true,\r\n    enableFacetedValues: true,\r\n    enableRowActions: true,\r\n    enableRowSelection: true,\r\n    enableDensityToggle: false,\r\n    positionActionsColumn: 'last',\r\n    selectAllMode: 'all',\r\n    initialState: {\r\n      density: 'compact',\r\n      sorting: [\r\n        {\r\n          id: 'serverDate',\r\n          desc: true\r\n        }\r\n      ]\r\n    },\r\n    state: {\r\n      isLoading,\r\n      showAlertBanner: isError,\r\n      showProgressBars: isFetching\r\n    },\r\n    displayColumnDefOptions: {\r\n      'mrt-row-select': {\r\n        maxSize: 10\r\n      },\r\n      'mrt-row-actions': {\r\n        header: 'Acciones',\r\n        maxSize: 80\r\n      }\r\n    },\r\n    muiTableContainerProps: { sx: { maxHeight: { md: '350px', lg: '450px', xl: '700px' } } },\r\n    renderRowActionMenuItems: getLiquidatedMovementsActions,\r\n    renderTopToolbarCustomActions: () => <Box></Box>\r\n  })\r\n\r\n  const handleDateRange = range => {\r\n    const { startDate, endDate } = range\r\n    if (endDate !== null && startDate !== null) {\r\n      setEndDate(endDate)\r\n      setStartDate(startDate)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardMovementsHeader\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n        onChangeDateRange={handleDateRange}\r\n        hideBalance\r\n        loading={isFetching}\r\n      />\r\n      <MaterialDataTable table={table} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default LiquidatedMovementsTable\r\n","import { lazy } from 'react'\r\n\r\nimport { VIABO_PAY_PATHS, VIABO_PAY_ROUTES_NAMES } from '../../routes'\r\nimport { LiquidatedMovementsTable } from '../components/movements'\r\n\r\nimport { PATH_DASHBOARD } from '@/routes'\r\nimport { Page } from '@/shared/components/containers'\r\nimport { ContainerPage } from '@/shared/components/containers/ContainerPage'\r\nimport { HeaderPage } from '@/shared/components/layout'\r\nimport { Lodable } from '@/shared/components/lodables'\r\n\r\nconst LiquidateTerminalMovementDrawer = Lodable(\r\n  lazy(() => import('../components/movements/actions/LiquidateTerminalMovementDrawer'))\r\n)\r\n\r\nconst CloudMovementsPay = () => (\r\n  <Page title=\"Movimientos a Liquidar Viabo Pay\">\r\n    <ContainerPage>\r\n      <HeaderPage\r\n        name={'Nube'}\r\n        links={[\r\n          { name: 'Inicio', href: PATH_DASHBOARD.root },\r\n          { name: 'Viabo Pay', href: VIABO_PAY_PATHS.cloud },\r\n          { name: VIABO_PAY_ROUTES_NAMES.cloud.name }\r\n        ]}\r\n      />\r\n      <LiquidatedMovementsTable />\r\n      <LiquidateTerminalMovementDrawer />\r\n    </ContainerPage>\r\n  </Page>\r\n)\r\n\r\nexport default CloudMovementsPay\r\n"],"file":"assets/js/CloudMovementsPay-Dchv009A.js"}
{"version":3,"file":"getColorName-DlaFStQx.js","sources":["../../../../../frontend/src/theme/utils/getColorName.js"],"sourcesContent":["export function getColorName(hex) {\r\n  let color\r\n\r\n  switch (hex) {\r\n    case '#00AB55':\r\n      color = 'Green'\r\n      break\r\n    case '#000000':\r\n      color = 'Black'\r\n      break\r\n    case '#FFFFFF':\r\n      color = 'White'\r\n      break\r\n    case '#FFC0CB':\r\n      color = 'Pink'\r\n      break\r\n    case '#FF4842':\r\n      color = 'Red'\r\n      break\r\n    case '#1890FF':\r\n      color = 'Blue'\r\n      break\r\n    case '#94D82D':\r\n      color = 'Greenyellow'\r\n      break\r\n    case '#FFC107':\r\n      color = 'Orange'\r\n      break\r\n    default:\r\n      color = hex\r\n  }\r\n\r\n  return color\r\n}\r\n\r\nexport const contrastColor = color => {\r\n  const lum = [0.299 /* red */, 0.587 /* green */, 0.114 /* blue */].reduce((result, value, index) => {\r\n    // with reduce() we can convert an array of numbers into a single number\r\n    // result = previous result returned by this function\r\n    // value = https://www.w3.org/TR/AERT/#color-contrast\r\n    // index = current position index in the array\r\n    // num = decimal number of Red, Green or Blue color\r\n    const num = parseInt(color.substr(index * 2 + 1, 2), 16)\r\n    return num * value + result\r\n  }, 0 /* result = 0 */)\r\n\r\n  const isDark = lum < 128\r\n  const index = ~~isDark // convert boolean into 0 or 1\r\n  return ['#000', '#fff'][index]\r\n}\r\n"],"names":["contrastColor","color","index","result","value"],"mappings":"AAmCY,MAACA,EAAgBC,GAAS,CAYpC,MAAMC,EAAQ,CAAC,EAXH,CAAC,KAAiB,KAAmB,MAAkB,OAAO,CAACC,EAAQC,EAAOF,IAM5E,SAASD,EAAM,OAAOC,EAAQ,EAAI,EAAG,CAAC,EAAG,EAAE,EAC1CE,EAAQD,EACpB,CAAmB,EAED,KAErB,MAAO,CAAC,OAAQ,MAAM,EAAED,CAAK,CAC/B"}
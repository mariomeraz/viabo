{"version":3,"file":"cardsAdapter-CnGv3jFq.js","sources":["../../../../../frontend/src/app/shared/adapters/cardAdapter.js","../../../../../frontend/src/app/shared/adapters/cardsAdapter.js"],"sourcesContent":["import { format } from 'date-fns'\r\nimport { camelCase, startCase } from 'lodash'\r\n\r\nimport { fCardNumberHidden, fCardNumberShowLastDigits, fCurrency, fDateTime, getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const CardAdapter = card => {\r\n  const decryptedCard = getDecryptInfo(card?.ciphertext, card?.iv)\r\n  const balance = parseFloat(decryptedCard?.balance === '' ? '0' : decryptedCard?.balance.replace(/,/g, ''))\r\n\r\n  if (decryptedCard) {\r\n    return {\r\n      SPEI: decryptedCard?.spei,\r\n      PAYNET: decryptedCard?.paynet,\r\n      cardON: decryptedCard?.block === 'UnBlocked',\r\n      nip: decryptedCard?.nip,\r\n      balance,\r\n      balanceFormatted: fCurrency(balance)\r\n    }\r\n  } else {\r\n    throw new Error('Algo fallo al obtenerla informacion')\r\n  }\r\n}\r\n\r\nexport function CardDetailsAdapter(card) {\r\n  const {\r\n    id,\r\n    number,\r\n    CVV,\r\n    register,\r\n    expirationDate,\r\n    paymentProcessorName,\r\n    paymentProcessorId,\r\n    statusId,\r\n    statusName,\r\n    commerceId,\r\n    commerceName,\r\n    ownerId,\r\n    ownerName,\r\n    ownerLastname,\r\n    ownerPhone,\r\n    ownerEmail,\r\n    recorderId,\r\n    recorderName,\r\n    assignmentDate,\r\n    active\r\n  } = card\r\n\r\n  const lastFourDigits = number?.slice(-4)\r\n  let assignName = ownerName ?? ''\r\n\r\n  if (assignName?.length > 10) {\r\n    assignName = assignName.slice(0, 13) + '...'\r\n  }\r\n  return {\r\n    id,\r\n    cardTypeId: paymentProcessorId,\r\n    cardType: paymentProcessorName,\r\n    assignCommerce: {\r\n      id: commerceId,\r\n      name: commerceName\r\n    },\r\n    assignUser: {\r\n      id: ownerId,\r\n      fullName: ownerName !== '' ? startCase(camelCase(`${ownerName?.trim()} ${ownerLastname?.trim()} `)) : '-',\r\n      name: ownerName === '' ? '-' : startCase(camelCase(ownerName)),\r\n      lastName: startCase(camelCase(ownerLastname)),\r\n      phone: ownerPhone,\r\n      email: ownerEmail,\r\n      dateTime: assignmentDate === '' ? '-' : fDateTime(assignmentDate),\r\n      date: assignmentDate === '' ? '-' : format(new Date(register), 'dd MMM yyyy'),\r\n      time: assignmentDate === '' ? '-' : format(new Date(register), 'p'),\r\n      lastLogged: card?.sessionLastDate && card?.sessionLastDate !== '' ? fDateTime(card?.sessionLastDate) : null\r\n    },\r\n    staffRegister: {\r\n      id: recorderId,\r\n      name: recorderName\r\n    },\r\n    cardNumber: number,\r\n    cardNumberHidden: fCardNumberHidden(number),\r\n    cardNumberMoreDigits: fCardNumberShowLastDigits(number),\r\n    cardUserNumber: assignName?.toUpperCase() + ' ' + lastFourDigits,\r\n    binCard: lastFourDigits,\r\n    expiration: expirationDate,\r\n    register: fDateTime(register),\r\n    registerDate: register ? format(new Date(register), 'dd MMM yyyy') : '',\r\n    registerTime: register ? format(new Date(register), 'p') : '',\r\n    cvv: CVV,\r\n    emptyCVV: CVV === '' || !CVV ? 'SIN CVV' : 'CON CVV',\r\n    status: {\r\n      id: statusId,\r\n      name: statusName\r\n    },\r\n    cardStatus: {\r\n      isActive: card?.block === 'UnBlocked',\r\n      name: card?.block === 'UnBlocked' ? 'Encendida' : 'Apagada'\r\n    }\r\n  }\r\n}\r\n","import { CardDetailsAdapter } from './cardAdapter'\r\n\r\nimport { convertCatalogToReactSelect, getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const CardsAdapter = cards => {\r\n  const decryptedCards = getDecryptInfo(cards?.ciphertext, cards?.iv)\r\n  if (decryptedCards && Array.isArray(decryptedCards)) {\r\n    const cardsAdapter = decryptedCards?.map(card => CardDetailsAdapter(card))\r\n    cardsAdapter?.sort((a, b) => a?.assignUser?.fullName?.localeCompare(b?.assignUser?.fullName))\r\n    return convertCatalogToReactSelect(cardsAdapter, 'id', 'cardUserNumber') || []\r\n  }\r\n\r\n  throw new Error('No se pueden obtener las tarjetas')\r\n}\r\n"],"names":["CardAdapter","card","decryptedCard","getDecryptInfo","balance","fCurrency","CardDetailsAdapter","id","number","CVV","register","expirationDate","paymentProcessorName","paymentProcessorId","statusId","statusName","commerceId","commerceName","ownerId","ownerName","ownerLastname","ownerPhone","ownerEmail","recorderId","recorderName","assignmentDate","active","lastFourDigits","assignName","startCase","camelCase","fDateTime","format","fCardNumberHidden","fCardNumberShowLastDigits","CardsAdapter","cards","decryptedCards","cardsAdapter","a","b","_c","_a","_b","convertCatalogToReactSelect"],"mappings":"iPAKY,MAACA,EAAcC,GAAQ,CACjC,MAAMC,EAAgBC,EAAeF,GAAA,YAAAA,EAAM,WAAYA,GAAA,YAAAA,EAAM,EAAE,EACzDG,EAAU,YAAWF,GAAA,YAAAA,EAAe,WAAY,GAAK,IAAMA,GAAA,YAAAA,EAAe,QAAQ,QAAQ,KAAM,GAAG,EAEzG,GAAIA,EACF,MAAO,CACL,KAAMA,GAAA,YAAAA,EAAe,KACrB,OAAQA,GAAA,YAAAA,EAAe,OACvB,QAAQA,GAAA,YAAAA,EAAe,SAAU,YACjC,IAAKA,GAAA,YAAAA,EAAe,IACpB,QAAAE,EACA,iBAAkBC,EAAUD,CAAO,CACpC,EAED,MAAM,IAAI,MAAM,qCAAqC,CAEzD,EAEO,SAASE,EAAmBL,EAAM,CACvC,KAAM,CACJ,GAAAM,EACA,OAAAC,EACA,IAAAC,EACA,SAAAC,EACA,eAAAC,EACA,qBAAAC,EACA,mBAAAC,EACA,SAAAC,EACA,WAAAC,EACA,WAAAC,EACA,aAAAC,EACA,QAAAC,EACA,UAAAC,EACA,cAAAC,EACA,WAAAC,EACA,WAAAC,EACA,WAAAC,EACA,aAAAC,EACA,eAAAC,EACA,OAAAC,CACJ,EAAMzB,EAEE0B,EAAiBnB,GAAA,YAAAA,EAAQ,MAAM,IACrC,IAAIoB,EAAaT,GAAa,GAE9B,OAAIS,GAAA,YAAAA,EAAY,QAAS,KACvBA,EAAaA,EAAW,MAAM,EAAG,EAAE,EAAI,OAElC,CACL,GAAArB,EACA,WAAYM,EACZ,SAAUD,EACV,eAAgB,CACd,GAAII,EACJ,KAAMC,CACP,EACD,WAAY,CACV,GAAIC,EACJ,SAAUC,IAAc,GAAKU,EAAS,UAACC,EAAS,UAAC,GAAGX,GAAA,YAAAA,EAAW,MAAM,IAAIC,GAAA,YAAAA,EAAe,MAAM,GAAG,CAAC,EAAI,IACtG,KAAMD,IAAc,GAAK,IAAMU,EAAAA,UAAUC,EAAAA,UAAUX,CAAS,CAAC,EAC7D,SAAUU,EAAS,UAACC,YAAUV,CAAa,CAAC,EAC5C,MAAOC,EACP,MAAOC,EACP,SAAUG,IAAmB,GAAK,IAAMM,EAAUN,CAAc,EAChE,KAAMA,IAAmB,GAAK,IAAMO,EAAO,IAAI,KAAKtB,CAAQ,EAAG,aAAa,EAC5E,KAAMe,IAAmB,GAAK,IAAMO,EAAO,IAAI,KAAKtB,CAAQ,EAAG,GAAG,EAClE,WAAYT,GAAA,MAAAA,EAAM,kBAAmBA,GAAA,YAAAA,EAAM,mBAAoB,GAAK8B,EAAU9B,GAAA,YAAAA,EAAM,eAAe,EAAI,IACxG,EACD,cAAe,CACb,GAAIsB,EACJ,KAAMC,CACP,EACD,WAAYhB,EACZ,iBAAkByB,EAAkBzB,CAAM,EAC1C,qBAAsB0B,EAA0B1B,CAAM,EACtD,gBAAgBoB,GAAA,YAAAA,EAAY,eAAgB,IAAMD,EAClD,QAASA,EACT,WAAYhB,EACZ,SAAUoB,EAAUrB,CAAQ,EAC5B,aAAcA,EAAWsB,EAAO,IAAI,KAAKtB,CAAQ,EAAG,aAAa,EAAI,GACrE,aAAcA,EAAWsB,EAAO,IAAI,KAAKtB,CAAQ,EAAG,GAAG,EAAI,GAC3D,IAAKD,EACL,SAAUA,IAAQ,IAAM,CAACA,EAAM,UAAY,UAC3C,OAAQ,CACN,GAAIK,EACJ,KAAMC,CACP,EACD,WAAY,CACV,UAAUd,GAAA,YAAAA,EAAM,SAAU,YAC1B,MAAMA,GAAA,YAAAA,EAAM,SAAU,YAAc,YAAc,SACnD,CACF,CACH,CC7FY,MAACkC,EAAeC,GAAS,CACnC,MAAMC,EAAiBlC,EAAeiC,GAAA,YAAAA,EAAO,WAAYA,GAAA,YAAAA,EAAO,EAAE,EAClE,GAAIC,GAAkB,MAAM,QAAQA,CAAc,EAAG,CACnD,MAAMC,EAAeD,GAAA,YAAAA,EAAgB,IAAIpC,GAAQK,EAAmBL,CAAI,GACxE,OAAAqC,GAAA,MAAAA,EAAc,KAAK,CAACC,EAAGC,IAAC,WAAK,OAAAC,GAAAC,EAAAH,GAAA,YAAAA,EAAG,aAAH,YAAAG,EAAe,WAAf,YAAAD,EAAyB,eAAcE,EAAAH,GAAA,YAAAA,EAAG,aAAH,YAAAG,EAAe,YAC5EC,EAA4BN,EAAc,KAAM,gBAAgB,GAAK,CAAE,CAC/E,CAED,MAAM,IAAI,MAAM,mCAAmC,CACrD"}
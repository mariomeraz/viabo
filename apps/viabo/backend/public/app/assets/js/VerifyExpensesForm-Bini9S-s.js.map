{"version":3,"file":"VerifyExpensesForm-Bini9S-s.js","sources":["../../../../../frontend/src/app/business/shared/services/SharedCardRepository.js","../../../../../frontend/src/app/business/shared/hooks/useVerifyExpensesMovements.js","../../../../../frontend/src/app/business/shared/components/card-movements/verify-expenses/ExpensesResume.jsx","../../../../../frontend/src/app/business/shared/adapters/verify-expenses-adapter.js","../../../../../frontend/src/app/business/shared/components/card-movements/verify-expenses/VerifyExpensesForm.jsx"],"sourcesContent":["import { axios } from '@/shared/interceptors'\r\n\r\nexport const verifyExpenses = async expenses => {\r\n  const { data } = await axios.post('/api/card/add/receipt', expenses)\r\n  return data\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { DASHBOARD_MASTER_KEYS } from '../../dashboard-master/adapters/dashboardMasterKeys'\r\nimport { CARDS_COMMERCES_KEYS } from '../../viabo-card/cards/adapters'\r\nimport { verifyExpenses } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useVerifyExpensesMovements = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const verify = useMutation({\r\n    mutationFn: verifyExpenses,\r\n    ...options\r\n  })\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, ...mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(verify.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Comprobando movimientos ...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([DASHBOARD_MASTER_KEYS.MOVEMENTS])\r\n            client.invalidateQueries([CARDS_COMMERCES_KEYS.CARD_MOVEMENTS])\r\n            isFunction(onSuccess) && onSuccess(data)\r\n            return 'Se creó la comprobación con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...verify,\r\n    mutate\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n  Box,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  styled\r\n} from '@mui/material'\r\n\r\nimport { Scrollbar } from '@/shared/components/scroll'\r\nimport { fCurrency } from '@/shared/utils'\r\n\r\nconst RowResultStyle = styled(TableRow)(({ theme }) => ({\r\n  '& td': {\r\n    paddingTop: theme.spacing(0.5),\r\n    paddingBottom: theme.spacing(0.5)\r\n  }\r\n}))\r\n\r\nconst ExpensesResume = ({ movements = [] }) => {\r\n  const total = useMemo(\r\n    () =>\r\n      movements?.reduce((accumulator, currentObject) => {\r\n        const amountValue = currentObject?.amount ? currentObject?.amount : 0\r\n\r\n        if (!isNaN(amountValue)) {\r\n          return accumulator + amountValue\r\n        } else {\r\n          return accumulator\r\n        }\r\n      }, 0),\r\n    [movements]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Scrollbar sx={{ maxHeight: 400 }}>\r\n        <TableContainer sx={{ minWidth: 200 }}>\r\n          <Table>\r\n            <TableHead\r\n              sx={{\r\n                borderBottom: theme => `solid 1px ${theme.palette.divider}`\r\n              }}\r\n            >\r\n              <TableRow>\r\n                <TableCell width={40}>#</TableCell>\r\n                <TableCell sx={{ minWidth: 150 }} align=\"left\">\r\n                  Movimiento\r\n                </TableCell>\r\n                <TableCell align=\"left\">Fecha</TableCell>\r\n                <TableCell align=\"right\">Monto</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {movements?.map((row, index) => (\r\n                <TableRow\r\n                  key={index}\r\n                  sx={{\r\n                    borderBottom: theme => `solid 1px ${theme.palette.divider}`\r\n                  }}\r\n                >\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Box sx={{ maxWidth: 200 }}>\r\n                      <Typography variant=\"subtitle2\">{row?.description}</Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"subtitle2\">{row?.date}</Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{fCurrency(row?.amount)}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n      <Stack justifyContent={'flex-end'} direction={'row'}>\r\n        <Stack direction={'row'} spacing={2} px={2}>\r\n          <Typography variant=\"h6\">Total</Typography>\r\n          <Typography variant=\"h6\">{fCurrency(total)}</Typography>\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  )\r\n}\r\n\r\nExpensesResume.propTypes = {\r\n  movements: PropTypes.array\r\n}\r\n\r\nexport default ExpensesResume\r\n","export const VerifyExpensesAdapter = (data, movements) => {\r\n  const { files, note, method, singleFile } = data\r\n\r\n  const isInvoice = method === 'invoice'\r\n  const formData = new FormData()\r\n\r\n  if (isInvoice) {\r\n    files?.forEach(file => {\r\n      formData.append('files[]', file)\r\n    })\r\n  }\r\n\r\n  if (!isInvoice && singleFile) {\r\n    formData.append('files[]', singleFile)\r\n  }\r\n\r\n  const movementsAdapted =\r\n    movements?.map(movement => ({\r\n      ...movement?.original\r\n    })) || []\r\n\r\n  formData.append('movements', JSON.stringify(movementsAdapted))\r\n  formData.append('note', note)\r\n  formData.append('isInvoice', isInvoice)\r\n\r\n  return formData\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, Stack, Typography } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport ExpensesResume from './ExpensesResume'\r\n\r\nimport { VerifyExpensesAdapter } from '../../../adapters'\r\nimport { useVerifyExpensesMovements } from '../../../hooks'\r\n\r\nimport { FormProvider, RFTextField, RFUploadMultiFile, RFUploadSingleFile } from '@/shared/components/form'\r\nimport { Scrollbar } from '@/shared/components/scroll'\r\n\r\nconst VerifyExpensesForm = ({ movements = [], onSuccess }) => {\r\n  const { mutate, isLoading } = useVerifyExpensesMovements()\r\n\r\n  const ValidationSchema = Yup.object().shape({\r\n    note: Yup.string().when(['method', 'singleFile'], {\r\n      is: (method, singleFile) => method !== 'invoice' && !singleFile,\r\n      then: schema => schema.trim().required('La nota es requerida cuando no existe un archivo.'),\r\n      otherwise: schema => Yup.string()\r\n    }),\r\n    method: Yup.string(),\r\n    files: Yup.array().when('method', {\r\n      is: 'invoice',\r\n      then: schema =>\r\n        schema\r\n          .max(2, 'Cargar máximo 2 archivos por factura.')\r\n          .test('fileFormat', 'Se requiere el archivo PDF y XML de la factura.', function (files) {\r\n            const pdfCount = files.filter(file => file.type === 'application/pdf').length\r\n            const xmlCount = files.filter(file => ['text/xml', 'application/xml'].includes(file.type)).length\r\n            return pdfCount === 1 && xmlCount === 1\r\n          }),\r\n      otherwise: schema => Yup.array()\r\n    }),\r\n    singleFile: Yup.mixed().when('method', {\r\n      is: method => method !== 'invoice',\r\n      then: schema =>\r\n        schema.when(['method', 'note'], {\r\n          is: (method, note) => method !== 'invoice' && !note,\r\n          then: schema => schema.required('El archivo es requerido cuando no hay una nota.'),\r\n          otherwise: schema => Yup.mixed().nullable()\r\n        }),\r\n      otherwise: schema => Yup.mixed().nullable()\r\n    })\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      note: '',\r\n      method: 'invoice',\r\n      files: [],\r\n      singleFile: null\r\n    },\r\n    validationSchema: ValidationSchema,\r\n    onSubmit: (values, { setSubmitting, setFieldValue }) => {\r\n      const data = VerifyExpensesAdapter(values, movements)\r\n      mutate(data, {\r\n        onSuccess: () => {\r\n          onSuccess()\r\n          setSubmitting(false)\r\n        },\r\n        onError: () => {\r\n          setFieldValue('files', [])\r\n          setFieldValue('singleFile', null)\r\n          setSubmitting(false)\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const { values, setFieldValue, setTouched, isSubmitting } = formik\r\n\r\n  const isInvoice = values.method === 'invoice'\r\n\r\n  return (\r\n    <Scrollbar containerProps={{ sx: { flexGrow: 0, height: 'auto' } }}>\r\n      <ExpensesResume movements={movements} />\r\n      <FormProvider formik={formik}>\r\n        <Stack spacing={2} sx={{ p: 3 }}>\r\n          <Stack>\r\n            <FormControl disabled={isLoading}>\r\n              <FormLabel id=\"demo-row-radio-buttons-group-label\"> Seleccione el método de comprobación:</FormLabel>\r\n              <RadioGroup\r\n                value={values.method}\r\n                onChange={e => {\r\n                  setFieldValue('method', e.target.value)\r\n                  setFieldValue('files', [])\r\n                  setFieldValue('singleFile', null)\r\n                  setTouched({}, false)\r\n                }}\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n              >\r\n                <FormControlLabel value=\"invoice\" control={<Radio />} label=\"Factura (XML y PDF)\" />\r\n                <FormControlLabel value=\"image\" control={<Radio />} label=\"Nota o archivo (Imagen o PDF)\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Stack>\r\n\r\n          {!isInvoice && (\r\n            <Stack spacing={1}>\r\n              <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                Nota:\r\n              </Typography>\r\n\r\n              <RFTextField name={'note'} multiline rows={1} placeholder={'Motivo de la comprobación...'} />\r\n            </Stack>\r\n          )}\r\n\r\n          <Stack spacing={1}>\r\n            <Typography variant=\"overline\" sx={{ color: 'text.disabled', width: 1 }}>\r\n              Archivos (Max - 3MB):\r\n            </Typography>\r\n            {isInvoice ? (\r\n              <RFUploadMultiFile\r\n                name={'files'}\r\n                maxSize={3145728}\r\n                accept={{\r\n                  'application/pdf': ['.pdf'],\r\n                  'application/xml': ['.xml'],\r\n                  'text/xml': ['.xml']\r\n                }}\r\n                {...(isInvoice ? { maxFiles: 2 } : {})}\r\n              />\r\n            ) : (\r\n              <RFUploadSingleFile\r\n                name={'singleFile'}\r\n                maxSize={3145728}\r\n                accept={{\r\n                  'image/*': ['.jpeg', '.jpg', '.png'],\r\n                  'application/pdf': ['.pdf']\r\n                }}\r\n              />\r\n            )}\r\n          </Stack>\r\n\r\n          <Stack sx={{ pt: 1 }}>\r\n            <LoadingButton\r\n              loading={isLoading || isSubmitting}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              type=\"submit\"\r\n            >\r\n              Comprobar\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Scrollbar>\r\n  )\r\n}\r\n\r\nVerifyExpensesForm.propTypes = {\r\n  movements: PropTypes.array,\r\n  onSuccess: PropTypes.func\r\n}\r\n\r\nexport default VerifyExpensesForm\r\n"],"names":["verifyExpenses","expenses","data","axios","useVerifyExpensesMovements","options","client","useQueryClient","verify","useMutation","formData","onSuccess","onError","mutationOptions","toast","DASHBOARD_MASTER_KEYS","CARDS_COMMERCES_KEYS","isFunction","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode","styled","TableRow","theme","paddingTop","spacing","paddingBottom","ExpensesResume","movements","total","useMemo","reduce","accumulator","currentObject","amountValue","amount","isNaN","jsxs","Fragment","jsx","Scrollbar","maxHeight","TableContainer","minWidth","Table","TableHead","borderBottom","palette","divider","TableCell","TableBody","map","row","index","Box","maxWidth","Typography","description","date","fCurrency","Stack","propTypes","PropTypes","array","VerifyExpensesAdapter","files","note","method","singleFile","isInvoice","file","movementsAdapted","movement","VerifyExpensesForm","mutate","isLoading","ValidationSchema","Yup","shape","when","is","then","schema","trim","required","otherwise","max","test","pdfCount","filter","type","length","xmlCount","includes","mixed","nullable","formik","useFormik","initialValues","validationSchema","onSubmit","values","setSubmitting","setFieldValue","setTouched","isSubmitting","sx","flexGrow","height","FormProvider","p","FormControl","FormLabel","RadioGroup","e","target","value","FormControlLabel","Radio","color","RFTextField","width","RFUploadMultiFile","maxFiles","RFUploadSingleFile","pt","LoadingButton","func"],"mappings":"kyBAEO,MAAMA,GAAiB,MAAMC,GAAY,CAC9C,KAAM,CAAE,KAAAC,CAAI,EAAK,MAAMC,EAAM,KAAK,wBAAyBF,CAAQ,EACnE,OAAOC,CACT,ECKaE,GAA6B,CAACC,EAAU,KAAO,CAC1D,MAAMC,EAASC,EAAgB,EACzBC,EAASC,EAAY,CACzB,WAAYT,GACZ,GAAGK,CACP,CAAG,EA4BD,MAAO,CACL,GAAGG,EACH,OA7Ba,MAAOE,EAAUL,IAAY,CAC1C,KAAM,CAAE,UAAAM,EAAW,QAAAC,EAAS,GAAGC,CAAiB,EAAGR,EAEnD,GAAI,CACF,MAAMS,EAAM,QAAQN,EAAO,YAAYE,EAAUG,CAAe,EAAG,CACjE,QAAS,8BACT,QAAS,CACP,OAAO,CAAE,KAAAX,GAAQ,CACf,OAAAI,EAAO,kBAAkB,CAACS,EAAsB,SAAS,CAAC,EAC1DT,EAAO,kBAAkB,CAACU,EAAqB,cAAc,CAAC,EAC9DC,EAAWN,CAAS,GAAKA,EAAUT,CAAI,EAChC,mCACR,CACF,CACT,CAAO,CACF,OAAQgB,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDD,EAAWL,CAAO,GAAKA,EAAQO,CAAc,EAC7CL,EAAM,MAAMK,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH,EC3BuBI,EAAOC,CAAQ,EAAE,CAAC,CAAEC,MAAAA,CAAM,KAAO,CACtD,OAAQ,CACNC,WAAYD,EAAME,QAAQ,EAAG,EAC7BC,cAAeH,EAAME,QAAQ,EAAG,CAClC,CACF,EAAE,EAEF,MAAME,EAAiBA,CAAC,CAAEC,UAAAA,EAAY,CAAA,CAAG,IAAM,CAC7C,MAAMC,EAAQC,EAAAA,QACZ,IACEF,GAAAA,YAAAA,EAAWG,OAAO,CAACC,EAAaC,IAAkB,CAChD,MAAMC,EAAcD,GAAAA,MAAAA,EAAeE,OAASF,GAAAA,YAAAA,EAAeE,OAAS,EAEhE,OAACC,MAAMF,CAAW,EAGbF,EAFAA,EAAcE,CAItB,EAAA,GACL,CAACN,CAAS,CACZ,EAEA,OAEIS,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,MAACC,GAAU,GAAI,CAAEC,UAAW,GAAI,EAC9B,SAACF,EAAAA,IAAAG,EAAA,CAAe,GAAI,CAAEC,SAAU,GAAI,EAClC,gBAACC,EACC,CAAA,SAAA,CAAAL,MAACM,GACC,GAAI,CACFC,aAAcvB,GAAU,aAAYA,EAAMwB,QAAQC,OAAQ,EAC5D,EAEA,gBAAC1B,EACC,CAAA,SAAA,CAACiB,EAAA,IAAAU,EAAA,CAAU,MAAO,GAAI,SAAC,IAAA,EACvBV,MAACU,GAAU,GAAI,CAAEN,SAAU,GAAI,EAAG,MAAM,OAAO,SAE/C,YAAA,CAAA,EACCJ,EAAA,IAAAU,EAAA,CAAU,MAAM,OAAO,SAAK,QAAA,EAC5BV,EAAA,IAAAU,EAAA,CAAU,MAAM,QAAQ,SAAK,QAAA,CAAA,CAAA,CAChC,CACF,CAAA,EAEAV,EAAAA,IAACW,GACEtB,SAAWuB,GAAAA,YAAAA,EAAAA,IAAI,CAACC,EAAKC,IACnBhB,EAAAA,KAAAf,EAAA,CAEC,GAAI,CACFwB,aAAcvB,GAAU,aAAYA,EAAMwB,QAAQC,OAAQ,EAG5D,EAAA,SAAA,CAACT,EAAAA,IAAAU,EAAA,CAAWI,WAAQ,CAAE,CAAA,QACrBJ,EAAU,CAAA,MAAM,OACf,SAAAV,EAAA,IAACe,GAAI,GAAI,CAAEC,SAAU,GAAI,EACvB,eAACC,EAAW,CAAA,QAAQ,YAAaJ,SAAKK,GAAAA,YAAAA,EAAAA,YAAY,EACpD,CACF,CAAA,EACAlB,EAAAA,IAACU,GACC,SAACV,EAAAA,IAAAiB,EAAA,CAAW,QAAQ,YAAaJ,SAAAA,GAAAA,YAAAA,EAAKM,KAAK,CAC7C,CAAA,QACCT,EAAU,CAAA,MAAM,QAASU,SAAUP,EAAAA,GAAAA,YAAAA,EAAKjB,MAAM,EAAE,CAAA,GAd5CkB,CAeP,GAEJ,CAAA,CACF,CAAA,CACF,CAAA,EACF,EACCd,EAAA,IAAAqB,EAAA,CAAM,eAAgB,WAAY,UAAW,MAC5C,SAACvB,EAAAA,KAAAuB,EAAA,CAAM,UAAW,MAAO,QAAS,EAAG,GAAI,EACvC,SAAA,CAACrB,EAAA,IAAAiB,EAAA,CAAW,QAAQ,KAAK,SAAK,QAAA,QAC7BA,EAAW,CAAA,QAAQ,KAAMG,SAAAA,EAAU9B,CAAK,EAAE,CAAA,CAAA,CAC7C,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,EAEAF,EAAekC,UAAY,CACzBjC,UAAWkC,EAAUC,KACvB,EClGO,MAAMC,GAAwB,CAAC/D,EAAM2B,IAAc,CACxD,KAAM,CAAE,MAAAqC,EAAO,KAAAC,EAAM,OAAAC,EAAQ,WAAAC,CAAY,EAAGnE,EAEtCoE,EAAYF,IAAW,UACvB1D,EAAW,IAAI,SAEjB4D,IACFJ,GAAA,MAAAA,EAAO,QAAQK,GAAQ,CACrB7D,EAAS,OAAO,UAAW6D,CAAI,CACrC,IAGM,CAACD,GAAaD,GAChB3D,EAAS,OAAO,UAAW2D,CAAU,EAGvC,MAAMG,GACJ3C,GAAA,YAAAA,EAAW,IAAI4C,IAAa,CAC1B,GAAGA,GAAA,YAAAA,EAAU,QACd,MAAM,CAAE,EAEX,OAAA/D,EAAS,OAAO,YAAa,KAAK,UAAU8D,CAAgB,CAAC,EAC7D9D,EAAS,OAAO,OAAQyD,CAAI,EAC5BzD,EAAS,OAAO,YAAa4D,CAAS,EAE/B5D,CACT,ECXMgE,GAAqBA,CAAC,CAAE7C,UAAAA,EAAY,CAAE,EAAElB,UAAAA,CAAU,IAAM,CACtD,KAAA,CAAEgE,OAAAA,EAAQC,UAAAA,GAAcxE,GAA2B,EAEnDyE,EAAmBC,EAAW,EAAEC,MAAM,CAC1CZ,KAAMW,EAAW,EAAEE,KAAK,CAAC,SAAU,YAAY,EAAG,CAChDC,GAAIA,CAACb,EAAQC,IAAeD,IAAW,WAAa,CAACC,EACrDa,KAAgBC,GAAAA,EAAOC,KAAK,EAAEC,SAAS,mDAAmD,EAC1FC,UAAqBR,GAAAA,EAAW,CAAA,CACjC,EACDV,OAAQU,EAAW,EACnBZ,MAAOY,EAAU,EAAEE,KAAK,SAAU,CAChCC,GAAI,UACJC,KACEC,GAAAA,EACGI,IAAI,EAAG,uCAAuC,EAC9CC,KAAK,aAAc,kDAAmD,SAAUtB,EAAO,CACtF,MAAMuB,EAAWvB,EAAMwB,UAAenB,EAAKoB,OAAS,iBAAiB,EAAEC,OACjEC,EAAW3B,EAAMwB,OAAOnB,GAAQ,CAAC,WAAY,iBAAiB,EAAEuB,SAASvB,EAAKoB,IAAI,CAAC,EAAEC,OACpFH,OAAAA,IAAa,GAAKI,IAAa,CAAA,CACvC,EACLP,UAAqBR,GAAAA,EAAU,CAAA,CAChC,EACDT,WAAYS,EAAU,EAAEE,KAAK,SAAU,CACrCC,MAAcb,IAAW,UACzBc,KACEC,GAAAA,EAAOH,KAAK,CAAC,SAAU,MAAM,EAAG,CAC9BC,GAAIA,CAACb,EAAQD,IAASC,IAAW,WAAa,CAACD,EAC/Ce,KAAMC,GAAUA,EAAOE,SAAS,iDAAiD,EACjFC,UAAWH,GAAUL,EAAIiB,EAAQC,SAAS,CAAA,CAC3C,EACHV,UAAWH,GAAUL,EAAIiB,EAAQC,SAAS,CAAA,CAC3C,CAAA,CACF,EAEKC,EAASC,EAAU,CACvBC,cAAe,CACbhC,KAAM,GACNC,OAAQ,UACRF,MAAO,CAAE,EACTG,WAAY,IACd,EACA+B,iBAAkBvB,EAClBwB,SAAUA,CAACC,EAAQ,CAAEC,cAAAA,EAAeC,cAAAA,CAAAA,IAAoB,CAChDtG,MAAAA,EAAO+D,GAAsBqC,EAAQzE,CAAS,EACpD8C,EAAOzE,EAAM,CACXS,UAAWA,IAAM,CACLA,IACV4F,EAAc,EAAK,CACrB,EACA3F,QAASA,IAAM,CACb4F,EAAc,QAAS,CAAA,CAAE,EACzBA,EAAc,aAAc,IAAI,EAChCD,EAAc,EAAK,CACrB,CAAA,CACD,CACH,CAAA,CACD,EAEK,CAAED,OAAAA,EAAQE,cAAAA,EAAeC,WAAAA,EAAYC,aAAAA,CAAiBT,EAAAA,EAEtD3B,EAAYgC,EAAOlC,SAAW,UAGlC,OAAA9B,EAAA,KAACG,GAAU,eAAgB,CAAEkE,GAAI,CAAEC,SAAU,EAAGC,OAAQ,MAAO,CAC7D,EAAA,SAAA,CAAArE,MAACZ,GAAe,UAAAC,EAAwB,QACvCiF,EAAa,CAAA,OAAAb,EACZ,gBAACpC,EAAM,CAAA,QAAS,EAAG,GAAI,CAAEkD,EAAG,CAC1B,EAAA,SAAA,CAAAvE,MAACqB,EACC,CAAA,SAAAvB,EAAAA,KAAC0E,EAAY,CAAA,SAAUpC,EACrB,SAAA,CAACpC,EAAA,IAAAyE,EAAA,CAAU,GAAG,qCAAqC,SAAsC,yCAAA,SACxFC,EACC,CAAA,MAAOZ,EAAOlC,OACd,SAAe+C,GAAA,CACCX,EAAA,SAAUW,EAAEC,OAAOC,KAAK,EACxBb,EAAA,QAAS,CAAA,CAAE,EACzBA,EAAc,aAAc,IAAI,EACrBC,EAAA,CAAA,EAAI,EAAK,CAAA,EAEtB,IAAG,GACH,kBAAgB,qCAChB,KAAK,0BAEL,SAAA,CAACjE,EAAAA,IAAA8E,EAAA,CAAiB,MAAM,UAAU,cAAUC,EAAQ,CAAA,CAAA,EAAE,MAAM,qBAAwB,CAAA,EACpF/E,EAAAA,IAAC8E,GAAiB,MAAM,QAAQ,QAAU9E,MAAA+E,EAAA,CAAQ,CAAA,EAAE,MAAM,+BAAkC,CAAA,CAAA,EAC9F,CAAA,CAAA,CACF,CACF,CAAA,EAEC,CAACjD,GACChC,EAAAA,KAAAuB,EAAA,CAAM,QAAS,EACd,SAAA,CAAArB,EAAA,IAACiB,EAAW,CAAA,UAAS,GAAC,QAAQ,WAAW,GAAI,CAAE+D,MAAO,eAAA,EAAmB,SAEzE,QAAA,EAEAhF,EAAAA,IAACiF,GAAY,KAAM,OAAQ,UAAS,GAAC,KAAM,EAAG,YAAa,8BAAkC,CAAA,CAAA,EAC/F,EAGFnF,EAAAA,KAACuB,EAAM,CAAA,QAAS,EACd,SAAA,CAACrB,EAAAA,IAAAiB,EAAA,CAAW,QAAQ,WAAW,GAAI,CAAE+D,MAAO,gBAAiBE,MAAO,CAAA,EAAK,SAEzE,wBAAA,EACCpD,EACE9B,EAAAA,IAAAmF,GAAA,CACC,KAAM,QACN,QAAS,QACT,OAAQ,CACN,kBAAmB,CAAC,MAAM,EAC1B,kBAAmB,CAAC,MAAM,EAC1B,WAAY,CAAC,MAAM,CACrB,EACKrD,GAAAA,EAAY,CAAEsD,SAAU,CAAA,EAAM,CAAC,CAAA,GAGtCpF,EAAAA,IAACqF,IACC,KAAM,aACN,QAAS,QACT,OAAQ,CACN,UAAW,CAAC,QAAS,OAAQ,MAAM,EACnC,kBAAmB,CAAC,MAAM,CAAA,KAIlC,EAEArF,MAACqB,GAAM,GAAI,CAAEiE,GAAI,CAAA,EACf,SAAAtF,EAAA,IAACuF,EACC,CAAA,QAASnD,GAAa8B,EACtB,QAAQ,YACR,MAAM,UACN,UAAS,GACT,KAAK,SACN,oBAED,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,EAEAhC,GAAmBZ,UAAY,CAC7BjC,UAAWkC,EAAUC,MACrBrD,UAAWoD,EAAUiE,IACvB"}
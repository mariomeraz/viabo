{"version":3,"mappings":"slBASO,MAAMA,EAAkC,CAACC,EAAU,KAAO,CAC/D,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAAS,IAAI,EAE7CC,EAAQC,EAAS,CACrB,SAAU,CAACC,EAAuB,4BAA4B,EAC9D,QAAS,CAAC,CAAE,OAAAC,CAAQ,IAAKC,EAAkC,EAC3D,qBAAsB,GACtB,MAAO,GACP,UAAW,IACX,GAAGR,CACP,CAAG,EAEDS,mBAAU,IAAM,CACd,GAAIL,GAAA,MAAAA,EAAO,QAAS,CAClB,MAAMM,EAAeC,EACnBP,EAAM,MACN,mFACD,EACDF,EAAeQ,CAAY,CAC5B,CACF,EAAE,CAACN,EAAM,QAASA,EAAM,KAAK,CAAC,EAExB,CACL,GAAGA,EACH,MAAOH,GAAe,IACvB,CACH,ECtBMW,EAAwBC,EAAQC,OAAK,UAAM,OAAO,qCAAyB,wDAAC,CAAC,EAE7EC,EAA0BA,IAAM,CAC9B,MAAEC,oBAAmBC,2BAA0BC,qBAAsBC,EAAwB,EAC7FC,EAAaD,EAAiCE,KAAMD,UAAU,EAE9D,CAAEE,KAAMC,EAAOC,YAAWC,UAASC,QAAOC,WAAY5B,EAAgC,CAAE6B,QAAS,GAAO,EAE9GnB,YAAU,IAAM,CACVO,GACMW,GACV,EACC,CAACX,CAAiB,CAAC,EAEtB,MAAMa,EAAcA,IAAM,CACxBZ,EAAyB,EAAK,EAC9BC,EAAkB,IAAI,GAGxB,aACGY,EACC,MAAMd,EACN,YAAAa,EACA,mBACGE,EACC,UAAAC,EAAA,IAACC,GAAW,QAAS,KAAOb,WAAa,0BAA4B,yBAAyB,CAChG,GAGF,SAAAY,MAACE,GAAU,eAAgB,CAAEC,GAAI,CAAEC,SAAU,EAAGC,OAAQ,MAAO,GAC7D,SAACC,EAAA,KAAAP,EAAA,CAAM,QAAS,EAAG,EAAG,EACnBP,mBAAce,MACdd,GAAW,CAACD,GACXQ,MAACQ,EAAiB,cAAcd,EAAO,aAAc,oBAAqB,aAAc,IAAMC,MAE/F,CAACF,GAAW,CAACD,GAAaR,GACxBgB,MAAApB,EAAA,CAAsB,WAAYW,EAAO,UAAWM,EAAa,WAAAT,KAEtE,EACF,CACF,EAEJ","names":["useFindSpeiAdminCostCenterUsers","options","customError","setCustomError","useState","query","useQuery","SPEI_COST_CENTERS_KEYS","signal","getViaboSpeiAdminCostCenterUsers","useEffect","errorMessage","getErrorAPI","SpeiNewCostCenterForm","Lodable","lazy","SpeiNewCostCenterDrawer","openNewCostCenter","setOpenNewSpeiCostCenter","setSpeiCostCenter","useSpeiCostCentersStore","costCenter","state","data","users","isLoading","isError","error","refetch","enabled","handleClose","RightPanel","Stack","jsx","Typography","Scrollbar","sx","flexGrow","height","jsxs","RequestLoadingComponent","ErrorRequestPage"],"sources":["../../../../../frontend/src/app/business/viabo-spei/cost-centers/hooks/useFindSpeiAdminCostCenterUsers.js","../../../../../frontend/src/app/business/viabo-spei/cost-centers/components/new-cost-center/SpeiNewCostCenterDrawer.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\n\r\nimport { SPEI_COST_CENTERS_KEYS } from '../adapters'\r\nimport { getViaboSpeiAdminCostCenterUsers } from '../services'\r\n\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindSpeiAdminCostCenterUsers = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [SPEI_COST_CENTERS_KEYS.USERS_ADMIN_COST_CENTER_LIST],\r\n    queryFn: ({ signal }) => getViaboSpeiAdminCostCenterUsers(),\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener la lista de usuarios. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { lazy, useEffect } from 'react'\r\n\r\nimport { Stack, Typography } from '@mui/material'\r\n\r\nimport { useFindSpeiAdminCostCenterUsers } from '../../hooks'\r\nimport { useSpeiCostCentersStore } from '../../store'\r\n\r\nimport { RightPanel } from '@/app/shared/components'\r\nimport { RequestLoadingComponent } from '@/shared/components/loadings'\r\nimport { Lodable } from '@/shared/components/lodables'\r\nimport { ErrorRequestPage } from '@/shared/components/notifications'\r\nimport { Scrollbar } from '@/shared/components/scroll'\r\n\r\nconst SpeiNewCostCenterForm = Lodable(lazy(() => import('./SpeiNewCostCenterForm')))\r\n\r\nconst SpeiNewCostCenterDrawer = () => {\r\n  const { openNewCostCenter, setOpenNewSpeiCostCenter, setSpeiCostCenter } = useSpeiCostCentersStore()\r\n  const costCenter = useSpeiCostCentersStore(state => state.costCenter)\r\n\r\n  const { data: users, isLoading, isError, error, refetch } = useFindSpeiAdminCostCenterUsers({ enabled: false })\r\n\r\n  useEffect(() => {\r\n    if (openNewCostCenter) {\r\n      refetch()\r\n    }\r\n  }, [openNewCostCenter])\r\n\r\n  const handleClose = () => {\r\n    setOpenNewSpeiCostCenter(false)\r\n    setSpeiCostCenter(null)\r\n  }\r\n\r\n  return (\r\n    <RightPanel\r\n      open={openNewCostCenter}\r\n      handleClose={handleClose}\r\n      titleElement={\r\n        <Stack>\r\n          <Typography variant={'h6'}>{costCenter ? 'Editar Centro de Costos' : 'Nuevo Centro de Costos'}</Typography>\r\n        </Stack>\r\n      }\r\n    >\r\n      <Scrollbar containerProps={{ sx: { flexGrow: 0, height: 'auto' } }}>\r\n        <Stack spacing={3} p={3}>\r\n          {isLoading && <RequestLoadingComponent />}\r\n          {isError && !isLoading && (\r\n            <ErrorRequestPage errorMessage={error} titleMessage={'Lista de Usuarios'} handleButton={() => refetch()} />\r\n          )}\r\n          {!isError && !isLoading && openNewCostCenter && (\r\n            <SpeiNewCostCenterForm adminUsers={users} onSuccess={handleClose} costCenter={costCenter} />\r\n          )}\r\n        </Stack>\r\n      </Scrollbar>\r\n    </RightPanel>\r\n  )\r\n}\r\n\r\nexport default SpeiNewCostCenterDrawer\r\n"],"file":"assets/js/SpeiNewCostCenterDrawer-CVirwvbw.js"}